----------------------------------------------------------------------------------
-- Company: 
-- Engineer: Teymoor Ali
-- 
-- Create Date: 27.08.2024 23:12:53
-- Design Name: 
-- Module Name: hidden_layer - Behavioral
-- Project Name: 
-- Target Devices: 
-- Tool Versions: 
-- Description: 
-- 
-- Dependencies: 
-- 
-- Revision:
-- Revision 0.01 - File Created
-- Additional Comments:
-- 
----------------------------------------------------------------------------------

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;

entity hidden_layer is
    generic (
        WEIGHT_WIDTH        : integer := 32;      -- Bit-width of each weight
        POTENTIAL_WIDTH     : integer := 48;      -- Bit-width of the neuron's membrane potential
        NUM_PREV_LAYER_NEURONS : integer;         -- Number of neurons in the previous layer
        NUM_CURR_LAYER_NEURONS : integer          -- Number of neurons in the current layer
    );
    port (
        clk                 : in  std_logic;      -- Clock signal
        reset               : in  std_logic;      -- Reset signal
        enable              : in  std_logic;      -- Enable signal
        
        -- Weight memory write port
        weight_addr         : in  std_logic_vector(9 downto 0); -- Address for writing weights
        weight_data         : in  std_logic_vector(NUM_CURR_LAYER_NEURONS * WEIGHT_WIDTH - 1 downto 0); -- Data for writing weights
        weight_write_enable : in  std_logic;      -- Enable signal for writing weights
        
        prev_layer_spikes   : in  std_logic_vector(NUM_PREV_LAYER_NEURONS - 1 downto 0); -- Spike signals from the previous layer
        curr_layer_spikes   : out std_logic_vector(NUM_CURR_LAYER_NEURONS - 1 downto 0)  -- Spike signals generated by the current layer
    );
end hidden_layer;

architecture Behavioral of hidden_layer is
begin

    gen_neurons: for neuron_idx in 0 to NUM_CURR_LAYER_NEURONS - 1 generate
        u_neuron: entity work.neuron
            generic map (
                NUM_PREV_LAYER_NEURONS => NUM_PREV_LAYER_NEURONS,
                POTENTIAL_WIDTH        => POTENTIAL_WIDTH,
                WEIGHT_WIDTH           => WEIGHT_WIDTH
            )
            port map (
                clk                 => clk,
                reset               => reset,
                enable              => enable,
                
                weight_addr         => weight_addr,
                weight_data         => weight_data((neuron_idx + 1) * WEIGHT_WIDTH - 1 downto neuron_idx * WEIGHT_WIDTH),
                weight_write_enable => weight_write_enable,
                
                spike_in            => prev_layer_spikes,
                spike_out           => curr_layer_spikes(neuron_idx)
            );
    end generate gen_neurons;
    
end Behavioral;