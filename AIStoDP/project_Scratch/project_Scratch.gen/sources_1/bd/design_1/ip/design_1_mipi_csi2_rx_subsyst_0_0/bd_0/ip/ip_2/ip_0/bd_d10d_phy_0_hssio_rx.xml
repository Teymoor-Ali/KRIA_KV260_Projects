<?xml version="1.0" encoding="UTF-8"?>
<spirit:component xmlns:xilinx="http://www.xilinx.com" xmlns:spirit="http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <spirit:vendor>xilinx.com</spirit:vendor>
  <spirit:library>customized_ip</spirit:library>
  <spirit:name>bd_d10d_phy_0_hssio_rx</spirit:name>
  <spirit:version>1.0</spirit:version>
  <spirit:busInterfaces>
    <spirit:busInterface>
      <spirit:name>reset_rst</spirit:name>
      <spirit:displayName>RST</spirit:displayName>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rst</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>POLARITY</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.RESET_RST.POLARITY">ACTIVE_HIGH</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.RESET_RST.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>clock_CLK</spirit:name>
      <spirit:displayName>CLK</spirit:displayName>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>CLK</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>clk</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.CLOCK_CLK.FREQ_HZ">100000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>FREQ_TOLERANCE_HZ</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.CLOCK_CLK.FREQ_TOLERANCE_HZ">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.CLOCK_CLK.PHASE">0.0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.CLOCK_CLK.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_BUSIF</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.CLOCK_CLK.ASSOCIATED_BUSIF"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_PORT</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.CLOCK_CLK.ASSOCIATED_PORT"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_RESET</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.CLOCK_CLK.ASSOCIATED_RESET"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.CLOCK_CLK.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.clock_CLK" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_CLK_SIG_TYPE&apos;))=&quot;SINGLE&quot;)">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>CLK_DIFF</spirit:name>
      <spirit:displayName>CLK_DIFF</spirit:displayName>
      <spirit:description>Differential Clock input</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="diff_clock" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="diff_clock_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>CLK_N</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>clk_n</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>CLK_P</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>clk_p</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>CAN_DEBUG</spirit:name>
          <spirit:value spirit:format="bool" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.CLK_DIFF.CAN_DEBUG">false</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.CLK_DIFF.FREQ_HZ">100000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.CLK_DIFF" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_CLK_SIG_TYPE&apos;))=&quot;DIFF&quot;)">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>HSSIO_CTRL</spirit:name>
      <spirit:displayName>HSSIO_CTRL</spirit:displayName>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="display_high_speed_selectio_wiz" spirit:name="hssio_ctrl" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="display_high_speed_selectio_wiz" spirit:name="hssio_ctrl_rtl" spirit:version="1.0"/>
      <spirit:master/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bidir_tx_bs_tri_ce0</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bidir_tx_bs_tri_ce0</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bidir_tx_bs_tri_ce1</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bidir_tx_bs_tri_ce1</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bidir_tx_bs_tri_ce2</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bidir_tx_bs_tri_ce2</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bidir_tx_bs_tri_ce3</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bidir_tx_bs_tri_ce3</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bidir_tx_bs_tri_ce4</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bidir_tx_bs_tri_ce4</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bidir_tx_bs_tri_ce5</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bidir_tx_bs_tri_ce5</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bidir_tx_bs_tri_ce6</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bidir_tx_bs_tri_ce6</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bidir_tx_bs_tri_ce7</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bidir_tx_bs_tri_ce7</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bidir_tx_bs_tri_cntvaluein0</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bidir_tx_bs_tri_cntvaluein0</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bidir_tx_bs_tri_cntvaluein1</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bidir_tx_bs_tri_cntvaluein1</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bidir_tx_bs_tri_cntvaluein2</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bidir_tx_bs_tri_cntvaluein2</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bidir_tx_bs_tri_cntvaluein3</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bidir_tx_bs_tri_cntvaluein3</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bidir_tx_bs_tri_cntvaluein4</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bidir_tx_bs_tri_cntvaluein4</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bidir_tx_bs_tri_cntvaluein5</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bidir_tx_bs_tri_cntvaluein5</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bidir_tx_bs_tri_cntvaluein6</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bidir_tx_bs_tri_cntvaluein6</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bidir_tx_bs_tri_cntvaluein7</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bidir_tx_bs_tri_cntvaluein7</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bidir_tx_bs_tri_cntvalueout0</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bidir_tx_bs_tri_cntvalueout0</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bidir_tx_bs_tri_cntvalueout1</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bidir_tx_bs_tri_cntvalueout1</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bidir_tx_bs_tri_cntvalueout2</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bidir_tx_bs_tri_cntvalueout2</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bidir_tx_bs_tri_cntvalueout3</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bidir_tx_bs_tri_cntvalueout3</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bidir_tx_bs_tri_cntvalueout4</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bidir_tx_bs_tri_cntvalueout4</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bidir_tx_bs_tri_cntvalueout5</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bidir_tx_bs_tri_cntvalueout5</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bidir_tx_bs_tri_cntvalueout6</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bidir_tx_bs_tri_cntvalueout6</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bidir_tx_bs_tri_cntvalueout7</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bidir_tx_bs_tri_cntvalueout7</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bidir_tx_bs_tri_en_vtc0</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bidir_tx_bs_tri_en_vtc0</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bidir_tx_bs_tri_en_vtc1</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bidir_tx_bs_tri_en_vtc1</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bidir_tx_bs_tri_en_vtc2</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bidir_tx_bs_tri_en_vtc2</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bidir_tx_bs_tri_en_vtc3</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bidir_tx_bs_tri_en_vtc3</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bidir_tx_bs_tri_en_vtc4</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bidir_tx_bs_tri_en_vtc4</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bidir_tx_bs_tri_en_vtc5</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bidir_tx_bs_tri_en_vtc5</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bidir_tx_bs_tri_en_vtc6</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bidir_tx_bs_tri_en_vtc6</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bidir_tx_bs_tri_en_vtc7</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bidir_tx_bs_tri_en_vtc7</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bidir_tx_bs_tri_inc0</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bidir_tx_bs_tri_inc0</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bidir_tx_bs_tri_inc1</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bidir_tx_bs_tri_inc1</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bidir_tx_bs_tri_inc2</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bidir_tx_bs_tri_inc2</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bidir_tx_bs_tri_inc3</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bidir_tx_bs_tri_inc3</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bidir_tx_bs_tri_inc4</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bidir_tx_bs_tri_inc4</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bidir_tx_bs_tri_inc5</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bidir_tx_bs_tri_inc5</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bidir_tx_bs_tri_inc6</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bidir_tx_bs_tri_inc6</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bidir_tx_bs_tri_inc7</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bidir_tx_bs_tri_inc7</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bidir_tx_bs_tri_load0</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bidir_tx_bs_tri_load0</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bidir_tx_bs_tri_load1</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bidir_tx_bs_tri_load1</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bidir_tx_bs_tri_load2</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bidir_tx_bs_tri_load2</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bidir_tx_bs_tri_load3</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bidir_tx_bs_tri_load3</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bidir_tx_bs_tri_load4</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bidir_tx_bs_tri_load4</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bidir_tx_bs_tri_load5</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bidir_tx_bs_tri_load5</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bidir_tx_bs_tri_load6</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bidir_tx_bs_tri_load6</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bidir_tx_bs_tri_load7</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bidir_tx_bs_tri_load7</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bitslip_error_0</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bitslip_error_0</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bitslip_error_1</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bitslip_error_1</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bitslip_error_2</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bitslip_error_2</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bitslip_error_3</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bitslip_error_3</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bitslip_error_4</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bitslip_error_4</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bitslip_error_5</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bitslip_error_5</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bitslip_error_6</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bitslip_error_6</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bitslip_error_7</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bitslip_error_7</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bitslip_error_8</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bitslip_error_8</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bitslip_error_9</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bitslip_error_9</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bitslip_error_10</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bitslip_error_10</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bitslip_error_11</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bitslip_error_11</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bitslip_error_12</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bitslip_error_12</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bitslip_error_13</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bitslip_error_13</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bitslip_error_14</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bitslip_error_14</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bitslip_error_15</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bitslip_error_15</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bitslip_error_16</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bitslip_error_16</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bitslip_error_17</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bitslip_error_17</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bitslip_error_18</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bitslip_error_18</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bitslip_error_19</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bitslip_error_19</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bitslip_error_20</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bitslip_error_20</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bitslip_error_21</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bitslip_error_21</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bitslip_error_22</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bitslip_error_22</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bitslip_error_23</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bitslip_error_23</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bitslip_error_24</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bitslip_error_24</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bitslip_error_25</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bitslip_error_25</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bitslip_error_26</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bitslip_error_26</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bitslip_error_27</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bitslip_error_27</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bitslip_error_28</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bitslip_error_28</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bitslip_error_29</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bitslip_error_29</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bitslip_error_30</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bitslip_error_30</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bitslip_error_31</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bitslip_error_31</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bitslip_error_32</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bitslip_error_32</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bitslip_error_33</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bitslip_error_33</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bitslip_error_34</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bitslip_error_34</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bitslip_error_35</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bitslip_error_35</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bitslip_error_36</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bitslip_error_36</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bitslip_error_37</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bitslip_error_37</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bitslip_error_38</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bitslip_error_38</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bitslip_error_39</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bitslip_error_39</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bitslip_error_40</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bitslip_error_40</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bitslip_error_41</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bitslip_error_41</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bitslip_error_42</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bitslip_error_42</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bitslip_error_43</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bitslip_error_43</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bitslip_error_44</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bitslip_error_44</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bitslip_error_45</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bitslip_error_45</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bitslip_error_46</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bitslip_error_46</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bitslip_error_47</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bitslip_error_47</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bitslip_error_48</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bitslip_error_48</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bitslip_error_49</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bitslip_error_49</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bitslip_error_50</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bitslip_error_50</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>bitslip_error_51</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>bitslip_error_51</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>dly_rdy_bsc0</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>dly_rdy_bsc0</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>dly_rdy_bsc1</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>dly_rdy_bsc1</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>dly_rdy_bsc2</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>dly_rdy_bsc2</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>dly_rdy_bsc3</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>dly_rdy_bsc3</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>dly_rdy_bsc4</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>dly_rdy_bsc4</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>dly_rdy_bsc5</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>dly_rdy_bsc5</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>dly_rdy_bsc6</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>dly_rdy_bsc6</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>dly_rdy_bsc7</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>dly_rdy_bsc7</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>en_vtc_bsc0</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>en_vtc_bsc0</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>en_vtc_bsc1</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>en_vtc_bsc1</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>en_vtc_bsc2</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>en_vtc_bsc2</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>en_vtc_bsc3</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>en_vtc_bsc3</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>en_vtc_bsc4</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>en_vtc_bsc4</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>en_vtc_bsc5</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>en_vtc_bsc5</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>en_vtc_bsc6</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>en_vtc_bsc6</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>en_vtc_bsc7</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>en_vtc_bsc7</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_empty_0</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_empty_0</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_empty_1</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_empty_1</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_empty_2</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_empty_2</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_empty_3</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_empty_3</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_empty_4</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_empty_4</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_empty_5</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_empty_5</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_empty_6</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_empty_6</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_empty_7</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_empty_7</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_empty_8</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_empty_8</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_empty_9</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_empty_9</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_empty_10</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_empty_10</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_empty_11</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_empty_11</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_empty_12</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_empty_12</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_empty_13</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_empty_13</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_empty_14</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_empty_14</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_empty_15</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_empty_15</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_empty_16</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_empty_16</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_empty_17</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_empty_17</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_empty_18</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_empty_18</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_empty_19</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_empty_19</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_empty_20</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_empty_20</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_empty_21</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_empty_21</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_empty_22</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_empty_22</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_empty_23</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_empty_23</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_empty_24</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_empty_24</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_empty_25</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_empty_25</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_empty_26</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_empty_26</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_empty_27</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_empty_27</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_empty_28</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_empty_28</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_empty_29</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_empty_29</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_empty_30</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_empty_30</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_empty_31</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_empty_31</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_empty_32</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_empty_32</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_empty_33</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_empty_33</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_empty_34</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_empty_34</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_empty_35</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_empty_35</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_empty_36</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_empty_36</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_empty_37</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_empty_37</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_empty_38</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_empty_38</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_empty_39</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_empty_39</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_empty_40</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_empty_40</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_empty_41</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_empty_41</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_empty_42</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_empty_42</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_empty_43</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_empty_43</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_empty_44</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_empty_44</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_empty_45</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_empty_45</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_empty_46</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_empty_46</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_empty_47</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_empty_47</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_empty_48</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_empty_48</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_empty_49</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_empty_49</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_empty_50</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_empty_50</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_empty_51</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_empty_51</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_clk_0</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_clk_0</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_clk_1</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_clk_1</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_clk_2</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_clk_2</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_clk_3</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_clk_3</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_clk_4</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_clk_4</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_clk_5</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_clk_5</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_clk_6</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_clk_6</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_clk_7</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_clk_7</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_clk_8</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_clk_8</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_clk_9</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_clk_9</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_clk_10</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_clk_10</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_clk_11</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_clk_11</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_clk_12</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_clk_12</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_clk_13</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_clk_13</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_clk_14</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_clk_14</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_clk_15</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_clk_15</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_clk_16</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_clk_16</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_clk_17</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_clk_17</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_clk_18</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_clk_18</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_clk_19</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_clk_19</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_clk_20</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_clk_20</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_clk_21</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_clk_21</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_clk_22</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_clk_22</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_clk_23</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_clk_23</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_clk_24</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_clk_24</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_clk_25</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_clk_25</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_clk_26</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_clk_26</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_clk_27</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_clk_27</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_clk_28</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_clk_28</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_clk_29</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_clk_29</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_clk_30</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_clk_30</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_clk_31</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_clk_31</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_clk_32</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_clk_32</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_clk_33</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_clk_33</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_clk_34</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_clk_34</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_clk_35</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_clk_35</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_clk_36</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_clk_36</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_clk_37</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_clk_37</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_clk_38</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_clk_38</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_clk_39</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_clk_39</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_clk_40</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_clk_40</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_clk_41</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_clk_41</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_clk_42</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_clk_42</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_clk_43</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_clk_43</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_clk_44</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_clk_44</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_clk_45</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_clk_45</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_clk_46</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_clk_46</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_clk_47</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_clk_47</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_clk_48</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_clk_48</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_clk_49</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_clk_49</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_clk_50</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_clk_50</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_clk_51</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_clk_51</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_en_0</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_en_0</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_en_1</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_en_1</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_en_2</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_en_2</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_en_3</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_en_3</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_en_4</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_en_4</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_en_5</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_en_5</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_en_6</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_en_6</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_en_7</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_en_7</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_en_8</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_en_8</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_en_9</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_en_9</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_en_10</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_en_10</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_en_11</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_en_11</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_en_12</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_en_12</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_en_13</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_en_13</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_en_14</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_en_14</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_en_15</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_en_15</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_en_16</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_en_16</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_en_17</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_en_17</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_en_18</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_en_18</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_en_19</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_en_19</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_en_20</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_en_20</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_en_21</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_en_21</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_en_22</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_en_22</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_en_23</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_en_23</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_en_24</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_en_24</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_en_25</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_en_25</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_en_26</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_en_26</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_en_27</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_en_27</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_en_28</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_en_28</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_en_29</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_en_29</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_en_30</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_en_30</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_en_31</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_en_31</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_en_32</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_en_32</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_en_33</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_en_33</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_en_34</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_en_34</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_en_35</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_en_35</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_en_36</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_en_36</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_en_37</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_en_37</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_en_38</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_en_38</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_en_39</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_en_39</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_en_40</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_en_40</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_en_41</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_en_41</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_en_42</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_en_42</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_en_43</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_en_43</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_en_44</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_en_44</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_en_45</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_en_45</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_en_46</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_en_46</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_en_47</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_en_47</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_en_48</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_en_48</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_en_49</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_en_49</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_en_50</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_en_50</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_rd_en_51</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_rd_en_51</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_wr_clk_0</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_wr_clk_0</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_wr_clk_6</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_wr_clk_6</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_wr_clk_13</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_wr_clk_13</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_wr_clk_19</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_wr_clk_19</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_wr_clk_26</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_wr_clk_26</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_wr_clk_32</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_wr_clk_32</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_wr_clk_39</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_wr_clk_39</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fifo_wr_clk_45</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>fifo_wr_clk_45</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>pll0_clkout0</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pll0_clkout0</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>pll0_clkout1</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pll0_clkout1</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>pll0_locked</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pll0_locked</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>pll1_clkout0</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pll1_clkout0</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>pll1_locked</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pll1_locked</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>riu_addr_bg0</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>riu_addr_bg0</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>riu_addr_bg1</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>riu_addr_bg1</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>riu_addr_bg2</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>riu_addr_bg2</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>riu_addr_bg3</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>riu_addr_bg3</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>riu_clk</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>riu_clk</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>riu_nibble_sel_bg0</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>riu_nibble_sel_bg0</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>riu_nibble_sel_bg1</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>riu_nibble_sel_bg1</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>riu_nibble_sel_bg2</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>riu_nibble_sel_bg2</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>riu_nibble_sel_bg3</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>riu_nibble_sel_bg3</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>riu_rd_data_bg0</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>riu_rd_data_bg0</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>riu_rd_data_bg1</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>riu_rd_data_bg1</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>riu_rd_data_bg2</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>riu_rd_data_bg2</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>riu_rd_data_bg3</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>riu_rd_data_bg3</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>riu_valid_bg0</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>riu_valid_bg0</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>riu_valid_bg1</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>riu_valid_bg1</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>riu_valid_bg2</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>riu_valid_bg2</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>riu_valid_bg3</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>riu_valid_bg3</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>riu_wr_data_bg0</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>riu_wr_data_bg0</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>riu_wr_data_bg1</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>riu_wr_data_bg1</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>riu_wr_data_bg2</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>riu_wr_data_bg2</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>riu_wr_data_bg3</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>riu_wr_data_bg3</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>riu_wr_en_bg0</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>riu_wr_en_bg0</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>riu_wr_en_bg1</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>riu_wr_en_bg1</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>riu_wr_en_bg2</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>riu_wr_en_bg2</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>riu_wr_en_bg3</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>riu_wr_en_bg3</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rst_seq_done</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rst_seq_done</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_0</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_0</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_1</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_1</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_2</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_2</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_3</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_3</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_4</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_4</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_5</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_5</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_6</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_6</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_7</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_7</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_8</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_8</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_9</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_9</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_10</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_10</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_11</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_11</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_12</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_12</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_13</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_13</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_14</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_14</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_15</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_15</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_16</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_16</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_17</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_17</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_18</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_18</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_19</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_19</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_20</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_20</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_21</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_21</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_22</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_22</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_23</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_23</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_24</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_24</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_25</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_25</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_26</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_26</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_27</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_27</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_28</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_28</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_29</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_29</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_30</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_30</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_31</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_31</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_32</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_32</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_33</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_33</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_34</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_34</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_35</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_35</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_36</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_36</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_37</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_37</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_38</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_38</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_39</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_39</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_40</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_40</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_41</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_41</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_42</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_42</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_43</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_43</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_44</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_44</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_45</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_45</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_46</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_46</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_47</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_47</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_48</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_48</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_49</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_49</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_50</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_50</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_51</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_51</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_ext_0</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_ext_0</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_ext_1</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_ext_1</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_ext_2</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_ext_2</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_ext_3</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_ext_3</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_ext_4</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_ext_4</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_ext_5</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_ext_5</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_ext_6</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_ext_6</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_ext_7</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_ext_7</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_ext_8</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_ext_8</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_ext_9</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_ext_9</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_ext_10</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_ext_10</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_ext_11</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_ext_11</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_ext_12</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_ext_12</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_ext_13</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_ext_13</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_ext_14</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_ext_14</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_ext_15</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_ext_15</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_ext_16</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_ext_16</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_ext_17</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_ext_17</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_ext_18</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_ext_18</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_ext_19</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_ext_19</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_ext_20</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_ext_20</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_ext_21</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_ext_21</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_ext_22</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_ext_22</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_ext_23</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_ext_23</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_ext_24</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_ext_24</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_ext_25</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_ext_25</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_ext_26</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_ext_26</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_ext_27</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_ext_27</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_ext_28</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_ext_28</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_ext_29</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_ext_29</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_ext_30</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_ext_30</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_ext_31</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_ext_31</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_ext_32</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_ext_32</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_ext_33</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_ext_33</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_ext_34</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_ext_34</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_ext_35</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_ext_35</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_ext_36</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_ext_36</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_ext_37</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_ext_37</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_ext_38</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_ext_38</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_ext_39</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_ext_39</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_ext_40</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_ext_40</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_ext_41</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_ext_41</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_ext_42</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_ext_42</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_ext_43</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_ext_43</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_ext_44</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_ext_44</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_ext_45</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_ext_45</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_ext_46</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_ext_46</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_ext_47</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_ext_47</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_ext_48</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_ext_48</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_ext_49</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_ext_49</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_ext_50</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_ext_50</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_ce_ext_51</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_ce_ext_51</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_0</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_0</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_1</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_1</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_2</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_2</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_3</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_3</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_4</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_4</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_5</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_5</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_6</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_6</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_7</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_7</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_8</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_8</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_9</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_9</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_10</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_10</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_11</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_11</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_12</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_12</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_13</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_13</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_14</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_14</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_15</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_15</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_16</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_16</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_17</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_17</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_18</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_18</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_19</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_19</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_20</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_20</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_21</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_21</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_22</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_22</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_23</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_23</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_24</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_24</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_25</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_25</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_26</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_26</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_27</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_27</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_28</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_28</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_29</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_29</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_30</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_30</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_31</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_31</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_32</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_32</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_33</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_33</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_34</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_34</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_35</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_35</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_36</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_36</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_37</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_37</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_38</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_38</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_39</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_39</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_40</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_40</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_41</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_41</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_42</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_42</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_43</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_43</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_44</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_44</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_45</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_45</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_46</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_46</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_47</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_47</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_48</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_48</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_49</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_49</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_50</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_50</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_51</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_51</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_ext_0</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_ext_0</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_ext_1</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_ext_1</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_ext_2</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_ext_2</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_ext_3</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_ext_3</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_ext_4</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_ext_4</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_ext_5</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_ext_5</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_ext_6</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_ext_6</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_ext_7</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_ext_7</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_ext_8</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_ext_8</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_ext_9</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_ext_9</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_ext_10</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_ext_10</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_ext_11</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_ext_11</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_ext_12</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_ext_12</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_ext_13</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_ext_13</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_ext_14</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_ext_14</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_ext_15</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_ext_15</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_ext_16</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_ext_16</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_ext_17</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_ext_17</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_ext_18</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_ext_18</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_ext_19</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_ext_19</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_ext_20</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_ext_20</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_ext_21</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_ext_21</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_ext_22</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_ext_22</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_ext_23</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_ext_23</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_ext_24</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_ext_24</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_ext_25</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_ext_25</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_ext_26</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_ext_26</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_ext_27</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_ext_27</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_ext_28</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_ext_28</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_ext_29</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_ext_29</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_ext_30</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_ext_30</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_ext_31</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_ext_31</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_ext_32</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_ext_32</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_ext_33</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_ext_33</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_ext_34</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_ext_34</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_ext_35</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_ext_35</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_ext_36</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_ext_36</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_ext_37</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_ext_37</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_ext_38</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_ext_38</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_ext_39</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_ext_39</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_ext_40</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_ext_40</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_ext_41</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_ext_41</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_ext_42</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_ext_42</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_ext_43</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_ext_43</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_ext_44</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_ext_44</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_ext_45</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_ext_45</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_ext_46</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_ext_46</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_ext_47</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_ext_47</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_ext_48</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_ext_48</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_ext_49</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_ext_49</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_ext_50</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_ext_50</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvaluein_ext_51</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvaluein_ext_51</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_0</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_0</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_1</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_1</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_2</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_2</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_3</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_3</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_4</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_4</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_5</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_5</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_6</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_6</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_7</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_7</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_8</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_8</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_9</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_9</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_10</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_10</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_11</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_11</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_12</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_12</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_13</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_13</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_14</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_14</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_15</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_15</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_16</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_16</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_17</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_17</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_18</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_18</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_19</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_19</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_20</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_20</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_21</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_21</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_22</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_22</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_23</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_23</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_24</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_24</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_25</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_25</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_26</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_26</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_27</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_27</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_28</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_28</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_29</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_29</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_30</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_30</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_31</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_31</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_32</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_32</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_33</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_33</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_34</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_34</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_35</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_35</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_36</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_36</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_37</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_37</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_38</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_38</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_39</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_39</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_40</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_40</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_41</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_41</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_42</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_42</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_43</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_43</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_44</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_44</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_45</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_45</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_46</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_46</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_47</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_47</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_48</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_48</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_49</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_49</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_50</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_50</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_51</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_51</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_ext_0</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_ext_0</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_ext_1</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_ext_1</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_ext_2</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_ext_2</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_ext_3</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_ext_3</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_ext_4</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_ext_4</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_ext_5</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_ext_5</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_ext_6</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_ext_6</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_ext_7</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_ext_7</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_ext_8</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_ext_8</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_ext_9</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_ext_9</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_ext_10</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_ext_10</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_ext_11</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_ext_11</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_ext_12</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_ext_12</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_ext_13</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_ext_13</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_ext_14</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_ext_14</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_ext_15</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_ext_15</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_ext_16</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_ext_16</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_ext_17</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_ext_17</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_ext_18</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_ext_18</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_ext_19</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_ext_19</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_ext_20</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_ext_20</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_ext_21</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_ext_21</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_ext_22</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_ext_22</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_ext_23</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_ext_23</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_ext_24</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_ext_24</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_ext_25</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_ext_25</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_ext_26</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_ext_26</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_ext_27</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_ext_27</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_ext_28</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_ext_28</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_ext_29</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_ext_29</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_ext_30</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_ext_30</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_ext_31</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_ext_31</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_ext_32</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_ext_32</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_ext_33</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_ext_33</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_ext_34</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_ext_34</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_ext_35</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_ext_35</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_ext_36</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_ext_36</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_ext_37</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_ext_37</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_ext_38</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_ext_38</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_ext_39</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_ext_39</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_ext_40</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_ext_40</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_ext_41</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_ext_41</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_ext_42</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_ext_42</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_ext_43</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_ext_43</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_ext_44</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_ext_44</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_ext_45</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_ext_45</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_ext_46</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_ext_46</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_ext_47</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_ext_47</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_ext_48</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_ext_48</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_ext_49</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_ext_49</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_ext_50</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_ext_50</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_cntvalueout_ext_51</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_cntvalueout_ext_51</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_0</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_0</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_1</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_1</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_2</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_2</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_3</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_3</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_4</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_4</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_5</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_5</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_6</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_6</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_7</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_7</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_8</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_8</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_9</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_9</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_10</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_10</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_11</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_11</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_12</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_12</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_13</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_13</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_14</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_14</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_15</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_15</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_16</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_16</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_17</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_17</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_18</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_18</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_19</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_19</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_20</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_20</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_21</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_21</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_22</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_22</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_23</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_23</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_24</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_24</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_25</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_25</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_26</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_26</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_27</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_27</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_28</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_28</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_29</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_29</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_30</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_30</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_31</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_31</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_32</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_32</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_33</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_33</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_34</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_34</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_35</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_35</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_36</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_36</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_37</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_37</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_38</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_38</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_39</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_39</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_40</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_40</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_41</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_41</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_42</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_42</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_43</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_43</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_44</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_44</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_45</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_45</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_46</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_46</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_47</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_47</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_48</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_48</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_49</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_49</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_50</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_50</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_51</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_51</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_ext_0</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_ext_0</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_ext_1</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_ext_1</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_ext_2</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_ext_2</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_ext_3</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_ext_3</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_ext_4</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_ext_4</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_ext_5</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_ext_5</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_ext_6</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_ext_6</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_ext_7</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_ext_7</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_ext_8</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_ext_8</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_ext_9</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_ext_9</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_ext_10</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_ext_10</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_ext_11</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_ext_11</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_ext_12</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_ext_12</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_ext_13</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_ext_13</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_ext_14</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_ext_14</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_ext_15</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_ext_15</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_ext_16</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_ext_16</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_ext_17</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_ext_17</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_ext_18</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_ext_18</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_ext_19</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_ext_19</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_ext_20</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_ext_20</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_ext_21</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_ext_21</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_ext_22</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_ext_22</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_ext_23</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_ext_23</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_ext_24</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_ext_24</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_ext_25</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_ext_25</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_ext_26</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_ext_26</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_ext_27</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_ext_27</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_ext_28</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_ext_28</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_ext_29</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_ext_29</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_ext_30</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_ext_30</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_ext_31</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_ext_31</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_ext_32</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_ext_32</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_ext_33</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_ext_33</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_ext_34</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_ext_34</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_ext_35</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_ext_35</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_ext_36</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_ext_36</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_ext_37</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_ext_37</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_ext_38</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_ext_38</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_ext_39</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_ext_39</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_ext_40</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_ext_40</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_ext_41</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_ext_41</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_ext_42</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_ext_42</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_ext_43</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_ext_43</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_ext_44</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_ext_44</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_ext_45</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_ext_45</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_ext_46</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_ext_46</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_ext_47</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_ext_47</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_ext_48</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_ext_48</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_ext_49</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_ext_49</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_ext_50</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_ext_50</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_en_vtc_ext_51</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_en_vtc_ext_51</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_0</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_0</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_1</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_1</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_2</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_2</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_3</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_3</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_4</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_4</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_5</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_5</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_6</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_6</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_7</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_7</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_8</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_8</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_9</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_9</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_10</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_10</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_11</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_11</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_12</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_12</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_13</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_13</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_14</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_14</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_15</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_15</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_16</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_16</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_17</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_17</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_18</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_18</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_19</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_19</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_20</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_20</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_21</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_21</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_22</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_22</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_23</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_23</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_24</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_24</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_25</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_25</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_26</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_26</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_27</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_27</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_28</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_28</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_29</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_29</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_30</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_30</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_31</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_31</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_32</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_32</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_33</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_33</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_34</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_34</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_35</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_35</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_36</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_36</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_37</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_37</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_38</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_38</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_39</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_39</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_40</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_40</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_41</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_41</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_42</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_42</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_43</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_43</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_44</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_44</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_45</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_45</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_46</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_46</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_47</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_47</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_48</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_48</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_49</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_49</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_50</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_50</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_51</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_51</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_ext_0</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_ext_0</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_ext_1</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_ext_1</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_ext_2</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_ext_2</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_ext_3</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_ext_3</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_ext_4</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_ext_4</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_ext_5</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_ext_5</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_ext_6</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_ext_6</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_ext_7</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_ext_7</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_ext_8</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_ext_8</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_ext_9</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_ext_9</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_ext_10</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_ext_10</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_ext_11</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_ext_11</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_ext_12</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_ext_12</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_ext_13</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_ext_13</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_ext_14</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_ext_14</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_ext_15</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_ext_15</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_ext_16</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_ext_16</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_ext_17</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_ext_17</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_ext_18</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_ext_18</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_ext_19</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_ext_19</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_ext_20</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_ext_20</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_ext_21</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_ext_21</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_ext_22</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_ext_22</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_ext_23</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_ext_23</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_ext_24</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_ext_24</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_ext_25</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_ext_25</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_ext_26</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_ext_26</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_ext_27</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_ext_27</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_ext_28</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_ext_28</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_ext_29</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_ext_29</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_ext_30</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_ext_30</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_ext_31</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_ext_31</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_ext_32</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_ext_32</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_ext_33</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_ext_33</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_ext_34</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_ext_34</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_ext_35</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_ext_35</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_ext_36</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_ext_36</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_ext_37</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_ext_37</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_ext_38</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_ext_38</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_ext_39</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_ext_39</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_ext_40</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_ext_40</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_ext_41</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_ext_41</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_ext_42</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_ext_42</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_ext_43</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_ext_43</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_ext_44</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_ext_44</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_ext_45</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_ext_45</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_ext_46</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_ext_46</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_ext_47</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_ext_47</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_ext_48</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_ext_48</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_ext_49</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_ext_49</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_ext_50</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_ext_50</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_inc_ext_51</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_inc_ext_51</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_0</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_0</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_1</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_1</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_2</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_2</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_3</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_3</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_4</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_4</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_5</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_5</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_6</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_6</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_7</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_7</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_8</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_8</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_9</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_9</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_10</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_10</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_11</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_11</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_12</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_12</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_13</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_13</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_14</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_14</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_15</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_15</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_16</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_16</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_17</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_17</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_18</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_18</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_19</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_19</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_20</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_20</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_21</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_21</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_22</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_22</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_23</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_23</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_24</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_24</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_25</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_25</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_26</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_26</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_27</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_27</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_28</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_28</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_29</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_29</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_30</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_30</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_31</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_31</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_32</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_32</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_33</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_33</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_34</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_34</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_35</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_35</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_36</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_36</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_37</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_37</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_38</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_38</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_39</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_39</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_40</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_40</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_41</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_41</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_42</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_42</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_43</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_43</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_44</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_44</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_45</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_45</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_46</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_46</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_47</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_47</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_48</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_48</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_49</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_49</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_50</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_50</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_51</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_51</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_ext_0</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_ext_0</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_ext_1</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_ext_1</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_ext_2</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_ext_2</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_ext_3</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_ext_3</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_ext_4</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_ext_4</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_ext_5</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_ext_5</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_ext_6</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_ext_6</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_ext_7</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_ext_7</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_ext_8</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_ext_8</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_ext_9</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_ext_9</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_ext_10</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_ext_10</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_ext_11</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_ext_11</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_ext_12</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_ext_12</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_ext_13</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_ext_13</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_ext_14</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_ext_14</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_ext_15</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_ext_15</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_ext_16</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_ext_16</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_ext_17</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_ext_17</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_ext_18</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_ext_18</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_ext_19</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_ext_19</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_ext_20</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_ext_20</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_ext_21</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_ext_21</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_ext_22</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_ext_22</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_ext_23</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_ext_23</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_ext_24</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_ext_24</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_ext_25</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_ext_25</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_ext_26</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_ext_26</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_ext_27</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_ext_27</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_ext_28</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_ext_28</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_ext_29</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_ext_29</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_ext_30</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_ext_30</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_ext_31</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_ext_31</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_ext_32</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_ext_32</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_ext_33</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_ext_33</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_ext_34</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_ext_34</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_ext_35</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_ext_35</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_ext_36</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_ext_36</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_ext_37</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_ext_37</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_ext_38</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_ext_38</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_ext_39</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_ext_39</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_ext_40</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_ext_40</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_ext_41</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_ext_41</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_ext_42</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_ext_42</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_ext_43</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_ext_43</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_ext_44</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_ext_44</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_ext_45</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_ext_45</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_ext_46</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_ext_46</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_ext_47</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_ext_47</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_ext_48</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_ext_48</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_ext_49</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_ext_49</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_ext_50</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_ext_50</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rx_load_ext_51</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rx_load_ext_51</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tri_t_0</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tri_t_0</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tri_t_1</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tri_t_1</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tri_t_2</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tri_t_2</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tri_t_3</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tri_t_3</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tri_t_4</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tri_t_4</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tri_t_5</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tri_t_5</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tri_t_6</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tri_t_6</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tri_t_7</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tri_t_7</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tri_t_8</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tri_t_8</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tri_t_9</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tri_t_9</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tri_t_10</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tri_t_10</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tri_t_11</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tri_t_11</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tri_t_12</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tri_t_12</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tri_t_13</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tri_t_13</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tri_t_14</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tri_t_14</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tri_t_15</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tri_t_15</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tri_t_16</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tri_t_16</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tri_t_17</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tri_t_17</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tri_t_18</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tri_t_18</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tri_t_19</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tri_t_19</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tri_t_20</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tri_t_20</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tri_t_21</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tri_t_21</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tri_t_22</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tri_t_22</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tri_t_23</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tri_t_23</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tri_t_24</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tri_t_24</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tri_t_25</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tri_t_25</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tri_t_26</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tri_t_26</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tri_t_27</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tri_t_27</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tri_t_28</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tri_t_28</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tri_t_29</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tri_t_29</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tri_t_30</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tri_t_30</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tri_t_31</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tri_t_31</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tri_t_32</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tri_t_32</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tri_t_33</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tri_t_33</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tri_t_34</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tri_t_34</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tri_t_35</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tri_t_35</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tri_t_36</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tri_t_36</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tri_t_37</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tri_t_37</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tri_t_38</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tri_t_38</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tri_t_39</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tri_t_39</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tri_t_40</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tri_t_40</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tri_t_41</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tri_t_41</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tri_t_42</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tri_t_42</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tri_t_43</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tri_t_43</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tri_t_44</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tri_t_44</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tri_t_45</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tri_t_45</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tri_t_46</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tri_t_46</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tri_t_47</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tri_t_47</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tri_t_48</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tri_t_48</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tri_t_49</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tri_t_49</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tri_t_50</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tri_t_50</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tri_t_51</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tri_t_51</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tri_tbyte0</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tri_tbyte0</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tri_tbyte1</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tri_tbyte1</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tri_tbyte2</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tri_tbyte2</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tri_tbyte3</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tri_tbyte3</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tri_tbyte4</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tri_tbyte4</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tri_tbyte5</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tri_tbyte5</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tri_tbyte6</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tri_tbyte6</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tri_tbyte7</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tri_tbyte7</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_ce_0</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_ce_0</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_ce_1</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_ce_1</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_ce_2</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_ce_2</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_ce_3</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_ce_3</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_ce_4</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_ce_4</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_ce_5</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_ce_5</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_ce_6</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_ce_6</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_ce_7</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_ce_7</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_ce_8</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_ce_8</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_ce_9</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_ce_9</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_ce_10</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_ce_10</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_ce_11</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_ce_11</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_ce_12</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_ce_12</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_ce_13</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_ce_13</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_ce_14</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_ce_14</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_ce_15</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_ce_15</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_ce_16</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_ce_16</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_ce_17</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_ce_17</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_ce_18</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_ce_18</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_ce_19</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_ce_19</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_ce_20</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_ce_20</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_ce_21</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_ce_21</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_ce_22</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_ce_22</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_ce_23</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_ce_23</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_ce_24</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_ce_24</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_ce_25</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_ce_25</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_ce_26</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_ce_26</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_ce_27</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_ce_27</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_ce_28</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_ce_28</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_ce_29</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_ce_29</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_ce_30</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_ce_30</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_ce_31</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_ce_31</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_ce_32</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_ce_32</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_ce_33</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_ce_33</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_ce_34</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_ce_34</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_ce_35</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_ce_35</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_ce_36</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_ce_36</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_ce_37</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_ce_37</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_ce_38</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_ce_38</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_ce_39</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_ce_39</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_ce_40</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_ce_40</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_ce_41</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_ce_41</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_ce_42</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_ce_42</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_ce_43</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_ce_43</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_ce_44</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_ce_44</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_ce_45</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_ce_45</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_ce_46</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_ce_46</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_ce_47</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_ce_47</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_ce_48</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_ce_48</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_ce_49</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_ce_49</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_ce_50</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_ce_50</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_ce_51</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_ce_51</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvaluein_0</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvaluein_0</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvaluein_1</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvaluein_1</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvaluein_2</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvaluein_2</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvaluein_3</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvaluein_3</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvaluein_4</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvaluein_4</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvaluein_5</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvaluein_5</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvaluein_6</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvaluein_6</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvaluein_7</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvaluein_7</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvaluein_8</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvaluein_8</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvaluein_9</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvaluein_9</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvaluein_10</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvaluein_10</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvaluein_11</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvaluein_11</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvaluein_12</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvaluein_12</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvaluein_13</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvaluein_13</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvaluein_14</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvaluein_14</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvaluein_15</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvaluein_15</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvaluein_16</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvaluein_16</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvaluein_17</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvaluein_17</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvaluein_18</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvaluein_18</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvaluein_19</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvaluein_19</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvaluein_20</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvaluein_20</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvaluein_21</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvaluein_21</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvaluein_22</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvaluein_22</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvaluein_23</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvaluein_23</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvaluein_24</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvaluein_24</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvaluein_25</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvaluein_25</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvaluein_26</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvaluein_26</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvaluein_27</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvaluein_27</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvaluein_28</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvaluein_28</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvaluein_29</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvaluein_29</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvaluein_30</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvaluein_30</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvaluein_31</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvaluein_31</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvaluein_32</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvaluein_32</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvaluein_33</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvaluein_33</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvaluein_34</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvaluein_34</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvaluein_35</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvaluein_35</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvaluein_36</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvaluein_36</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvaluein_37</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvaluein_37</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvaluein_38</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvaluein_38</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvaluein_39</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvaluein_39</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvaluein_40</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvaluein_40</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvaluein_41</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvaluein_41</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvaluein_42</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvaluein_42</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvaluein_43</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvaluein_43</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvaluein_44</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvaluein_44</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvaluein_45</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvaluein_45</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvaluein_46</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvaluein_46</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvaluein_47</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvaluein_47</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvaluein_48</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvaluein_48</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvaluein_49</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvaluein_49</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvaluein_50</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvaluein_50</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvaluein_51</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvaluein_51</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvalueout_0</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvalueout_0</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvalueout_1</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvalueout_1</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvalueout_2</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvalueout_2</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvalueout_3</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvalueout_3</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvalueout_4</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvalueout_4</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvalueout_5</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvalueout_5</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvalueout_6</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvalueout_6</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvalueout_7</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvalueout_7</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvalueout_8</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvalueout_8</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvalueout_9</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvalueout_9</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvalueout_10</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvalueout_10</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvalueout_11</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvalueout_11</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvalueout_12</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvalueout_12</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvalueout_13</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvalueout_13</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvalueout_14</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvalueout_14</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvalueout_15</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvalueout_15</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvalueout_16</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvalueout_16</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvalueout_17</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvalueout_17</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvalueout_18</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvalueout_18</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvalueout_19</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvalueout_19</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvalueout_20</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvalueout_20</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvalueout_21</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvalueout_21</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvalueout_22</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvalueout_22</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvalueout_23</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvalueout_23</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvalueout_24</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvalueout_24</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvalueout_25</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvalueout_25</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvalueout_26</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvalueout_26</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvalueout_27</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvalueout_27</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvalueout_28</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvalueout_28</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvalueout_29</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvalueout_29</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvalueout_30</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvalueout_30</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvalueout_31</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvalueout_31</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvalueout_32</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvalueout_32</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvalueout_33</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvalueout_33</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvalueout_34</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvalueout_34</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvalueout_35</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvalueout_35</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvalueout_36</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvalueout_36</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvalueout_37</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvalueout_37</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvalueout_38</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvalueout_38</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvalueout_39</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvalueout_39</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvalueout_40</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvalueout_40</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvalueout_41</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvalueout_41</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvalueout_42</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvalueout_42</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvalueout_43</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvalueout_43</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvalueout_44</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvalueout_44</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvalueout_45</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvalueout_45</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvalueout_46</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvalueout_46</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvalueout_47</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvalueout_47</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvalueout_48</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvalueout_48</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvalueout_49</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvalueout_49</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvalueout_50</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvalueout_50</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_cntvalueout_51</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_cntvalueout_51</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_en_vtc_0</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_en_vtc_0</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_en_vtc_1</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_en_vtc_1</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_en_vtc_2</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_en_vtc_2</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_en_vtc_3</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_en_vtc_3</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_en_vtc_4</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_en_vtc_4</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_en_vtc_5</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_en_vtc_5</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_en_vtc_6</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_en_vtc_6</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_en_vtc_7</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_en_vtc_7</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_en_vtc_8</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_en_vtc_8</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_en_vtc_9</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_en_vtc_9</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_en_vtc_10</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_en_vtc_10</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_en_vtc_11</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_en_vtc_11</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_en_vtc_12</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_en_vtc_12</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_en_vtc_13</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_en_vtc_13</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_en_vtc_14</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_en_vtc_14</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_en_vtc_15</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_en_vtc_15</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_en_vtc_16</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_en_vtc_16</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_en_vtc_17</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_en_vtc_17</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_en_vtc_18</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_en_vtc_18</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_en_vtc_19</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_en_vtc_19</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_en_vtc_20</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_en_vtc_20</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_en_vtc_21</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_en_vtc_21</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_en_vtc_22</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_en_vtc_22</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_en_vtc_23</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_en_vtc_23</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_en_vtc_24</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_en_vtc_24</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_en_vtc_25</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_en_vtc_25</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_en_vtc_26</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_en_vtc_26</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_en_vtc_27</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_en_vtc_27</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_en_vtc_28</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_en_vtc_28</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_en_vtc_29</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_en_vtc_29</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_en_vtc_30</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_en_vtc_30</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_en_vtc_31</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_en_vtc_31</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_en_vtc_32</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_en_vtc_32</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_en_vtc_33</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_en_vtc_33</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_en_vtc_34</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_en_vtc_34</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_en_vtc_35</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_en_vtc_35</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_en_vtc_36</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_en_vtc_36</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_en_vtc_37</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_en_vtc_37</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_en_vtc_38</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_en_vtc_38</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_en_vtc_39</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_en_vtc_39</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_en_vtc_40</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_en_vtc_40</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_en_vtc_41</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_en_vtc_41</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_en_vtc_42</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_en_vtc_42</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_en_vtc_43</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_en_vtc_43</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_en_vtc_44</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_en_vtc_44</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_en_vtc_45</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_en_vtc_45</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_en_vtc_46</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_en_vtc_46</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_en_vtc_47</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_en_vtc_47</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_en_vtc_48</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_en_vtc_48</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_en_vtc_49</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_en_vtc_49</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_en_vtc_50</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_en_vtc_50</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_en_vtc_51</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_en_vtc_51</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_inc_0</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_inc_0</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_inc_1</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_inc_1</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_inc_2</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_inc_2</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_inc_3</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_inc_3</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_inc_4</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_inc_4</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_inc_5</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_inc_5</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_inc_6</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_inc_6</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_inc_7</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_inc_7</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_inc_8</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_inc_8</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_inc_9</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_inc_9</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_inc_10</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_inc_10</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_inc_11</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_inc_11</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_inc_12</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_inc_12</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_inc_13</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_inc_13</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_inc_14</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_inc_14</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_inc_15</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_inc_15</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_inc_16</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_inc_16</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_inc_17</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_inc_17</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_inc_18</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_inc_18</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_inc_19</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_inc_19</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_inc_20</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_inc_20</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_inc_21</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_inc_21</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_inc_22</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_inc_22</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_inc_23</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_inc_23</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_inc_24</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_inc_24</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_inc_25</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_inc_25</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_inc_26</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_inc_26</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_inc_27</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_inc_27</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_inc_28</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_inc_28</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_inc_29</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_inc_29</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_inc_30</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_inc_30</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_inc_31</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_inc_31</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_inc_32</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_inc_32</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_inc_33</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_inc_33</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_inc_34</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_inc_34</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_inc_35</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_inc_35</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_inc_36</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_inc_36</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_inc_37</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_inc_37</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_inc_38</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_inc_38</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_inc_39</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_inc_39</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_inc_40</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_inc_40</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_inc_41</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_inc_41</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_inc_42</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_inc_42</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_inc_43</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_inc_43</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_inc_44</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_inc_44</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_inc_45</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_inc_45</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_inc_46</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_inc_46</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_inc_47</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_inc_47</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_inc_48</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_inc_48</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_inc_49</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_inc_49</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_inc_50</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_inc_50</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_inc_51</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_inc_51</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_load_0</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_load_0</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_load_1</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_load_1</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_load_2</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_load_2</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_load_3</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_load_3</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_load_4</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_load_4</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_load_5</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_load_5</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_load_6</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_load_6</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_load_7</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_load_7</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_load_8</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_load_8</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_load_9</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_load_9</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_load_10</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_load_10</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_load_11</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_load_11</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_load_12</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_load_12</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_load_13</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_load_13</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_load_14</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_load_14</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_load_15</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_load_15</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_load_16</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_load_16</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_load_17</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_load_17</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_load_18</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_load_18</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_load_19</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_load_19</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_load_20</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_load_20</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_load_21</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_load_21</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_load_22</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_load_22</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_load_23</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_load_23</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_load_24</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_load_24</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_load_25</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_load_25</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_load_26</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_load_26</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_load_27</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_load_27</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_load_28</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_load_28</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_load_29</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_load_29</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_load_30</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_load_30</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_load_31</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_load_31</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_load_32</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_load_32</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_load_33</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_load_33</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_load_34</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_load_34</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_load_35</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_load_35</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_load_36</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_load_36</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_load_37</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_load_37</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_load_38</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_load_38</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_load_39</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_load_39</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_load_40</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_load_40</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_load_41</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_load_41</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_load_42</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_load_42</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_load_43</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_load_43</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_load_44</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_load_44</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_load_45</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_load_45</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_load_46</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_load_46</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_load_47</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_load_47</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_load_48</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_load_48</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_load_49</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_load_49</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_load_50</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_load_50</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tx_load_51</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>tx_load_51</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>vtc_rdy_bsc0</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>vtc_rdy_bsc0</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>vtc_rdy_bsc1</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>vtc_rdy_bsc1</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>vtc_rdy_bsc2</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>vtc_rdy_bsc2</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>vtc_rdy_bsc3</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>vtc_rdy_bsc3</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>vtc_rdy_bsc4</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>vtc_rdy_bsc4</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>vtc_rdy_bsc5</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>vtc_rdy_bsc5</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>vtc_rdy_bsc6</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>vtc_rdy_bsc6</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>vtc_rdy_bsc7</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>vtc_rdy_bsc7</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>xiphy_rx_pins</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="display_high_speed_selectio_wiz" spirit:name="hssio_data_rx" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="display_high_speed_selectio_wiz" spirit:name="hssio_data_rx_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>pin0</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>clk_rxp</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>pin1</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>clk_rxn</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>pin2</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>data_rxp0</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>pin3</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>data_rxn0</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>pin4</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>data_rxp1</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>pin5</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>data_rxn1</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>pin6</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>data_rxp2</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>pin7</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>data_rxn2</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>pin8</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>data_rxp3</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>pin9</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>data_rxn3</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>data_to_fabric</spirit:name>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="display_high_speed_selectio_wiz" spirit:name="hssio_ip_to_pins" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="display_high_speed_selectio_wiz" spirit:name="hssio_ip_to_pins_rtl" spirit:version="1.0"/>
      <spirit:master/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ip_to_pins_0</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>data_to_fabric_clk_rxp</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ip_to_pins_1</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>data_to_fabric_clk_rxn</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ip_to_pins_2</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>data_to_fabric_data_rxp0</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ip_to_pins_3</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>data_to_fabric_data_rxn0</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ip_to_pins_4</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>data_to_fabric_data_rxp1</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ip_to_pins_5</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>data_to_fabric_data_rxn1</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ip_to_pins_6</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>data_to_fabric_data_rxp2</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ip_to_pins_7</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>data_to_fabric_data_rxn2</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ip_to_pins_8</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>data_to_fabric_data_rxp3</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ip_to_pins_9</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>data_to_fabric_data_rxn3</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
    </spirit:busInterface>
  </spirit:busInterfaces>
  <spirit:model>
    <spirit:views>
      <spirit:view>
        <spirit:name>xilinx_anylanguagebehavioralsimulation</spirit:name>
        <spirit:displayName>Simulation</spirit:displayName>
        <spirit:envIdentifier>:vivado.xilinx.com:simulation</spirit:envIdentifier>
        <spirit:modelName>bd_d10d_phy_0_hssio_rx_high_speed_selectio_wiz_v3_6_9</spirit:modelName>
        <spirit:fileSetRef>
          <spirit:localName>xilinx_anylanguagebehavioralsimulation_view_fileset</spirit:localName>
        </spirit:fileSetRef>
        <spirit:parameters>
          <spirit:parameter>
            <spirit:name>GENtimestamp</spirit:name>
            <spirit:value>Sun Jun 16 21:31:29 UTC 2024</spirit:value>
          </spirit:parameter>
          <spirit:parameter>
            <spirit:name>outputProductCRC</spirit:name>
            <spirit:value>9:acdfa66d</spirit:value>
          </spirit:parameter>
        </spirit:parameters>
      </spirit:view>
      <spirit:view>
        <spirit:name>xilinx_anylanguagesynthesis</spirit:name>
        <spirit:displayName>Synthesis</spirit:displayName>
        <spirit:envIdentifier>:vivado.xilinx.com:synthesis</spirit:envIdentifier>
        <spirit:modelName>bd_d10d_phy_0_hssio_rx_high_speed_selectio_wiz_v3_6_9</spirit:modelName>
        <spirit:fileSetRef>
          <spirit:localName>xilinx_anylanguagesynthesis_view_fileset</spirit:localName>
        </spirit:fileSetRef>
        <spirit:parameters>
          <spirit:parameter>
            <spirit:name>GENtimestamp</spirit:name>
            <spirit:value>Sun Jun 16 21:31:29 UTC 2024</spirit:value>
          </spirit:parameter>
          <spirit:parameter>
            <spirit:name>outputProductCRC</spirit:name>
            <spirit:value>9:22c7b43f</spirit:value>
          </spirit:parameter>
        </spirit:parameters>
      </spirit:view>
      <spirit:view>
        <spirit:name>xilinx_elaborateports</spirit:name>
        <spirit:displayName>Elaborate Ports</spirit:displayName>
        <spirit:envIdentifier>:vivado.xilinx.com:elaborate.ports</spirit:envIdentifier>
        <spirit:parameters>
          <spirit:parameter>
            <spirit:name>outputProductCRC</spirit:name>
            <spirit:value>9:afae0919</spirit:value>
          </spirit:parameter>
        </spirit:parameters>
      </spirit:view>
      <spirit:view>
        <spirit:name>xilinx_synthesisconstraints</spirit:name>
        <spirit:displayName>Synthesis Constraints</spirit:displayName>
        <spirit:envIdentifier>:vivado.xilinx.com:synthesis.constraints</spirit:envIdentifier>
        <spirit:parameters>
          <spirit:parameter>
            <spirit:name>outputProductCRC</spirit:name>
            <spirit:value>9:22c7b43f</spirit:value>
          </spirit:parameter>
        </spirit:parameters>
      </spirit:view>
      <spirit:view>
        <spirit:name>xilinx_verilogsimulationwrapper</spirit:name>
        <spirit:displayName>Verilog Simulation Wrapper</spirit:displayName>
        <spirit:envIdentifier>verilogSource:vivado.xilinx.com:simulation.wrapper</spirit:envIdentifier>
        <spirit:language>verilog</spirit:language>
        <spirit:modelName>bd_d10d_phy_0_hssio_rx</spirit:modelName>
        <spirit:fileSetRef>
          <spirit:localName>xilinx_verilogsimulationwrapper_view_fileset</spirit:localName>
        </spirit:fileSetRef>
        <spirit:parameters>
          <spirit:parameter>
            <spirit:name>GENtimestamp</spirit:name>
            <spirit:value>Sun Jun 16 21:31:29 UTC 2024</spirit:value>
          </spirit:parameter>
          <spirit:parameter>
            <spirit:name>outputProductCRC</spirit:name>
            <spirit:value>9:acdfa66d</spirit:value>
          </spirit:parameter>
        </spirit:parameters>
      </spirit:view>
      <spirit:view>
        <spirit:name>xilinx_verilogsynthesiswrapper</spirit:name>
        <spirit:displayName>Verilog Synthesis Wrapper</spirit:displayName>
        <spirit:envIdentifier>verilogSource:vivado.xilinx.com:synthesis.wrapper</spirit:envIdentifier>
        <spirit:language>verilog</spirit:language>
        <spirit:modelName>bd_d10d_phy_0_hssio_rx</spirit:modelName>
        <spirit:fileSetRef>
          <spirit:localName>xilinx_verilogsynthesiswrapper_view_fileset</spirit:localName>
        </spirit:fileSetRef>
        <spirit:parameters>
          <spirit:parameter>
            <spirit:name>GENtimestamp</spirit:name>
            <spirit:value>Sun Jun 16 21:31:29 UTC 2024</spirit:value>
          </spirit:parameter>
          <spirit:parameter>
            <spirit:name>outputProductCRC</spirit:name>
            <spirit:value>9:22c7b43f</spirit:value>
          </spirit:parameter>
        </spirit:parameters>
      </spirit:view>
    </spirit:views>
    <spirit:ports>
      <spirit:port>
        <spirit:name>clk_from_ibuf</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.clk_from_ibuf" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.PLL0_CLK_SOURCE&apos;)) = &quot;IBUF_TO_PLL&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.EN_IBUF_CLKOUT&apos;)) = 1) and (spirit:decode(id(&apos;PARAM_VALUE.PLL0_RX_EXTERNAL_CLK_TO_DATA&apos;)) = 2))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_data_valid</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_data_valid" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.FIFO_RD_EN_CONTROL&apos;)) = 0) and ((spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_RX&apos;)) = 1 or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BIDIR&apos;)) = 1))) and ((spirit:decode(id(&apos;PARAM_VALUE.PLL0_RX_EXTERNAL_CLK_TO_DATA&apos;)) != 2) and (spirit:decode(id(&apos;PARAM_VALUE.PLL0_RX_EXTERNAL_CLK_TO_DATA&apos;)) != 5)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>lptx_t</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_PIN_EN&apos;))) - 1)">4</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.lptx_t" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_TEMPLATE&apos;))=1)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>lptx_i_p</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_PIN_EN&apos;))) - 1)">4</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.lptx_i_p" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_TEMPLATE&apos;))=1)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>lptx_i_n</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_PIN_EN&apos;))) - 1)">4</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.lptx_i_n" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_TEMPLATE&apos;))=1)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>hs_rx_disable</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_PIN_EN&apos;))) - 1)">4</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.hs_rx_disable" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_TEMPLATE&apos;))=2)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>lp_rx_disable</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_PIN_EN&apos;))) - 1)">4</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.lp_rx_disable" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_TEMPLATE&apos;))=2)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>lp_rx_o_p</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_PIN_EN&apos;))) - 1)">4</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.lp_rx_o_p" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_TEMPLATE&apos;))=2)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>lp_rx_o_n</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_PIN_EN&apos;))) - 1)">4</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.lp_rx_o_n" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_TEMPLATE&apos;))=2)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_0</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_0" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN0&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN0_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN0_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_0</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_0" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN0&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN0_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN0_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_0</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_0" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN0&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN0_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN0_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_0</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_0" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN0&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN0_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN0_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_0</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_0" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN0&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN0_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN0_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_0</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_0" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN0&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN0_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN0_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_1</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_1" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN1&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_1</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_1" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN1&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_1</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_1" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN1&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_1</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_1" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN1&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_1</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_1" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN1&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_1</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_1" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN1&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_2</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_2" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN2&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN2_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN2_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_2</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_2" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN2&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN2_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN2_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_2</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_2" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN2&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN2_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN2_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_2</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_2" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN2&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN2_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN2_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_2</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_2" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN2&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN2_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN2_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_2</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_2" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN2&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN2_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN2_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_3</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_3" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN3&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_3</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_3" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN3&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_3</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_3" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN3&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_3</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_3" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN3&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_3</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_3" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN3&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_3</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_3" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN3&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_4</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_4" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN4&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN4_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN4_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_4</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_4" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN4&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN4_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN4_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_4</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_4" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN4&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN4_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN4_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_4</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_4" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN4&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN4_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN4_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_4</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_4" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN4&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN4_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN4_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_4</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_4" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN4&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN4_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN4_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_5</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_5" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN5&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_5</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_5" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN5&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_5</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_5" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN5&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_5</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_5" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN5&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_5</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_5" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN5&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_5</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_5" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN5&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_6</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_6" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN6&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN6_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN6_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_6</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_6" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN6&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN6_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN6_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_6</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_6" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN6&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN6_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN6_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_6</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_6" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN6&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN6_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN6_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_6</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_6" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN6&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN6_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN6_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_6</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_6" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN6&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN6_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN6_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_7</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_7" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN7&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_7</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_7" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN7&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_7</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_7" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN7&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_7</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_7" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN7&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_7</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_7" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN7&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_7</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_7" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN7&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_8</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_8" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN8&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN8_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN8_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_8</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_8" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN8&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN8_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN8_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_8</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_8" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN8&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN8_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN8_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_8</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_8" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN8&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN8_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN8_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_8</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_8" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN8&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN8_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN8_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_8</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_8" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN8&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN8_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN8_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_9</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_9" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN9&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_9</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_9" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN9&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_9</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_9" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN9&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_9</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_9" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN9&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_9</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_9" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN9&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_9</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_9" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN9&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_10</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_10" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN10&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN10_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN10_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_10</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_10" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN10&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN10_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN10_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_10</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_10" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN10&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN10_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN10_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_10</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_10" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN10&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN10_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN10_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_10</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_10" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN10&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN10_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN10_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_10</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_10" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN10&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN10_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN10_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_11</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_11" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN11&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_11</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_11" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN11&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_11</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_11" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN11&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_11</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_11" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN11&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_11</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_11" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN11&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_11</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_11" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN11&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_12</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_12" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN12&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN12_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN12_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_12</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_12" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN12&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN12_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN12_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_12</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_12" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN12&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN12_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN12_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_12</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_12" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN12&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN12_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN12_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_12</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_12" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN12&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN12_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN12_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_12</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_12" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN12&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN12_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN12_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_13</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_13" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN0&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN0_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN0_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_13</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_13" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN0&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN0_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN0_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_13</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_13" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN0&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN0_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN0_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_13</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_13" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN0&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN0_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN0_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_13</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_13" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN0&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN0_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN0_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_13</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_13" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN0&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN0_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN0_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_14</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_14" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN1&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_14</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_14" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN1&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_14</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_14" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN1&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_14</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_14" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN1&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_14</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_14" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN1&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_14</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_14" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN1&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_15</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_15" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN2&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN2_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN2_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_15</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_15" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN2&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN2_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN2_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_15</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_15" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN2&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN2_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN2_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_15</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_15" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN2&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN2_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN2_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_15</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_15" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN2&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN2_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN2_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_15</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_15" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN2&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN2_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN2_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_16</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_16" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN3&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_16</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_16" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN3&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_16</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_16" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN3&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_16</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_16" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN3&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_16</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_16" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN3&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_16</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_16" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN3&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_17</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_17" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN4&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN4_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN4_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_17</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_17" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN4&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN4_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN4_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_17</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_17" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN4&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN4_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN4_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_17</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_17" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN4&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN4_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN4_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_17</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_17" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN4&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN4_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN4_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_17</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_17" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN4&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN4_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN4_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_18</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_18" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN5&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_18</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_18" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN5&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_18</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_18" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN5&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_18</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_18" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN5&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_18</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_18" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN5&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_18</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_18" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN5&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_19</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_19" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN6&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN6_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN6_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_19</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_19" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN6&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN6_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN6_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_19</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_19" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN6&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN6_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN6_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_19</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_19" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN6&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN6_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN6_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_19</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_19" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN6&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN6_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN6_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_19</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_19" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN6&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN6_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN6_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_20</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_20" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN7&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_20</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_20" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN7&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_20</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_20" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN7&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_20</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_20" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN7&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_20</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_20" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN7&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_20</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_20" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN7&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_21</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_21" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN8&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN8_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN8_BUS_DIR&apos;)) = &quot;RX&quot;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN8_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_21</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_21" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN8&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN8_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN8_BUS_DIR&apos;)) = &quot;RX&quot;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN8_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_21</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_21" xilinx:dependency="((((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN8&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN8_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN8_BUS_DIR&apos;)) = &quot;RX&quot;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN8_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_21</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_21" xilinx:dependency="((((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN8&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN8_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN8_BUS_DIR&apos;)) = &quot;RX&quot;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN8_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_21</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_21" xilinx:dependency="((((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN8&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN8_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN8_BUS_DIR&apos;)) = &quot;RX&quot;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN8_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_21</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_21" xilinx:dependency="((((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN8&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN8_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN8_BUS_DIR&apos;)) = &quot;RX&quot;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN8_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_22</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_22" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN9&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_22</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_22" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN9&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_22</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_22" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN9&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_22</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_22" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN9&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_22</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_22" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN9&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_22</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_22" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN9&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_23</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_23" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN10&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN10_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN10_BUS_DIR&apos;)) = &quot;RX&quot;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN10_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_23</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_23" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN10&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN10_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN10_BUS_DIR&apos;)) = &quot;RX&quot;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN10_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_23</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_23" xilinx:dependency="((((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN10&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN10_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN10_BUS_DIR&apos;)) = &quot;RX&quot;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN10_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_23</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_23" xilinx:dependency="((((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN10&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN10_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN10_BUS_DIR&apos;)) = &quot;RX&quot;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN10_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_23</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_23" xilinx:dependency="((((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN10&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN10_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN10_BUS_DIR&apos;)) = &quot;RX&quot;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN10_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_23</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_23" xilinx:dependency="((((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN10&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN10_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN10_BUS_DIR&apos;)) = &quot;RX&quot;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN10_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_24</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_24" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN11&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_24</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_24" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN11&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_24</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_24" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN11&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_24</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_24" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN11&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_24</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_24" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN11&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_24</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_24" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN11&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_25</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_25" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN12&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN12_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN12_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_25</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_25" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN12&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN12_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN12_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_25</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_25" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN12&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN12_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN12_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_25</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_25" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN12&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN12_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN12_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_25</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_25" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN12&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN12_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN12_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_25</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_25" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN12&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN12_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN12_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_26</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_26" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN0&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_BUS_DIR&apos;)) = &quot;RX&quot;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_26</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_26" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN0&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_BUS_DIR&apos;)) = &quot;RX&quot;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_26</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_26" xilinx:dependency="((((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN0&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_BUS_DIR&apos;)) = &quot;RX&quot;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_26</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_26" xilinx:dependency="((((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN0&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_BUS_DIR&apos;)) = &quot;RX&quot;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_26</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_26" xilinx:dependency="((((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN0&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_BUS_DIR&apos;)) = &quot;RX&quot;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_26</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_26" xilinx:dependency="((((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN0&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_BUS_DIR&apos;)) = &quot;RX&quot;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_27</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_27" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN1&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_27</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_27" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN1&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_27</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_27" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN1&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_27</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_27" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN1&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_27</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_27" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN1&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_27</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_27" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN1&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_28</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_28" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN2&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN2_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN2_BUS_DIR&apos;)) = &quot;RX&quot;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN2_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_28</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_28" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN2&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN2_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN2_BUS_DIR&apos;)) = &quot;RX&quot;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN2_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_28</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_28" xilinx:dependency="((((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN2&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN2_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN2_BUS_DIR&apos;)) = &quot;RX&quot;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN2_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_28</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_28" xilinx:dependency="((((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN2&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN2_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN2_BUS_DIR&apos;)) = &quot;RX&quot;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN2_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_28</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_28" xilinx:dependency="((((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN2&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN2_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN2_BUS_DIR&apos;)) = &quot;RX&quot;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN2_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_28</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_28" xilinx:dependency="((((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN2&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN2_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN2_BUS_DIR&apos;)) = &quot;RX&quot;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN2_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_29</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_29" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN3&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_29</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_29" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN3&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_29</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_29" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN3&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_29</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_29" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN3&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_29</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_29" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN3&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_29</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_29" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN3&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_30</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_30" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN4&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN4_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN4_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_30</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_30" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN4&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN4_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN4_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_30</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_30" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN4&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN4_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN4_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_30</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_30" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN4&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN4_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN4_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_30</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_30" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN4&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN4_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN4_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_30</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_30" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN4&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN4_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN4_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_31</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_31" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN5&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_31</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_31" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN5&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_31</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_31" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN5&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_31</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_31" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN5&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_31</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_31" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN5&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_31</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_31" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN5&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_32</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_32" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN6&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN6_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN6_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_32</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_32" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN6&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN6_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN6_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_32</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_32" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN6&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN6_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN6_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_32</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_32" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN6&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN6_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN6_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_32</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_32" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN6&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN6_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN6_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_32</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_32" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN6&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN6_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN6_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_33</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_33" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN7&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_33</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_33" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN7&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_33</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_33" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN7&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_33</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_33" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN7&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_33</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_33" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN7&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_33</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_33" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN7&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_34</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_34" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN8&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN8_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN8_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_34</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_34" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN8&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN8_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN8_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_34</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_34" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN8&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN8_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN8_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_34</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_34" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN8&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN8_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN8_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_34</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_34" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN8&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN8_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN8_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_34</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_34" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN8&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN8_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN8_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_35</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_35" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN9&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_35</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_35" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN9&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_35</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_35" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN9&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_35</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_35" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN9&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_35</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_35" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN9&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_35</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_35" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN9&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_36</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_36" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN10&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN10_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN10_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_36</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_36" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN10&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN10_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN10_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_36</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_36" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN10&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN10_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN10_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_36</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_36" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN10&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN10_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN10_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_36</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_36" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN10&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN10_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN10_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_36</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_36" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN10&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN10_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN10_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_37</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_37" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN11&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_37</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_37" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN11&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_37</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_37" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN11&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_37</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_37" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN11&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_37</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_37" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN11&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_37</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_37" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN11&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_38</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_38" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN12&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN12_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN12_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_38</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_38" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN12&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN12_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN12_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_38</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_38" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN12&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN12_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN12_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_38</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_38" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN12&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN12_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN12_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_38</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_38" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN12&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN12_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN12_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_38</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_38" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN12&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN12_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN12_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_39</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_39" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN0&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN0_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN0_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_39</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_39" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN0&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN0_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN0_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_39</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_39" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN0&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN0_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN0_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_39</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_39" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN0&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN0_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN0_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_39</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_39" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN0&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN0_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN0_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_39</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_39" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN0&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN0_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN0_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_40</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_40" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN1&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_40</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_40" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN1&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_40</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_40" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN1&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_40</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_40" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN1&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_40</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_40" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN1&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_40</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_40" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN1&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_41</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_41" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN2&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN2_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN2_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_41</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_41" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN2&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN2_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN2_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_41</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_41" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN2&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN2_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN2_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_41</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_41" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN2&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN2_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN2_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_41</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_41" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN2&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN2_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN2_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_41</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_41" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN2&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN2_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN2_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_42</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_42" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN3&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_42</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_42" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN3&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_42</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_42" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN3&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_42</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_42" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN3&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_42</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_42" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN3&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_42</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_42" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN3&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_43</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_43" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN4&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN4_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN4_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_43</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_43" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN4&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN4_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN4_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_43</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_43" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN4&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN4_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN4_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_43</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_43" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN4&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN4_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN4_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_43</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_43" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN4&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN4_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN4_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_43</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_43" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN4&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN4_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN4_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_44</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_44" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN5&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_44</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_44" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN5&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_44</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_44" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN5&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_44</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_44" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN5&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_44</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_44" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN5&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_44</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_44" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN5&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_45</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_45" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN6&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN6_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN6_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_45</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_45" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN6&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN6_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN6_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_45</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_45" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN6&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN6_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN6_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_45</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_45" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN6&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN6_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN6_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_45</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_45" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN6&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN6_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN6_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_45</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_45" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN6&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN6_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN6_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_46</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_46" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN7&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_46</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_46" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN7&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_46</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_46" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN7&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_46</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_46" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN7&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_46</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_46" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN7&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_46</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_46" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN7&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_47</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_47" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN8&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN8_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN8_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_47</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_47" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN8&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN8_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN8_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_47</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_47" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN8&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN8_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN8_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_47</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_47" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN8&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN8_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN8_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_47</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_47" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN8&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN8_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN8_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_47</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_47" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN8&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN8_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN8_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_48</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_48" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN9&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_48</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_48" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN9&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_48</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_48" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN9&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_48</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_48" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN9&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_48</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_48" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN9&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_48</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_48" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN9&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_49</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_49" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN10&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN10_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN10_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_49</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_49" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN10&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN10_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN10_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_49</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_49" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN10&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN10_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN10_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_49</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_49" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN10&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN10_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN10_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_49</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_49" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN10&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN10_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN10_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_49</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_49" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN10&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN10_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN10_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_50</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_50" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN11&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_50</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_50" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN11&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_50</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_50" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN11&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_50</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_50" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN11&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_50</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_50" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN11&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_50</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_50" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN11&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_51</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_51" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN12&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN12_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN12_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_51</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_51" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN12&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN12_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN12_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_51</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_51" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN12&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN12_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN12_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_51</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_51" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN12&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN12_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN12_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_51</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_51" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN12&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN12_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN12_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_51</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_51" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN12&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN12_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN12_BUS_DIR&apos;)) = &quot;RX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvaluein_0</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvaluein_0" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN0&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN0_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN0_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvalueout_0</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvalueout_0" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN0&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN0_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN0_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_ce_0</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_ce_0" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN0&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN0_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN0_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_inc_0</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_inc_0" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN0&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN0_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN0_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_load_0</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_load_0" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN0&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN0_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN0_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_en_vtc_0</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_en_vtc_0" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN0&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN0_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN0_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvaluein_1</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvaluein_1" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN1&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvalueout_1</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvalueout_1" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN1&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_ce_1</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_ce_1" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN1&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_inc_1</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_inc_1" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN1&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_load_1</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_load_1" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN1&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_en_vtc_1</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_en_vtc_1" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN1&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvaluein_2</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvaluein_2" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN2&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN2_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN2_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvalueout_2</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvalueout_2" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN2&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN2_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN2_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_ce_2</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_ce_2" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN2&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN2_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN2_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_inc_2</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_inc_2" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN2&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN2_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN2_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_load_2</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_load_2" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN2&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN2_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN2_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_en_vtc_2</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_en_vtc_2" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN2&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN2_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN2_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvaluein_3</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvaluein_3" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN3&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvalueout_3</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvalueout_3" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN3&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_ce_3</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_ce_3" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN3&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_inc_3</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_inc_3" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN3&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_load_3</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_load_3" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN3&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_en_vtc_3</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_en_vtc_3" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN3&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvaluein_4</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvaluein_4" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN4&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN4_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN4_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvalueout_4</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvalueout_4" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN4&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN4_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN4_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_ce_4</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_ce_4" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN4&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN4_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN4_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_inc_4</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_inc_4" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN4&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN4_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN4_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_load_4</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_load_4" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN4&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN4_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN4_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_en_vtc_4</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_en_vtc_4" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN4&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN4_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN4_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvaluein_5</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvaluein_5" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN5&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvalueout_5</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvalueout_5" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN5&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_ce_5</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_ce_5" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN5&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_inc_5</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_inc_5" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN5&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_load_5</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_load_5" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN5&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_en_vtc_5</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_en_vtc_5" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN5&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvaluein_6</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvaluein_6" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN6&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN6_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN6_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvalueout_6</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvalueout_6" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN6&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN6_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN6_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_ce_6</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_ce_6" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN6&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN6_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN6_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_inc_6</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_inc_6" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN6&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN6_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN6_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_load_6</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_load_6" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN6&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN6_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN6_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_en_vtc_6</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_en_vtc_6" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN6&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN6_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN6_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvaluein_7</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvaluein_7" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN7&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvalueout_7</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvalueout_7" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN7&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_ce_7</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_ce_7" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN7&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_inc_7</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_inc_7" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN7&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_load_7</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_load_7" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN7&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_en_vtc_7</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_en_vtc_7" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN7&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvaluein_8</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvaluein_8" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN8&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN8_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN8_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvalueout_8</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvalueout_8" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN8&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN8_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN8_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_ce_8</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_ce_8" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN8&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN8_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN8_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_inc_8</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_inc_8" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN8&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN8_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN8_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_load_8</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_load_8" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN8&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN8_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN8_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_en_vtc_8</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_en_vtc_8" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN8&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN8_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN8_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvaluein_9</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvaluein_9" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN9&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvalueout_9</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvalueout_9" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN9&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_ce_9</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_ce_9" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN9&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_inc_9</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_inc_9" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN9&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_load_9</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_load_9" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN9&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_en_vtc_9</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_en_vtc_9" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN9&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvaluein_10</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvaluein_10" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN10&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN10_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN10_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvalueout_10</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvalueout_10" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN10&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN10_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN10_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_ce_10</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_ce_10" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN10&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN10_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN10_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_inc_10</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_inc_10" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN10&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN10_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN10_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_load_10</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_load_10" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN10&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN10_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN10_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_en_vtc_10</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_en_vtc_10" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN10&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN10_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN10_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvaluein_11</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvaluein_11" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN11&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvalueout_11</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvalueout_11" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN11&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_ce_11</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_ce_11" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN11&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_inc_11</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_inc_11" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN11&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_load_11</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_load_11" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN11&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_en_vtc_11</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_en_vtc_11" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN11&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvaluein_12</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvaluein_12" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN12&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN12_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN12_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvalueout_12</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvalueout_12" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN12&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN12_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN12_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_ce_12</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_ce_12" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN12&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN12_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN12_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_inc_12</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_inc_12" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN12&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN12_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN12_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_load_12</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_load_12" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN12&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN12_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN12_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_en_vtc_12</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_en_vtc_12" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN12&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN12_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN12_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvaluein_13</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvaluein_13" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN0&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN0_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN0_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvalueout_13</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvalueout_13" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN0&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN0_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN0_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_ce_13</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_ce_13" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN0&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN0_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN0_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_inc_13</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_inc_13" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN0&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN0_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN0_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_load_13</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_load_13" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN0&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN0_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN0_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_en_vtc_13</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_en_vtc_13" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN0&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN0_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN0_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvaluein_14</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvaluein_14" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN1&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvalueout_14</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvalueout_14" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN1&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_ce_14</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_ce_14" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN1&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_inc_14</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_inc_14" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN1&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_load_14</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_load_14" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN1&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_en_vtc_14</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_en_vtc_14" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN1&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvaluein_15</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvaluein_15" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN2&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN2_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN2_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvalueout_15</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvalueout_15" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN2&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN2_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN2_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_ce_15</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_ce_15" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN2&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN2_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN2_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_inc_15</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_inc_15" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN2&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN2_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN2_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_load_15</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_load_15" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN2&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN2_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN2_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_en_vtc_15</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_en_vtc_15" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN2&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN2_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN2_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvaluein_16</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvaluein_16" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN3&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvalueout_16</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvalueout_16" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN3&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_ce_16</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_ce_16" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN3&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_inc_16</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_inc_16" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN3&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_load_16</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_load_16" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN3&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_en_vtc_16</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_en_vtc_16" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN3&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvaluein_17</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvaluein_17" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN4&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN4_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN4_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvalueout_17</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvalueout_17" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN4&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN4_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN4_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_ce_17</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_ce_17" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN4&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN4_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN4_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_inc_17</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_inc_17" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN4&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN4_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN4_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_load_17</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_load_17" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN4&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN4_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN4_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_en_vtc_17</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_en_vtc_17" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN4&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN4_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN4_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvaluein_18</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvaluein_18" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN5&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvalueout_18</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvalueout_18" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN5&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_ce_18</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_ce_18" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN5&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_inc_18</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_inc_18" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN5&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_load_18</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_load_18" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN5&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_en_vtc_18</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_en_vtc_18" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN5&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvaluein_19</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvaluein_19" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN6&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN6_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN6_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvalueout_19</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvalueout_19" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN6&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN6_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN6_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_ce_19</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_ce_19" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN6&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN6_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN6_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_inc_19</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_inc_19" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN6&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN6_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN6_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_load_19</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_load_19" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN6&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN6_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN6_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_en_vtc_19</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_en_vtc_19" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN6&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN6_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN6_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvaluein_20</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvaluein_20" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN7&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvalueout_20</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvalueout_20" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN7&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_ce_20</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_ce_20" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN7&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_inc_20</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_inc_20" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN7&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_load_20</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_load_20" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN7&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_en_vtc_20</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_en_vtc_20" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN7&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvaluein_21</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvaluein_21" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN8&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN8_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN8_BUS_DIR&apos;)) = &quot;TX&quot;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN8_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvalueout_21</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvalueout_21" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN8&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN8_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN8_BUS_DIR&apos;)) = &quot;TX&quot;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN8_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_ce_21</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_ce_21" xilinx:dependency="((((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN8&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN8_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN8_BUS_DIR&apos;)) = &quot;TX&quot;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN8_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_inc_21</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_inc_21" xilinx:dependency="((((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN8&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN8_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN8_BUS_DIR&apos;)) = &quot;TX&quot;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN8_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_load_21</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_load_21" xilinx:dependency="((((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN8&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN8_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN8_BUS_DIR&apos;)) = &quot;TX&quot;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN8_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_en_vtc_21</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_en_vtc_21" xilinx:dependency="((((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN8&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN8_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN8_BUS_DIR&apos;)) = &quot;TX&quot;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN8_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvaluein_22</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvaluein_22" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN9&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_BUS_DIR&apos;)) = &quot;TX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvalueout_22</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvalueout_22" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN9&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_BUS_DIR&apos;)) = &quot;TX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_ce_22</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_ce_22" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN9&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_BUS_DIR&apos;)) = &quot;TX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_inc_22</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_inc_22" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN9&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_BUS_DIR&apos;)) = &quot;TX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_load_22</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_load_22" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN9&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_BUS_DIR&apos;)) = &quot;TX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_en_vtc_22</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_en_vtc_22" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN9&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_BUS_DIR&apos;)) = &quot;TX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvaluein_23</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvaluein_23" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN10&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN10_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN10_BUS_DIR&apos;)) = &quot;TX&quot;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN10_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvalueout_23</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvalueout_23" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN10&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN10_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN10_BUS_DIR&apos;)) = &quot;TX&quot;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN10_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_ce_23</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_ce_23" xilinx:dependency="((((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN10&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN10_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN10_BUS_DIR&apos;)) = &quot;TX&quot;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN10_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_inc_23</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_inc_23" xilinx:dependency="((((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN10&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN10_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN10_BUS_DIR&apos;)) = &quot;TX&quot;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN10_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_load_23</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_load_23" xilinx:dependency="((((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN10&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN10_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN10_BUS_DIR&apos;)) = &quot;TX&quot;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN10_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_en_vtc_23</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_en_vtc_23" xilinx:dependency="((((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN10&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN10_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN10_BUS_DIR&apos;)) = &quot;TX&quot;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN10_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvaluein_24</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvaluein_24" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN11&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_BUS_DIR&apos;)) = &quot;TX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvalueout_24</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvalueout_24" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN11&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_BUS_DIR&apos;)) = &quot;TX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_ce_24</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_ce_24" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN11&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_BUS_DIR&apos;)) = &quot;TX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_inc_24</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_inc_24" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN11&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_BUS_DIR&apos;)) = &quot;TX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_load_24</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_load_24" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN11&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_BUS_DIR&apos;)) = &quot;TX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_en_vtc_24</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_en_vtc_24" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN11&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_BUS_DIR&apos;)) = &quot;TX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvaluein_25</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvaluein_25" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN12&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN12_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN12_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvalueout_25</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvalueout_25" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN12&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN12_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN12_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_ce_25</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_ce_25" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN12&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN12_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN12_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_inc_25</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_inc_25" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN12&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN12_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN12_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_load_25</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_load_25" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN12&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN12_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN12_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_en_vtc_25</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_en_vtc_25" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN12&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN12_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN12_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvaluein_26</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvaluein_26" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN0&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_BUS_DIR&apos;)) = &quot;TX&quot;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvalueout_26</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvalueout_26" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN0&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_BUS_DIR&apos;)) = &quot;TX&quot;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_ce_26</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_ce_26" xilinx:dependency="((((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN0&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_BUS_DIR&apos;)) = &quot;TX&quot;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_inc_26</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_inc_26" xilinx:dependency="((((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN0&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_BUS_DIR&apos;)) = &quot;TX&quot;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_load_26</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_load_26" xilinx:dependency="((((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN0&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_BUS_DIR&apos;)) = &quot;TX&quot;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_en_vtc_26</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_en_vtc_26" xilinx:dependency="((((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN0&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_BUS_DIR&apos;)) = &quot;TX&quot;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvaluein_27</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvaluein_27" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN1&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_BUS_DIR&apos;)) = &quot;TX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvalueout_27</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvalueout_27" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN1&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_BUS_DIR&apos;)) = &quot;TX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_ce_27</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_ce_27" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN1&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_BUS_DIR&apos;)) = &quot;TX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_inc_27</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_inc_27" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN1&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_BUS_DIR&apos;)) = &quot;TX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_load_27</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_load_27" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN1&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_BUS_DIR&apos;)) = &quot;TX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_en_vtc_27</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_en_vtc_27" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN1&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_BUS_DIR&apos;)) = &quot;TX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvaluein_28</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvaluein_28" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN2&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN2_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN2_BUS_DIR&apos;)) = &quot;TX&quot;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN2_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvalueout_28</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvalueout_28" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN2&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN2_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN2_BUS_DIR&apos;)) = &quot;TX&quot;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN2_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_ce_28</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_ce_28" xilinx:dependency="((((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN2&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN2_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN2_BUS_DIR&apos;)) = &quot;TX&quot;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN2_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_inc_28</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_inc_28" xilinx:dependency="((((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN2&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN2_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN2_BUS_DIR&apos;)) = &quot;TX&quot;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN2_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_load_28</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_load_28" xilinx:dependency="((((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN2&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN2_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN2_BUS_DIR&apos;)) = &quot;TX&quot;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN2_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_en_vtc_28</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_en_vtc_28" xilinx:dependency="((((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN2&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN2_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN2_BUS_DIR&apos;)) = &quot;TX&quot;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN2_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvaluein_29</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvaluein_29" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN3&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_BUS_DIR&apos;)) = &quot;TX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvalueout_29</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvalueout_29" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN3&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_BUS_DIR&apos;)) = &quot;TX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_ce_29</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_ce_29" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN3&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_BUS_DIR&apos;)) = &quot;TX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_inc_29</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_inc_29" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN3&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_BUS_DIR&apos;)) = &quot;TX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_load_29</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_load_29" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN3&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_BUS_DIR&apos;)) = &quot;TX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_en_vtc_29</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_en_vtc_29" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN3&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_BUS_DIR&apos;)) = &quot;TX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvaluein_30</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvaluein_30" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN4&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN4_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN4_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvalueout_30</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvalueout_30" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN4&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN4_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN4_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_ce_30</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_ce_30" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN4&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN4_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN4_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_inc_30</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_inc_30" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN4&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN4_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN4_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_load_30</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_load_30" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN4&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN4_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN4_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_en_vtc_30</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_en_vtc_30" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN4&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN4_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN4_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvaluein_31</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvaluein_31" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN5&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvalueout_31</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvalueout_31" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN5&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_ce_31</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_ce_31" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN5&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_inc_31</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_inc_31" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN5&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_load_31</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_load_31" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN5&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_en_vtc_31</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_en_vtc_31" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN5&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvaluein_32</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvaluein_32" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN6&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN6_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN6_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvalueout_32</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvalueout_32" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN6&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN6_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN6_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_ce_32</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_ce_32" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN6&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN6_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN6_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_inc_32</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_inc_32" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN6&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN6_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN6_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_load_32</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_load_32" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN6&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN6_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN6_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_en_vtc_32</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_en_vtc_32" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN6&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN6_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN6_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvaluein_33</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvaluein_33" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN7&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvalueout_33</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvalueout_33" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN7&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_ce_33</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_ce_33" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN7&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_inc_33</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_inc_33" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN7&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_load_33</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_load_33" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN7&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_en_vtc_33</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_en_vtc_33" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN7&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvaluein_34</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvaluein_34" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN8&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN8_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN8_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvalueout_34</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvalueout_34" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN8&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN8_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN8_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_ce_34</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_ce_34" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN8&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN8_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN8_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_inc_34</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_inc_34" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN8&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN8_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN8_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_load_34</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_load_34" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN8&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN8_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN8_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_en_vtc_34</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_en_vtc_34" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN8&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN8_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN8_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvaluein_35</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvaluein_35" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN9&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvalueout_35</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvalueout_35" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN9&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_ce_35</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_ce_35" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN9&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_inc_35</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_inc_35" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN9&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_load_35</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_load_35" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN9&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_en_vtc_35</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_en_vtc_35" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN9&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvaluein_36</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvaluein_36" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN10&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN10_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN10_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvalueout_36</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvalueout_36" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN10&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN10_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN10_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_ce_36</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_ce_36" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN10&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN10_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN10_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_inc_36</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_inc_36" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN10&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN10_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN10_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_load_36</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_load_36" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN10&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN10_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN10_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_en_vtc_36</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_en_vtc_36" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN10&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN10_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN10_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvaluein_37</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvaluein_37" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN11&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvalueout_37</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvalueout_37" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN11&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_ce_37</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_ce_37" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN11&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_inc_37</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_inc_37" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN11&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_load_37</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_load_37" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN11&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_en_vtc_37</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_en_vtc_37" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN11&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvaluein_38</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvaluein_38" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN12&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN12_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN12_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvalueout_38</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvalueout_38" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN12&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN12_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN12_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_ce_38</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_ce_38" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN12&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN12_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN12_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_inc_38</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_inc_38" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN12&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN12_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN12_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_load_38</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_load_38" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN12&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN12_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN12_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_en_vtc_38</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_en_vtc_38" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN12&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN12_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN12_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvaluein_39</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvaluein_39" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN0&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN0_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN0_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvalueout_39</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvalueout_39" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN0&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN0_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN0_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_ce_39</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_ce_39" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN0&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN0_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN0_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_inc_39</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_inc_39" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN0&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN0_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN0_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_load_39</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_load_39" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN0&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN0_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN0_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_en_vtc_39</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_en_vtc_39" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN0&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN0_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN0_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvaluein_40</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvaluein_40" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN1&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvalueout_40</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvalueout_40" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN1&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_ce_40</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_ce_40" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN1&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_inc_40</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_inc_40" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN1&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_load_40</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_load_40" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN1&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_en_vtc_40</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_en_vtc_40" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN1&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvaluein_41</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvaluein_41" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN2&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN2_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN2_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvalueout_41</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvalueout_41" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN2&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN2_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN2_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_ce_41</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_ce_41" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN2&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN2_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN2_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_inc_41</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_inc_41" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN2&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN2_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN2_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_load_41</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_load_41" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN2&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN2_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN2_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_en_vtc_41</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_en_vtc_41" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN2&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN2_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN2_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvaluein_42</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvaluein_42" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN3&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvalueout_42</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvalueout_42" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN3&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_ce_42</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_ce_42" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN3&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_inc_42</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_inc_42" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN3&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_load_42</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_load_42" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN3&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_en_vtc_42</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_en_vtc_42" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN3&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvaluein_43</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvaluein_43" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN4&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN4_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN4_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvalueout_43</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvalueout_43" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN4&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN4_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN4_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_ce_43</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_ce_43" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN4&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN4_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN4_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_inc_43</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_inc_43" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN4&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN4_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN4_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_load_43</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_load_43" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN4&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN4_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN4_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_en_vtc_43</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_en_vtc_43" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN4&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN4_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN4_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvaluein_44</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvaluein_44" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN5&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvalueout_44</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvalueout_44" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN5&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_ce_44</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_ce_44" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN5&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_inc_44</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_inc_44" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN5&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_load_44</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_load_44" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN5&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_en_vtc_44</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_en_vtc_44" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN5&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvaluein_45</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvaluein_45" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN6&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN6_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN6_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvalueout_45</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvalueout_45" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN6&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN6_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN6_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_ce_45</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_ce_45" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN6&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN6_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN6_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_inc_45</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_inc_45" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN6&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN6_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN6_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_load_45</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_load_45" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN6&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN6_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN6_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_en_vtc_45</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_en_vtc_45" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN6&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN6_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN6_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvaluein_46</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvaluein_46" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN7&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvalueout_46</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvalueout_46" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN7&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_ce_46</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_ce_46" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN7&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_inc_46</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_inc_46" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN7&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_load_46</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_load_46" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN7&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_en_vtc_46</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_en_vtc_46" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN7&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvaluein_47</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvaluein_47" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN8&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN8_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN8_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvalueout_47</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvalueout_47" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN8&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN8_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN8_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_ce_47</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_ce_47" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN8&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN8_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN8_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_inc_47</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_inc_47" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN8&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN8_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN8_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_load_47</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_load_47" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN8&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN8_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN8_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_en_vtc_47</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_en_vtc_47" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN8&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN8_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN8_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvaluein_48</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvaluein_48" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN9&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvalueout_48</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvalueout_48" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN9&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_ce_48</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_ce_48" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN9&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_inc_48</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_inc_48" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN9&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_load_48</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_load_48" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN9&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_en_vtc_48</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_en_vtc_48" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN9&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvaluein_49</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvaluein_49" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN10&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN10_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN10_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvalueout_49</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvalueout_49" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN10&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN10_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN10_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_ce_49</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_ce_49" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN10&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN10_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN10_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_inc_49</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_inc_49" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN10&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN10_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN10_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_load_49</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_load_49" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN10&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN10_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN10_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_en_vtc_49</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_en_vtc_49" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN10&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN10_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN10_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvaluein_50</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvaluein_50" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN11&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvalueout_50</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvalueout_50" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN11&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_ce_50</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_ce_50" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN11&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_inc_50</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_inc_50" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN11&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_load_50</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_load_50" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN11&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_en_vtc_50</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_en_vtc_50" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))>0)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN11&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvaluein_51</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvaluein_51" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN12&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN12_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN12_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_cntvalueout_51</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_cntvalueout_51" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN12&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN12_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN12_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_ce_51</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_ce_51" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN12&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN12_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN12_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_inc_51</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_inc_51" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN12&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN12_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN12_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_load_51</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_load_51" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN12&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN12_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN12_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_en_vtc_51</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_en_vtc_51" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN12&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN12_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN12_BUS_DIR&apos;)) = &quot;TX&quot;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bidir_tx_clk</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bidir_tx_clk" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BIDIR&apos;))=1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tx_clk</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tx_clk" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_TX&apos;))=1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bidir_rx_clk</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bidir_rx_clk" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BIDIR&apos;))=1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_clk</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_clk" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_RX&apos;))=1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_ext_0</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_ext_0" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN0&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN0_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_ext_0</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_ext_0" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN0&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN0_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_ext_0</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_ext_0" xilinx:dependency="((((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN0&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN0_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_ext_0</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_ext_0" xilinx:dependency="((((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN0&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN0_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_ext_0</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_ext_0" xilinx:dependency="((((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN0&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN0_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_ext_0</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_ext_0" xilinx:dependency="((((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN0&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN0_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_ext_1</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_ext_1" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN1&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_ext_1</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_ext_1" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN1&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;) )  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_ext_1</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_ext_1" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN1&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_ext_1</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_ext_1" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN1&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_ext_1</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_ext_1" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN1&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_ext_1</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_ext_1" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN1&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_ext_2</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_ext_2" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN2&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN2_BUS_DIR&apos;)) = &quot;RX&quot;))  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_ext_2</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_ext_2" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN2&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN2_BUS_DIR&apos;)) = &quot;RX&quot;))  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_ext_2</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_ext_2" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN2&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN2_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_ext_2</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_ext_2" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN2&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN2_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_ext_2</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_ext_2" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN2&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN2_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_ext_2</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_ext_2" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN2&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN2_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_ext_3</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_ext_3" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN3&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;) )  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_ext_3</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_ext_3" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN3&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;) )  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_ext_3</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_ext_3" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN3&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_ext_3</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_ext_3" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN3&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_ext_3</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_ext_3" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN3&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_ext_3</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_ext_3" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN3&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_ext_4</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_ext_4" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN4&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN4_BUS_DIR&apos;)) = &quot;RX&quot;))  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_ext_4</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_ext_4" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN4&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN4_BUS_DIR&apos;)) = &quot;RX&quot;))  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_ext_4</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_ext_4" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN4&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN4_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_ext_4</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_ext_4" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN4&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN4_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_ext_4</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_ext_4" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN4&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN4_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_ext_4</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_ext_4" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN4&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN4_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_ext_5</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_ext_5" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN5&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;) )  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_ext_5</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_ext_5" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN5&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;) )  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_ext_5</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_ext_5" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN5&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_ext_5</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_ext_5" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN5&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_ext_5</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_ext_5" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN5&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_ext_5</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_ext_5" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN5&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_ext_6</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_ext_6" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN6&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN6_BUS_DIR&apos;)) = &quot;RX&quot;))  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_ext_6</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_ext_6" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN6&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN6_BUS_DIR&apos;)) = &quot;RX&quot;))  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_ext_6</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_ext_6" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN6&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN6_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_ext_6</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_ext_6" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN6&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN6_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_ext_6</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_ext_6" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN6&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN6_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_ext_6</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_ext_6" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN6&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN6_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_ext_7</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_ext_7" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN7&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;) )  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_ext_7</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_ext_7" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN7&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;) )  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_ext_7</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_ext_7" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN7&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_ext_7</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_ext_7" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN7&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_ext_7</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_ext_7" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN7&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_ext_7</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_ext_7" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN7&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_ext_8</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_ext_8" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN8&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN8_BUS_DIR&apos;)) = &quot;RX&quot;))  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_ext_8</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_ext_8" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN8&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN8_BUS_DIR&apos;)) = &quot;RX&quot;))  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_ext_8</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_ext_8" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN8&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN8_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_ext_8</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_ext_8" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN8&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN8_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_ext_8</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_ext_8" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN8&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN8_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_ext_8</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_ext_8" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN8&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN8_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_ext_9</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_ext_9" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN9&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;) )  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_ext_9</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_ext_9" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN9&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;) )  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_ext_9</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_ext_9" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN9&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_ext_9</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_ext_9" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN9&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_ext_9</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_ext_9" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN9&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_ext_9</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_ext_9" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN9&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_ext_10</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_ext_10" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN10&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN10_BUS_DIR&apos;)) = &quot;RX&quot;))  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_ext_10</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_ext_10" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN10&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN10_BUS_DIR&apos;)) = &quot;RX&quot;))  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_ext_10</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_ext_10" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN10&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN10_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_ext_10</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_ext_10" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN10&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN10_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_ext_10</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_ext_10" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN10&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN10_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_ext_10</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_ext_10" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN10&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN10_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_ext_11</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_ext_11" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN11&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;) )  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_ext_11</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_ext_11" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN11&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;) )  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_ext_11</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_ext_11" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN11&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_ext_11</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_ext_11" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN11&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_ext_11</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_ext_11" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN11&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_ext_11</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_ext_11" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN11&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_ext_12</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_ext_12" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN12&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN12_BUS_DIR&apos;)) = &quot;RX&quot;) )  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_ext_12</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_ext_12" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN12&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN12_BUS_DIR&apos;)) = &quot;RX&quot;) )  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_ext_12</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_ext_12" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN12&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN12_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_ext_12</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_ext_12" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN12&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN12_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_ext_12</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_ext_12" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN12&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN12_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_ext_12</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_ext_12" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN12&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN12_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_ext_13</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_ext_13" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN0&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN0_BUS_DIR&apos;)) = &quot;RX&quot;))  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_ext_13</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_ext_13" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN0&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN0_BUS_DIR&apos;)) = &quot;RX&quot;))  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_ext_13</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_ext_13" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN0&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN0_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_ext_13</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_ext_13" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN0&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN0_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_ext_13</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_ext_13" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN0&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN0_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_ext_13</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_ext_13" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN0&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN0_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_ext_14</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_ext_14" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN1&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;) )  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_ext_14</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_ext_14" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN1&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;) )  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_ext_14</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_ext_14" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN1&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_ext_14</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_ext_14" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN1&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_ext_14</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_ext_14" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN1&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_ext_14</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_ext_14" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN1&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_ext_15</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_ext_15" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN2&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN2_BUS_DIR&apos;)) = &quot;RX&quot;))  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_ext_15</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_ext_15" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN2&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN2_BUS_DIR&apos;)) = &quot;RX&quot;))  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_ext_15</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_ext_15" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN2&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN2_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_ext_15</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_ext_15" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN2&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN2_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_ext_15</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_ext_15" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN2&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN2_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_ext_15</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_ext_15" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN2&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN2_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_ext_16</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_ext_16" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN3&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;) )  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_ext_16</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_ext_16" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN3&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;) )  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_ext_16</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_ext_16" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN3&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_ext_16</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_ext_16" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN3&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_ext_16</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_ext_16" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN3&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_ext_16</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_ext_16" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN3&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_ext_17</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_ext_17" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN4&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN4_BUS_DIR&apos;)) = &quot;RX&quot;))  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_ext_17</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_ext_17" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN4&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN4_BUS_DIR&apos;)) = &quot;RX&quot;))  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_ext_17</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_ext_17" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN4&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN4_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_ext_17</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_ext_17" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN4&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN4_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_ext_17</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_ext_17" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN4&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN4_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_ext_17</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_ext_17" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN4&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN4_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_ext_18</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_ext_18" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN5&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;) )  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_ext_18</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_ext_18" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN5&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;) )  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_ext_18</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_ext_18" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN5&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_ext_18</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_ext_18" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN5&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_ext_18</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_ext_18" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN5&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_ext_18</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_ext_18" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN5&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_ext_19</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_ext_19" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN6&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN6_BUS_DIR&apos;)) = &quot;RX&quot;))  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_ext_19</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_ext_19" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN6&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN6_BUS_DIR&apos;)) = &quot;RX&quot;))  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_ext_19</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_ext_19" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN6&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN6_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_ext_19</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_ext_19" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN6&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN6_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_ext_19</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_ext_19" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN6&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN6_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_ext_19</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_ext_19" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN6&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN6_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_ext_20</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_ext_20" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN7&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;) )  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_ext_20</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_ext_20" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN7&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;) )  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_ext_20</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_ext_20" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN7&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_ext_20</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_ext_20" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN7&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_ext_20</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_ext_20" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN7&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_ext_20</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_ext_20" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN7&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_ext_21</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_ext_21" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN8&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN8_BUS_DIR&apos;)) = &quot;RX&quot;))  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN8_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_ext_21</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_ext_21" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN8&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN8_BUS_DIR&apos;)) = &quot;RX&quot;))  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN8_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_ext_21</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_ext_21" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN8&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN8_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN8_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_ext_21</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_ext_21" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN8&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN8_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN8_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_ext_21</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_ext_21" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN8&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN8_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN8_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_ext_21</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_ext_21" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN8&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN8_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN8_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_ext_22</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_ext_22" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN9&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;) )  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_ext_22</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_ext_22" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN9&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;) )  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_ext_22</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_ext_22" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN9&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_ext_22</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_ext_22" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN9&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_ext_22</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_ext_22" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN9&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_ext_22</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_ext_22" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN9&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_ext_23</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_ext_23" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN10&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN10_BUS_DIR&apos;)) = &quot;RX&quot;))  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN10_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_ext_23</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_ext_23" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN10&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN10_BUS_DIR&apos;)) = &quot;RX&quot;))  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN10_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_ext_23</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_ext_23" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN10&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN10_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN10_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_ext_23</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_ext_23" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN10&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN10_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN10_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_ext_23</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_ext_23" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN10&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN10_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN10_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_ext_23</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_ext_23" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN10&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN10_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN10_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_ext_24</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_ext_24" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN11&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;) )  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_ext_24</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_ext_24" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN11&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;) )  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_ext_24</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_ext_24" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN11&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_ext_24</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_ext_24" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN11&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_ext_24</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_ext_24" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN11&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_ext_24</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_ext_24" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN11&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_ext_25</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_ext_25" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN12&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN12_BUS_DIR&apos;)) = &quot;RX&quot;) )  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_ext_25</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_ext_25" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN12&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN12_BUS_DIR&apos;)) = &quot;RX&quot;) )  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_ext_25</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_ext_25" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN12&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN12_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_ext_25</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_ext_25" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN12&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN12_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_ext_25</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_ext_25" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN12&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN12_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_ext_25</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_ext_25" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN12&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN12_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_ext_26</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_ext_26" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN0&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_BUS_DIR&apos;)) = &quot;RX&quot;))  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_ext_26</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_ext_26" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN0&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_BUS_DIR&apos;)) = &quot;RX&quot;))  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_ext_26</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_ext_26" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN0&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_ext_26</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_ext_26" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN0&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_ext_26</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_ext_26" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN0&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_ext_26</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_ext_26" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN0&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_ext_27</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_ext_27" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN1&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;) )  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_ext_27</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_ext_27" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN1&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;) )  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_ext_27</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_ext_27" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN1&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_ext_27</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_ext_27" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN1&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_ext_27</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_ext_27" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN1&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_ext_27</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_ext_27" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN1&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_ext_28</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_ext_28" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN2&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN2_BUS_DIR&apos;)) = &quot;RX&quot;))  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN2_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_ext_28</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_ext_28" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN2&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN2_BUS_DIR&apos;)) = &quot;RX&quot;))  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN2_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_ext_28</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_ext_28" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN2&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN2_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN2_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_ext_28</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_ext_28" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN2&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN2_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN2_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_ext_28</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_ext_28" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN2&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN2_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN2_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_ext_28</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_ext_28" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN2&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN2_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN2_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_ext_29</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_ext_29" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN3&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;) )  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_ext_29</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_ext_29" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN3&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;) )  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_ext_29</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_ext_29" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN3&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_ext_29</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_ext_29" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN3&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_ext_29</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_ext_29" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN3&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_ext_29</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_ext_29" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN3&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_ext_30</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_ext_30" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN4&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN4_BUS_DIR&apos;)) = &quot;RX&quot;))  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_ext_30</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_ext_30" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN4&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN4_BUS_DIR&apos;)) = &quot;RX&quot;))  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_ext_30</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_ext_30" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN4&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN4_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_ext_30</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_ext_30" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN4&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN4_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_ext_30</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_ext_30" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN4&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN4_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_ext_30</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_ext_30" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN4&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN4_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_ext_31</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_ext_31" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN5&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;) )  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_ext_31</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_ext_31" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN5&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;) )  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_ext_31</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_ext_31" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN5&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_ext_31</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_ext_31" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN5&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_ext_31</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_ext_31" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN5&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_ext_31</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_ext_31" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN5&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_ext_32</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_ext_32" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN6&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN6_BUS_DIR&apos;)) = &quot;RX&quot;))  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_ext_32</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_ext_32" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN6&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN6_BUS_DIR&apos;)) = &quot;RX&quot;))  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_ext_32</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_ext_32" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN6&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN6_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_ext_32</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_ext_32" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN6&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN6_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_ext_32</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_ext_32" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN6&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN6_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_ext_32</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_ext_32" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN6&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN6_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_ext_33</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_ext_33" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN7&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;) )  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_ext_33</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_ext_33" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN7&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;) )  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_ext_33</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_ext_33" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN7&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_ext_33</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_ext_33" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN7&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_ext_33</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_ext_33" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN7&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_ext_33</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_ext_33" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN7&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_ext_34</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_ext_34" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN8&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN8_BUS_DIR&apos;)) = &quot;RX&quot;))  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_ext_34</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_ext_34" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN8&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN8_BUS_DIR&apos;)) = &quot;RX&quot;))  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_ext_34</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_ext_34" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN8&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN8_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_ext_34</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_ext_34" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN8&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN8_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_ext_34</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_ext_34" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN8&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN8_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_ext_34</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_ext_34" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN8&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN8_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_ext_35</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_ext_35" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN9&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;) )  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_ext_35</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_ext_35" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN9&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;) )  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_ext_35</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_ext_35" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN9&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_ext_35</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_ext_35" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN9&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_ext_35</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_ext_35" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN9&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_ext_35</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_ext_35" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN9&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_ext_36</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_ext_36" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN10&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN10_BUS_DIR&apos;)) = &quot;RX&quot;))  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_ext_36</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_ext_36" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN10&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN10_BUS_DIR&apos;)) = &quot;RX&quot;))  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_ext_36</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_ext_36" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN10&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN10_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_ext_36</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_ext_36" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN10&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN10_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_ext_36</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_ext_36" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN10&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN10_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_ext_36</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_ext_36" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN10&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN10_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_ext_37</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_ext_37" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN11&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;) )  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_ext_37</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_ext_37" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN11&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;) )  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_ext_37</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_ext_37" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN11&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_ext_37</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_ext_37" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN11&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_ext_37</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_ext_37" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN11&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_ext_37</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_ext_37" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN11&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_ext_38</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_ext_38" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN12&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN12_BUS_DIR&apos;)) = &quot;RX&quot;) )  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_ext_38</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_ext_38" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN12&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN12_BUS_DIR&apos;)) = &quot;RX&quot;) )  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_ext_38</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_ext_38" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN12&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN12_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_ext_38</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_ext_38" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN12&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN12_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_ext_38</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_ext_38" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN12&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN12_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_ext_38</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_ext_38" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN12&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN12_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_ext_39</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_ext_39" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN0&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN0_BUS_DIR&apos;)) = &quot;RX&quot;))  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_ext_39</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_ext_39" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN0&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN0_BUS_DIR&apos;)) = &quot;RX&quot;))  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_ext_39</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_ext_39" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN0&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN0_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_ext_39</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_ext_39" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN0&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN0_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_ext_39</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_ext_39" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN0&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN0_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_ext_39</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_ext_39" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN0&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN0_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_ext_40</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_ext_40" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN1&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;) )  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_ext_40</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_ext_40" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN1&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;) )  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_ext_40</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_ext_40" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN1&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_ext_40</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_ext_40" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN1&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_ext_40</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_ext_40" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN1&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_ext_40</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_ext_40" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN1&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_ext_41</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_ext_41" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN2&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN2_BUS_DIR&apos;)) = &quot;RX&quot;))  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_ext_41</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_ext_41" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN2&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN2_BUS_DIR&apos;)) = &quot;RX&quot;))  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_ext_41</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_ext_41" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN2&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN2_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_ext_41</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_ext_41" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN2&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN2_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_ext_41</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_ext_41" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN2&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN2_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_ext_41</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_ext_41" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN2&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN2_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_ext_42</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_ext_42" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN3&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;) )  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_ext_42</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_ext_42" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN3&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;) )  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_ext_42</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_ext_42" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN3&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_ext_42</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_ext_42" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN3&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_ext_42</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_ext_42" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN3&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_ext_42</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_ext_42" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN3&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_ext_43</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_ext_43" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN4&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN4_BUS_DIR&apos;)) = &quot;RX&quot;))  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_ext_43</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_ext_43" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN4&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN4_BUS_DIR&apos;)) = &quot;RX&quot;))  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_ext_43</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_ext_43" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN4&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN4_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_ext_43</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_ext_43" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN4&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN4_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_ext_43</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_ext_43" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN4&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN4_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_ext_43</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_ext_43" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN4&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN4_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_ext_44</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_ext_44" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN5&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;) )  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_ext_44</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_ext_44" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN5&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;) )  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_ext_44</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_ext_44" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN5&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_ext_44</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_ext_44" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN5&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_ext_44</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_ext_44" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN5&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_ext_44</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_ext_44" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN5&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_ext_45</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_ext_45" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN6&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN6_BUS_DIR&apos;)) = &quot;RX&quot;))  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_ext_45</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_ext_45" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN6&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN6_BUS_DIR&apos;)) = &quot;RX&quot;))  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_ext_45</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_ext_45" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN6&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN6_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_ext_45</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_ext_45" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN6&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN6_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_ext_45</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_ext_45" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN6&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN6_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_ext_45</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_ext_45" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN6&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN6_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_ext_46</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_ext_46" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN7&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;) )  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_ext_46</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_ext_46" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN7&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;) )  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_ext_46</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_ext_46" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN7&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_ext_46</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_ext_46" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN7&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_ext_46</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_ext_46" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN7&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_ext_46</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_ext_46" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN7&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_ext_47</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_ext_47" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN8&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN8_BUS_DIR&apos;)) = &quot;RX&quot;))  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_ext_47</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_ext_47" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN8&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN8_BUS_DIR&apos;)) = &quot;RX&quot;))  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_ext_47</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_ext_47" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN8&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN8_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_ext_47</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_ext_47" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN8&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN8_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_ext_47</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_ext_47" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN8&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN8_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_ext_47</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_ext_47" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN8&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN8_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_ext_48</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_ext_48" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN9&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;) )  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_ext_48</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_ext_48" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN9&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;) )  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_ext_48</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_ext_48" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN9&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_ext_48</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_ext_48" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN9&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_ext_48</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_ext_48" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN9&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_ext_48</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_ext_48" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN9&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_ext_49</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_ext_49" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN10&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN10_BUS_DIR&apos;)) = &quot;RX&quot;))  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_ext_49</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_ext_49" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN10&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN10_BUS_DIR&apos;)) = &quot;RX&quot;))  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_ext_49</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_ext_49" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN10&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN10_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_ext_49</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_ext_49" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN10&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN10_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_ext_49</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_ext_49" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN10&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN10_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_ext_49</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_ext_49" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN10&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN10_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_ext_50</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_ext_50" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN11&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;) )  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_ext_50</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_ext_50" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN11&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;) )  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_ext_50</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_ext_50" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN11&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_ext_50</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_ext_50" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN11&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_ext_50</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_ext_50" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN11&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_ext_50</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_ext_50" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN11&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_SIG_TYPE&apos;)) = &quot;DIFF&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvaluein_ext_51</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvaluein_ext_51" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN12&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN12_BUS_DIR&apos;)) = &quot;RX&quot;) )  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_cntvalueout_ext_51</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_cntvalueout_ext_51" xilinx:dependency="(((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN12&apos;))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN12_BUS_DIR&apos;)) = &quot;RX&quot;) )  and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_ce_ext_51</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_ce_ext_51" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN12&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN12_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_inc_ext_51</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_inc_ext_51" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN12&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN12_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_load_ext_51</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_load_ext_51" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN12&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN12_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_en_vtc_ext_51</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_en_vtc_ext_51" xilinx:dependency="((((:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_RX_DELAY_TYPE&apos;))=1)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN12&apos;)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN12_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.RX_DELAY_CASCADE&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>start_bitslip</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.start_bitslip" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_BITSLIP&apos;))= 1) and ((spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_RX&apos;))= 1) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BIDIR&apos;))= 1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rx_bitslip_sync_done</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rx_bitslip_sync_done" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_BITSLIP&apos;)) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_RX&apos;))= 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rxtx_bitslip_sync_done</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rxtx_bitslip_sync_done" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_BITSLIP&apos;)) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BIDIR&apos;))= 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bitslip_error_0</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bitslip_error_0" xilinx:dependency="((((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN0_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN0_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_BITSLIP&apos;)))) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN0&apos;))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bitslip_error_1</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bitslip_error_1" xilinx:dependency="(((((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_BITSLIP&apos;)))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN1&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bitslip_error_2</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bitslip_error_2" xilinx:dependency="((((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN2_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN2_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_BITSLIP&apos;)))) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN2&apos;))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bitslip_error_3</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bitslip_error_3" xilinx:dependency="(((((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_BITSLIP&apos;)))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN3&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bitslip_error_4</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bitslip_error_4" xilinx:dependency="((((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN4_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN4_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_BITSLIP&apos;)))) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN4&apos;))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bitslip_error_5</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bitslip_error_5" xilinx:dependency="(((((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_BITSLIP&apos;)))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN5&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bitslip_error_6</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bitslip_error_6" xilinx:dependency="((((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN6_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN6_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_BITSLIP&apos;)))) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN6&apos;))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bitslip_error_7</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bitslip_error_7" xilinx:dependency="(((((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_BITSLIP&apos;)))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN7&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bitslip_error_8</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bitslip_error_8" xilinx:dependency="((((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN8_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN8_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_BITSLIP&apos;)))) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN8&apos;))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bitslip_error_9</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bitslip_error_9" xilinx:dependency="(((((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_BITSLIP&apos;)))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN9&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bitslip_error_10</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bitslip_error_10" xilinx:dependency="((((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN10_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN10_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_BITSLIP&apos;)))) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN10&apos;))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bitslip_error_11</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bitslip_error_11" xilinx:dependency="(((((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_BITSLIP&apos;)))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN11&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bitslip_error_12</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bitslip_error_12" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN12_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or  (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN12_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_BITSLIP&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN12&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bitslip_error_13</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bitslip_error_13" xilinx:dependency="((((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN0_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN0_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_BITSLIP&apos;)))) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN0&apos;))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bitslip_error_14</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bitslip_error_14" xilinx:dependency="(((((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_BITSLIP&apos;)))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN1&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bitslip_error_15</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bitslip_error_15" xilinx:dependency="((((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN2_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN2_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_BITSLIP&apos;)))) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN2&apos;))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bitslip_error_16</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bitslip_error_16" xilinx:dependency="(((((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_BITSLIP&apos;)))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN3&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bitslip_error_17</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bitslip_error_17" xilinx:dependency="((((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN4_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN4_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_BITSLIP&apos;)))) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN4&apos;))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bitslip_error_18</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bitslip_error_18" xilinx:dependency="(((((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_BITSLIP&apos;)))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN5&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bitslip_error_19</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bitslip_error_19" xilinx:dependency="((((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN6_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN6_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_BITSLIP&apos;)))) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN6&apos;))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bitslip_error_20</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bitslip_error_20" xilinx:dependency="(((((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_BITSLIP&apos;)))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN7&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bitslip_error_21</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bitslip_error_21" xilinx:dependency="(((((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN8_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN8_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_BITSLIP&apos;)))) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN8&apos;)))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN8_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bitslip_error_22</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bitslip_error_22" xilinx:dependency="((((((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_BITSLIP&apos;)))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN9&apos;))))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bitslip_error_23</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bitslip_error_23" xilinx:dependency="(((((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN10_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN10_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_BITSLIP&apos;)))) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN10&apos;)))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN10_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bitslip_error_24</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bitslip_error_24" xilinx:dependency="((((((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_BITSLIP&apos;)))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN11&apos;))))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bitslip_error_25</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bitslip_error_25" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN12_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or  (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN12_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_BITSLIP&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN12&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bitslip_error_26</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bitslip_error_26" xilinx:dependency="(((((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_BITSLIP&apos;)))) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN0&apos;)))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bitslip_error_27</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bitslip_error_27" xilinx:dependency="((((((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_BITSLIP&apos;)))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN1&apos;))))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bitslip_error_28</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bitslip_error_28" xilinx:dependency="(((((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN2_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN2_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_BITSLIP&apos;)))) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN2&apos;)))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN2_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bitslip_error_29</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bitslip_error_29" xilinx:dependency="((((((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_BITSLIP&apos;)))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN3&apos;))))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bitslip_error_30</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bitslip_error_30" xilinx:dependency="((((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN4_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN4_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_BITSLIP&apos;)))) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN4&apos;))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bitslip_error_31</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bitslip_error_31" xilinx:dependency="(((((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_BITSLIP&apos;)))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN5&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bitslip_error_32</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bitslip_error_32" xilinx:dependency="((((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN6_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN6_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_BITSLIP&apos;)))) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN6&apos;))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bitslip_error_33</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bitslip_error_33" xilinx:dependency="(((((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_BITSLIP&apos;)))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN7&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bitslip_error_34</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bitslip_error_34" xilinx:dependency="((((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN8_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN8_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_BITSLIP&apos;)))) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN8&apos;))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bitslip_error_35</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bitslip_error_35" xilinx:dependency="(((((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_BITSLIP&apos;)))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN9&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bitslip_error_36</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bitslip_error_36" xilinx:dependency="((((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN10_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN10_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_BITSLIP&apos;)))) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN10&apos;))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bitslip_error_37</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bitslip_error_37" xilinx:dependency="(((((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_BITSLIP&apos;)))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN11&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bitslip_error_38</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bitslip_error_38" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN12_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or  (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN12_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_BITSLIP&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN12&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bitslip_error_39</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bitslip_error_39" xilinx:dependency="((((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN0_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN0_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_BITSLIP&apos;)))) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN0&apos;))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bitslip_error_40</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bitslip_error_40" xilinx:dependency="(((((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_BITSLIP&apos;)))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN1&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bitslip_error_41</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bitslip_error_41" xilinx:dependency="((((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN2_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN2_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_BITSLIP&apos;)))) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN2&apos;))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bitslip_error_42</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bitslip_error_42" xilinx:dependency="(((((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_BITSLIP&apos;)))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN3&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bitslip_error_43</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bitslip_error_43" xilinx:dependency="((((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN4_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN4_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_BITSLIP&apos;)))) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN4&apos;))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bitslip_error_44</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bitslip_error_44" xilinx:dependency="(((((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_BITSLIP&apos;)))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN5&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bitslip_error_45</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bitslip_error_45" xilinx:dependency="((((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN6_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN6_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_BITSLIP&apos;)))) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN6&apos;))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bitslip_error_46</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bitslip_error_46" xilinx:dependency="(((((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_BITSLIP&apos;)))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN7&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bitslip_error_47</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bitslip_error_47" xilinx:dependency="((((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN8_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN8_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_BITSLIP&apos;)))) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN8&apos;))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bitslip_error_48</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bitslip_error_48" xilinx:dependency="(((((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_BITSLIP&apos;)))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN9&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bitslip_error_49</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bitslip_error_49" xilinx:dependency="((((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN10_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN10_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_BITSLIP&apos;)))) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN10&apos;))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bitslip_error_50</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bitslip_error_50" xilinx:dependency="(((((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_BITSLIP&apos;)))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN11&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bitslip_error_51</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bitslip_error_51" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN12_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or  (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN12_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_BITSLIP&apos;))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN12&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_clk_0</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_clk_0" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN0_BUS_DIR&apos;)) = &quot;BIDIR&quot; or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN0_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN0&apos;)))))">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_clk_1</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_clk_1" xilinx:dependency="((((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN1&apos;)))))">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_clk_2</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_clk_2" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN2_BUS_DIR&apos;)) = &quot;BIDIR&quot; or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN2_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN2&apos;)))))">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_clk_3</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_clk_3" xilinx:dependency="((((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN3&apos;)))))">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_clk_4</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_clk_4" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN4_BUS_DIR&apos;)) = &quot;BIDIR&quot; or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN4_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN4&apos;)))))">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_clk_5</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_clk_5" xilinx:dependency="((((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN5&apos;)))))">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_clk_6</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_clk_6" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN6_BUS_DIR&apos;)) = &quot;BIDIR&quot; or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN6_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN6&apos;)))))">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_clk_7</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_clk_7" xilinx:dependency="((((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN7&apos;)))))">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_clk_8</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_clk_8" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN8_BUS_DIR&apos;)) = &quot;BIDIR&quot; or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN8_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN8&apos;)))))">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_clk_9</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_clk_9" xilinx:dependency="((((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN9&apos;)))))">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_clk_10</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_clk_10" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN10_BUS_DIR&apos;)) = &quot;BIDIR&quot; or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN10_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN10&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_clk_11</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_clk_11" xilinx:dependency="((((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN11&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_clk_12</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_clk_12" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN12_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or  (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN12_BUS_DIR&apos;)) = &quot;RX&quot;)) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN12&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_clk_13</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_clk_13" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN0_BUS_DIR&apos;)) = &quot;BIDIR&quot; or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN0_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN0&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_clk_14</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_clk_14" xilinx:dependency="((((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN1&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_clk_15</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_clk_15" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN2_BUS_DIR&apos;)) = &quot;BIDIR&quot; or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN2_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN2&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_clk_16</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_clk_16" xilinx:dependency="((((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN3&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_clk_17</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_clk_17" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN4_BUS_DIR&apos;)) = &quot;BIDIR&quot; or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN4_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN4&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_clk_18</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_clk_18" xilinx:dependency="((((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN5&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_clk_19</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_clk_19" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN6_BUS_DIR&apos;)) = &quot;BIDIR&quot; or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN6_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN6&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_clk_20</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_clk_20" xilinx:dependency="((((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN7&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_clk_21</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_clk_21" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN8_BUS_DIR&apos;)) = &quot;BIDIR&quot; or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN8_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN8&apos;)))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN8_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_clk_22</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_clk_22" xilinx:dependency="(((((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN9&apos;))))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_clk_23</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_clk_23" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN10_BUS_DIR&apos;)) = &quot;BIDIR&quot; or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN10_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN10&apos;)))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN10_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_clk_24</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_clk_24" xilinx:dependency="(((((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN11&apos;))))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_clk_25</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_clk_25" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN12_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or  (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN12_BUS_DIR&apos;)) = &quot;RX&quot;)) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN12&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_clk_26</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_clk_26" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_BUS_DIR&apos;)) = &quot;BIDIR&quot; or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN0&apos;)))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_clk_27</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_clk_27" xilinx:dependency="(((((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN1&apos;)))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_clk_28</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_clk_28" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN2_BUS_DIR&apos;)) = &quot;BIDIR&quot; or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN2_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN2&apos;)))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN2_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_clk_29</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_clk_29" xilinx:dependency="(((((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN3&apos;))))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_clk_30</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_clk_30" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN4_BUS_DIR&apos;)) = &quot;BIDIR&quot; or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN4_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN4&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_clk_31</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_clk_31" xilinx:dependency="((((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN5&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_clk_32</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_clk_32" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN6_BUS_DIR&apos;)) = &quot;BIDIR&quot; or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN6_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN6&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_clk_33</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_clk_33" xilinx:dependency="((((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN7&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_clk_34</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_clk_34" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN8_BUS_DIR&apos;)) = &quot;BIDIR&quot; or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN8_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN8&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_clk_35</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_clk_35" xilinx:dependency="((((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN9&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_clk_36</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_clk_36" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN10_BUS_DIR&apos;)) = &quot;BIDIR&quot; or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN10_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN10&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_clk_37</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_clk_37" xilinx:dependency="((((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN11&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_clk_38</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_clk_38" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN12_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or  (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN12_BUS_DIR&apos;)) = &quot;RX&quot;)) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN12&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_clk_39</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_clk_39" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN0_BUS_DIR&apos;)) = &quot;BIDIR&quot; or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN0_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN0&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_clk_40</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_clk_40" xilinx:dependency="((((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN1&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_clk_41</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_clk_41" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN2_BUS_DIR&apos;)) = &quot;BIDIR&quot; or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN2_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN2&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_clk_42</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_clk_42" xilinx:dependency="((((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN3&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_clk_43</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_clk_43" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN4_BUS_DIR&apos;)) = &quot;BIDIR&quot; or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN4_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN4&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_clk_44</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_clk_44" xilinx:dependency="((((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN5&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_clk_45</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_clk_45" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN6_BUS_DIR&apos;)) = &quot;BIDIR&quot; or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN6_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN6&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_clk_46</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_clk_46" xilinx:dependency="((((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN7&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_clk_47</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_clk_47" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN8_BUS_DIR&apos;)) = &quot;BIDIR&quot; or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN8_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN8&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_clk_48</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_clk_48" xilinx:dependency="((((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN9&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_clk_49</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_clk_49" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN10_BUS_DIR&apos;)) = &quot;BIDIR&quot; or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN10_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN10&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_clk_50</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_clk_50" xilinx:dependency="((((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN11&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_clk_51</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_clk_51" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN12_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or  (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN12_BUS_DIR&apos;)) = &quot;RX&quot;)) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN12&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_en_0</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_en_0" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.FIFO_RD_EN_CONTROL&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN0_BUS_DIR&apos;)) = &quot;BIDIR&quot; or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN0_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN0&apos;)))))">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_en_1</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_en_1" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.FIFO_RD_EN_CONTROL&apos;)) = 1) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN1&apos;)))))">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_en_2</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_en_2" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.FIFO_RD_EN_CONTROL&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN2_BUS_DIR&apos;)) = &quot;BIDIR&quot; or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN2_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN2&apos;)))))">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_en_3</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_en_3" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.FIFO_RD_EN_CONTROL&apos;)) = 1) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN3&apos;)))))">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_en_4</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_en_4" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.FIFO_RD_EN_CONTROL&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN4_BUS_DIR&apos;)) = &quot;BIDIR&quot; or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN4_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN4&apos;)))))">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_en_5</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_en_5" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.FIFO_RD_EN_CONTROL&apos;)) = 1) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN5&apos;)))))">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_en_6</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_en_6" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.FIFO_RD_EN_CONTROL&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN6_BUS_DIR&apos;)) = &quot;BIDIR&quot; or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN6_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN6&apos;)))))">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_en_7</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_en_7" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.FIFO_RD_EN_CONTROL&apos;)) = 1) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN7&apos;)))))">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_en_8</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_en_8" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.FIFO_RD_EN_CONTROL&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN8_BUS_DIR&apos;)) = &quot;BIDIR&quot; or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN8_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN8&apos;)))))">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_en_9</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_en_9" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.FIFO_RD_EN_CONTROL&apos;)) = 1) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN9&apos;)))))">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_en_10</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_en_10" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.FIFO_RD_EN_CONTROL&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN10_BUS_DIR&apos;)) = &quot;BIDIR&quot; or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN10_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN10&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_en_11</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_en_11" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.FIFO_RD_EN_CONTROL&apos;)) = 1) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN11&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_en_12</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_en_12" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.FIFO_RD_EN_CONTROL&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN12_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or  (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN12_BUS_DIR&apos;)) = &quot;RX&quot;)) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN12&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_en_13</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_en_13" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.FIFO_RD_EN_CONTROL&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN0_BUS_DIR&apos;)) = &quot;BIDIR&quot; or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN0_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN0&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_en_14</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_en_14" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.FIFO_RD_EN_CONTROL&apos;)) = 1) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN1&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_en_15</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_en_15" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.FIFO_RD_EN_CONTROL&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN2_BUS_DIR&apos;)) = &quot;BIDIR&quot; or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN2_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN2&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_en_16</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_en_16" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.FIFO_RD_EN_CONTROL&apos;)) = 1) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN3&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_en_17</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_en_17" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.FIFO_RD_EN_CONTROL&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN4_BUS_DIR&apos;)) = &quot;BIDIR&quot; or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN4_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN4&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_en_18</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_en_18" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.FIFO_RD_EN_CONTROL&apos;)) = 1) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN5&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_en_19</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_en_19" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.FIFO_RD_EN_CONTROL&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN6_BUS_DIR&apos;)) = &quot;BIDIR&quot; or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN6_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN6&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_en_20</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_en_20" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.FIFO_RD_EN_CONTROL&apos;)) = 1) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN7&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_en_21</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_en_21" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.FIFO_RD_EN_CONTROL&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN8_BUS_DIR&apos;)) = &quot;BIDIR&quot; or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN8_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN8&apos;)))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN8_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_en_22</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_en_22" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.FIFO_RD_EN_CONTROL&apos;)) = 1) and ((((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN9&apos;))))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_en_23</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_en_23" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.FIFO_RD_EN_CONTROL&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN10_BUS_DIR&apos;)) = &quot;BIDIR&quot; or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN10_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN10&apos;)))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN10_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_en_24</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_en_24" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.FIFO_RD_EN_CONTROL&apos;)) = 1) and ((((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN11&apos;))))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_en_25</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_en_25" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.FIFO_RD_EN_CONTROL&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN12_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or  (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN12_BUS_DIR&apos;)) = &quot;RX&quot;)) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN12&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_en_26</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_en_26" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.FIFO_RD_EN_CONTROL&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_BUS_DIR&apos;)) = &quot;BIDIR&quot; or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN0&apos;)))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_en_27</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_en_27" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.FIFO_RD_EN_CONTROL&apos;)) = 1) and ((((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN1&apos;)))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_en_28</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_en_28" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.FIFO_RD_EN_CONTROL&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN2_BUS_DIR&apos;)) = &quot;BIDIR&quot; or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN2_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN2&apos;)))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN2_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_en_29</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_en_29" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.FIFO_RD_EN_CONTROL&apos;)) = 1) and ((((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN3&apos;))))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_en_30</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_en_30" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.FIFO_RD_EN_CONTROL&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN4_BUS_DIR&apos;)) = &quot;BIDIR&quot; or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN4_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN4&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_en_31</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_en_31" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.FIFO_RD_EN_CONTROL&apos;)) = 1) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN5&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_en_32</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_en_32" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.FIFO_RD_EN_CONTROL&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN6_BUS_DIR&apos;)) = &quot;BIDIR&quot; or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN6_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN6&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_en_33</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_en_33" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.FIFO_RD_EN_CONTROL&apos;)) = 1) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN7&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_en_34</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_en_34" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.FIFO_RD_EN_CONTROL&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN8_BUS_DIR&apos;)) = &quot;BIDIR&quot; or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN8_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN8&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_en_35</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_en_35" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.FIFO_RD_EN_CONTROL&apos;)) = 1) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN9&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_en_36</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_en_36" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.FIFO_RD_EN_CONTROL&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN10_BUS_DIR&apos;)) = &quot;BIDIR&quot; or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN10_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN10&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_en_37</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_en_37" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.FIFO_RD_EN_CONTROL&apos;)) = 1) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN11&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_en_38</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_en_38" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.FIFO_RD_EN_CONTROL&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN12_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or  (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN12_BUS_DIR&apos;)) = &quot;RX&quot;)) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN12&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_en_39</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_en_39" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.FIFO_RD_EN_CONTROL&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN0_BUS_DIR&apos;)) = &quot;BIDIR&quot; or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN0_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN0&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_en_40</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_en_40" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.FIFO_RD_EN_CONTROL&apos;)) = 1) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN1&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_en_41</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_en_41" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.FIFO_RD_EN_CONTROL&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN2_BUS_DIR&apos;)) = &quot;BIDIR&quot; or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN2_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN2&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_en_42</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_en_42" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.FIFO_RD_EN_CONTROL&apos;)) = 1) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN3&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_en_43</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_en_43" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.FIFO_RD_EN_CONTROL&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN4_BUS_DIR&apos;)) = &quot;BIDIR&quot; or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN4_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN4&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_en_44</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_en_44" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.FIFO_RD_EN_CONTROL&apos;)) = 1) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN5&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_en_45</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_en_45" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.FIFO_RD_EN_CONTROL&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN6_BUS_DIR&apos;)) = &quot;BIDIR&quot; or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN6_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN6&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_en_46</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_en_46" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.FIFO_RD_EN_CONTROL&apos;)) = 1) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN7&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_en_47</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_en_47" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.FIFO_RD_EN_CONTROL&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN8_BUS_DIR&apos;)) = &quot;BIDIR&quot; or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN8_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN8&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_en_48</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_en_48" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.FIFO_RD_EN_CONTROL&apos;)) = 1) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN9&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_en_49</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_en_49" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.FIFO_RD_EN_CONTROL&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN10_BUS_DIR&apos;)) = &quot;BIDIR&quot; or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN10_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN10&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_en_50</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_en_50" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.FIFO_RD_EN_CONTROL&apos;)) = 1) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN11&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_rd_en_51</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_rd_en_51" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.FIFO_RD_EN_CONTROL&apos;)) = 1) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN12_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or  (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN12_BUS_DIR&apos;)) = &quot;RX&quot;)) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN12&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_empty_0</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_empty_0" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN0_BUS_DIR&apos;)) = &quot;BIDIR&quot; or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN0_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN0&apos;)))))">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_empty_1</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_empty_1" xilinx:dependency="((((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN1&apos;)))))">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_empty_2</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_empty_2" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN2_BUS_DIR&apos;)) = &quot;BIDIR&quot; or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN2_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN2&apos;)))))">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_empty_3</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_empty_3" xilinx:dependency="((((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN3&apos;)))))">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_empty_4</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_empty_4" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN4_BUS_DIR&apos;)) = &quot;BIDIR&quot; or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN4_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN4&apos;)))))">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_empty_5</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_empty_5" xilinx:dependency="((((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN5&apos;)))))">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_empty_6</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_empty_6" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN6_BUS_DIR&apos;)) = &quot;BIDIR&quot; or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN6_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN6&apos;)))))">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_empty_7</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_empty_7" xilinx:dependency="((((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN7&apos;)))))">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_empty_8</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_empty_8" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN8_BUS_DIR&apos;)) = &quot;BIDIR&quot; or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN8_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN8&apos;)))))">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_empty_9</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_empty_9" xilinx:dependency="((((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN9&apos;)))))">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_empty_10</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_empty_10" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN10_BUS_DIR&apos;)) = &quot;BIDIR&quot; or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN10_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN10&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_empty_11</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_empty_11" xilinx:dependency="((((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN11&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_empty_12</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_empty_12" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN12_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or  (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN12_BUS_DIR&apos;)) = &quot;RX&quot;)) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN12&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_empty_13</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_empty_13" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN0_BUS_DIR&apos;)) = &quot;BIDIR&quot; or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN0_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN0&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_empty_14</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_empty_14" xilinx:dependency="((((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN1&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_empty_15</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_empty_15" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN2_BUS_DIR&apos;)) = &quot;BIDIR&quot; or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN2_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN2&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_empty_16</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_empty_16" xilinx:dependency="((((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN3&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_empty_17</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_empty_17" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN4_BUS_DIR&apos;)) = &quot;BIDIR&quot; or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN4_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN4&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_empty_18</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_empty_18" xilinx:dependency="((((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN5&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_empty_19</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_empty_19" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN6_BUS_DIR&apos;)) = &quot;BIDIR&quot; or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN6_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN6&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_empty_20</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_empty_20" xilinx:dependency="((((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN7&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_empty_21</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_empty_21" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN8_BUS_DIR&apos;)) = &quot;BIDIR&quot; or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN8_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN8&apos;)))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN8_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_empty_22</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_empty_22" xilinx:dependency="(((((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN9&apos;))))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_empty_23</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_empty_23" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN10_BUS_DIR&apos;)) = &quot;BIDIR&quot; or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN10_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN10&apos;)))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN10_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_empty_24</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_empty_24" xilinx:dependency="(((((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN11&apos;))))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_empty_25</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_empty_25" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN12_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN12_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN12&apos;))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_empty_26</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_empty_26" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_BUS_DIR&apos;)) = &quot;BIDIR&quot; or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN0&apos;)))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_empty_27</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_empty_27" xilinx:dependency="(((((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN1&apos;)))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_empty_28</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_empty_28" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN2_BUS_DIR&apos;)) = &quot;BIDIR&quot; or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN2_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN2&apos;)))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN2_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_empty_29</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_empty_29" xilinx:dependency="(((((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN3&apos;))))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_empty_30</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_empty_30" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN4_BUS_DIR&apos;)) = &quot;BIDIR&quot; or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN4_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN4&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_empty_31</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_empty_31" xilinx:dependency="((((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN5&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_empty_32</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_empty_32" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN6_BUS_DIR&apos;)) = &quot;BIDIR&quot; or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN6_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN6&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_empty_33</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_empty_33" xilinx:dependency="((((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN7&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_empty_34</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_empty_34" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN8_BUS_DIR&apos;)) = &quot;BIDIR&quot; or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN8_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN8&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_empty_35</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_empty_35" xilinx:dependency="((((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN9&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_empty_36</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_empty_36" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN10_BUS_DIR&apos;)) = &quot;BIDIR&quot; or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN10_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN10&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_empty_37</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_empty_37" xilinx:dependency="((((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN11&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_empty_38</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_empty_38" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN12_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or  (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN12_BUS_DIR&apos;)) = &quot;RX&quot;)) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN12&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_empty_39</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_empty_39" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN0_BUS_DIR&apos;)) = &quot;BIDIR&quot; or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN0_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN0&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_empty_40</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_empty_40" xilinx:dependency="((((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN1&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_empty_41</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_empty_41" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN2_BUS_DIR&apos;)) = &quot;BIDIR&quot; or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN2_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN2&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_empty_42</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_empty_42" xilinx:dependency="((((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN3&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_empty_43</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_empty_43" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN4_BUS_DIR&apos;)) = &quot;BIDIR&quot; or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN4_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN4&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_empty_44</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_empty_44" xilinx:dependency="((((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN5&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_empty_45</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_empty_45" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN6_BUS_DIR&apos;)) = &quot;BIDIR&quot; or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN6_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN6&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_empty_46</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_empty_46" xilinx:dependency="((((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN7&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_empty_47</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_empty_47" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN8_BUS_DIR&apos;)) = &quot;BIDIR&quot; or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN8_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN8&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_empty_48</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_empty_48" xilinx:dependency="((((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN9&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_empty_49</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_empty_49" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN10_BUS_DIR&apos;)) = &quot;BIDIR&quot; or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN10_BUS_DIR&apos;)) = &quot;RX&quot;)) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN10&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_empty_50</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_empty_50" xilinx:dependency="((((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_BUS_DIR&apos;)) = &quot;RX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_N_PINS&apos;)) = 1))) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN11&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_empty_51</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_empty_51" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN12_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or  (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN12_BUS_DIR&apos;)) = &quot;RX&quot;)) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN12&apos;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_wr_clk_0</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_wr_clk_0" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN0_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN0_BUS_DIR&apos;)) = &quot;RX&quot;)) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN0&apos;)))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN0_DATA_STROBE&apos;)) = &quot;Strobe&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN0_DATA_STROBE&apos;)) = &quot;Strobe_P&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN0_DATA_STROBE&apos;)) = &quot;Strobe_N&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN0_DATA_STROBE&apos;)) = &quot;INV_Strobe_P&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN0_DATA_STROBE&apos;)) = &quot;INV_Strobe_N&quot;)) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_PLL0_FIFO_WRITE_CLK_EN&apos;)) = 1) )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_wr_clk_6</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_wr_clk_6" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN6_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN6_BUS_DIR&apos;)) = &quot;RX&quot;)) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN6&apos;)))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN6_DATA_STROBE&apos;)) = &quot;Strobe&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN6_DATA_STROBE&apos;)) = &quot;Strobe_P&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN6_DATA_STROBE&apos;)) = &quot;Strobe_N&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN6_DATA_STROBE&apos;)) = &quot;INV_Strobe_P&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN6_DATA_STROBE&apos;)) = &quot;INV_Strobe_N&quot;))  and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_PLL0_FIFO_WRITE_CLK_EN&apos;)) = 1) )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_wr_clk_13</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_wr_clk_13" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN0_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN0_BUS_DIR&apos;)) = &quot;RX&quot;)) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN0&apos;)))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN0_DATA_STROBE&apos;)) = &quot;Strobe&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN0_DATA_STROBE&apos;)) = &quot;Strobe_P&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN0_DATA_STROBE&apos;)) = &quot;Strobe_N&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN0_DATA_STROBE&apos;)) = &quot;INV_Strobe_P&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN0_DATA_STROBE&apos;)) = &quot;INV_Strobe_N&quot;)) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_PLL0_FIFO_WRITE_CLK_EN&apos;)) = 1) )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_wr_clk_19</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_wr_clk_19" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN6_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN6_BUS_DIR&apos;)) = &quot;RX&quot;)) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN6&apos;)))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN6_DATA_STROBE&apos;)) = &quot;Strobe&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN6_DATA_STROBE&apos;)) = &quot;Strobe_P&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN6_DATA_STROBE&apos;)) = &quot;Strobe_N&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN6_DATA_STROBE&apos;)) = &quot;INV_Strobe_P&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN6_DATA_STROBE&apos;)) = &quot;INV_Strobe_N&quot;)) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_PLL0_FIFO_WRITE_CLK_EN&apos;)) = 1) )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_wr_clk_26</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_wr_clk_26" xilinx:dependency="(((((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_BUS_DIR&apos;)) = &quot;RX&quot;)) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN0&apos;)))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_DATA_STROBE&apos;)) = &quot;Strobe&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_DATA_STROBE&apos;)) = &quot;Strobe_P&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_DATA_STROBE&apos;)) = &quot;Strobe_N&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_DATA_STROBE&apos;)) = &quot;INV_Strobe_P&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_DATA_STROBE&apos;)) = &quot;INV_Strobe_N&quot;))) or (((spirit:decode(id(&apos;PARAM_VALUE.PLL0_RX_EXTERNAL_CLK_TO_DATA&apos;)) =0)  or (spirit:decode(id(&apos;PARAM_VALUE.PLL0_RX_EXTERNAL_CLK_TO_DATA&apos;)) =1)) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_BUS_DIR&apos;)) = &quot;RX&quot;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_PLL0_FIFO_WRITE_CLK_EN&apos;)) = 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_wr_clk_32</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_wr_clk_32" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN6_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN6_BUS_DIR&apos;)) = &quot;RX&quot;)) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN6&apos;)))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN6_DATA_STROBE&apos;)) = &quot;Strobe&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN6_DATA_STROBE&apos;)) = &quot;Strobe_P&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN6_DATA_STROBE&apos;)) = &quot;Strobe_N&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN6_DATA_STROBE&apos;)) = &quot;INV_Strobe_P&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN6_DATA_STROBE&apos;)) = &quot;INV_Strobe_N&quot;)) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_PLL0_FIFO_WRITE_CLK_EN&apos;)) = 1) )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_wr_clk_39</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_wr_clk_39" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN0_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN0_BUS_DIR&apos;)) = &quot;RX&quot;)) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN0&apos;)))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN0_DATA_STROBE&apos;)) = &quot;STROBE&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN0_DATA_STROBE&apos;)) = &quot;Strobe_P&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN0_DATA_STROBE&apos;)) = &quot;Strobe_N&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN0_DATA_STROBE&apos;)) = &quot;INV_Strobe_P&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN0_DATA_STROBE&apos;)) = &quot;INV_Strobe_N&quot;)) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_PLL0_FIFO_WRITE_CLK_EN&apos;)) = 1) )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>fifo_wr_clk_45</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.fifo_wr_clk_45" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN6_BUS_DIR&apos;)) = &quot;BIDIR&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN6_BUS_DIR&apos;)) = &quot;RX&quot;)) and ((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN6&apos;)))) and ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN6_DATA_STROBE&apos;)) = &quot;Strobe&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN6_DATA_STROBE&apos;)) = &quot;Strobe_P&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN6_DATA_STROBE&apos;)) = &quot;Strobe_N&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN6_DATA_STROBE&apos;)) = &quot;INV_Strobe_P&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN6_DATA_STROBE&apos;)) = &quot;INV_Strobe_N&quot;)) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_PLL0_FIFO_WRITE_CLK_EN&apos;)) = 1) )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tri_t_0</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tri_t_0" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN0_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN0&apos;))=1) and ((((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN0_DATA_STROBE&apos;)) = &quot;Strobe&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN0_DATA_STROBE&apos;)) = &quot;Strobe_P&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN0_DATA_STROBE&apos;)) = &quot;Strobe_N&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN0_DATA_STROBE&apos;)) = &quot;INV_Strobe_P&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN0_DATA_STROBE&apos;)) = &quot;INV_Strobe_N&quot;)) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_CLOCK_TRI&apos;)=1))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN0_DATA_STROBE&apos;)) = &quot;DATA&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1))))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN0_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1)) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TX_TRI&apos;)=1)) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN0_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN0&apos;))=1)) or ((spirit:decode(id(&apos;PARAM_VALUE.TEMPLATE&apos;)) = 1) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN0&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tri_t_1</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tri_t_1" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN1&apos;))=1) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_DATA_STROBE&apos;)) = &quot;DATA&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1)))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;)) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN1&apos;))=1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1)) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TX_TRI&apos;)=1)) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_DATA_STROBE&apos;))!= &quot;Input Clock&quot; ) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;)) or ((spirit:decode(id(&apos;PARAM_VALUE.TEMPLATE&apos;)) = 1)and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN1&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tri_t_2</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tri_t_2" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN2_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN2&apos;))=1) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN2_DATA_STROBE&apos;)) = &quot;DATA&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1)))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN2_BUS_DIR&apos;)) = &quot;TX&quot;)and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1))  and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TX_TRI&apos;)=1)) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN2_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN2&apos;))=1))or ((spirit:decode(id(&apos;PARAM_VALUE.TEMPLATE&apos;)) = 1) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN2&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tri_t_3</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tri_t_3" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN3&apos;))=1) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_DATA_STROBE&apos;)) = &quot;DATA&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1)))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;)) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN3&apos;))=1)and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1)) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TX_TRI&apos;)=1))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;))or ((spirit:decode(id(&apos;PARAM_VALUE.TEMPLATE&apos;)) = 1)and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN3&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tri_t_4</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tri_t_4" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN4_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN4&apos;))=1) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN4_DATA_STROBE&apos;)) = &quot;DATA&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1))))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN4_BUS_DIR&apos;)) = &quot;TX&quot;)and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1)) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TX_TRI&apos;)=1)) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN4_DATA_STROBE&apos;)) != &quot;Input Clock&quot;)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN4&apos;))=1))or ((spirit:decode(id(&apos;PARAM_VALUE.TEMPLATE&apos;)) = 1) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN4&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tri_t_5</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tri_t_5" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN5&apos;))=1) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_DATA_STROBE&apos;)) = &quot;DATA&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_BUS_DIR&apos;)) = &quot;TX&quot;)and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1))  and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TX_TRI&apos;)=1)) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN5&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;))or ((spirit:decode(id(&apos;PARAM_VALUE.TEMPLATE&apos;)) = 1)and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN5&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tri_t_6</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tri_t_6" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN6_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN6&apos;))=1) and ((((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN6_DATA_STROBE&apos;)) = &quot;Strobe&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN6_DATA_STROBE&apos;)) = &quot;Strobe_P&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN6_DATA_STROBE&apos;)) = &quot;Strobe_N&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN6_DATA_STROBE&apos;)) = &quot;INV_Strobe_P&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN6_DATA_STROBE&apos;)) = &quot;INV_Strobe_N&quot;)) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_CLOCK_TRI&apos;)=1))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN6_DATA_STROBE&apos;)) = &quot;DATA&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1))))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN6_BUS_DIR&apos;)) = &quot;TX&quot;)and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1))  and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TX_TRI&apos;)=1)) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN6_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN6&apos;))=1))or ((spirit:decode(id(&apos;PARAM_VALUE.TEMPLATE&apos;)) = 1) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN6&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tri_t_7</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tri_t_7" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN7&apos;))=1) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_DATA_STROBE&apos;)) = &quot;DATA&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1)))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;)) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_BUS_DIR&apos;)) = &quot;TX&quot;)and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1))  and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TX_TRI&apos;)=1))and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_DATA_STROBE&apos;)) != &quot;Input Clock&quot;)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN7&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;))or ((spirit:decode(id(&apos;PARAM_VALUE.TEMPLATE&apos;)) = 1)and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN7&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tri_t_8</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tri_t_8" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN8_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN8&apos;))=1) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN8_DATA_STROBE&apos;)) = &quot;DATA&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1))))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN8_BUS_DIR&apos;)) = &quot;TX&quot;)and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1))  and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TX_TRI&apos;)=1)) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN8_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN8&apos;))=1))or ((spirit:decode(id(&apos;PARAM_VALUE.TEMPLATE&apos;)) = 1) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN8&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tri_t_9</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tri_t_9" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN9&apos;))=1) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_DATA_STROBE&apos;)) = &quot;DATA&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1)))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;)) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_BUS_DIR&apos;)) = &quot;TX&quot;)and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1)) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TX_TRI&apos;)=1)) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_DATA_STROBE&apos;)) != &quot;Input Clock&quot;)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN9&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;))or ((spirit:decode(id(&apos;PARAM_VALUE.TEMPLATE&apos;)) = 1)and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN9&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tri_t_10</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tri_t_10" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN10_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN10&apos;))=1) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN10_DATA_STROBE&apos;)) = &quot;DATA&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1))))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN10_BUS_DIR&apos;)) = &quot;TX&quot;)and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1)) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TX_TRI&apos;)=1)) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN10_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN10&apos;))=1))or ((spirit:decode(id(&apos;PARAM_VALUE.TEMPLATE&apos;)) = 1) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN10&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tri_t_11</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tri_t_11" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN11&apos;))=1) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_DATA_STROBE&apos;)) = &quot;DATA&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1)))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;)) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_BUS_DIR&apos;)) = &quot;TX&quot;)and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1)) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TX_TRI&apos;)=1)) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_DATA_STROBE&apos;)) != &quot;Input Clock&quot;)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN11&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;))or ((spirit:decode(id(&apos;PARAM_VALUE.TEMPLATE&apos;)) = 1)and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN11&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tri_t_12</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tri_t_12" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN12_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN12&apos;))=1) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN12_DATA_STROBE&apos;)) = &quot;DATA&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1))))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN12_BUS_DIR&apos;)) = &quot;TX&quot;)and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1))and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TX_TRI&apos;)=1))and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN12_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN12&apos;))=1))or ((spirit:decode(id(&apos;PARAM_VALUE.TEMPLATE&apos;)) = 1) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN12&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tri_t_13</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tri_t_13" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN0_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN0&apos;))=1) and ((((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN0_DATA_STROBE&apos;)) = &quot;Strobe&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN0_DATA_STROBE&apos;)) = &quot;Strobe_P&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN0_DATA_STROBE&apos;)) = &quot;Strobe_N&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN0_DATA_STROBE&apos;)) = &quot;INV_Strobe_P&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN0_DATA_STROBE&apos;)) = &quot;INV_Strobe_N&quot;)) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_CLOCK_TRI&apos;)=1))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN0_DATA_STROBE&apos;)) = &quot;DATA&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1))))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN0_BUS_DIR&apos;)) = &quot;TX&quot;)and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1))and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TX_TRI&apos;)=1))and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN0_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN0&apos;))=1))or ((spirit:decode(id(&apos;PARAM_VALUE.TEMPLATE&apos;)) = 1) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN0&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tri_t_14</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tri_t_14" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN1&apos;))=1) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_DATA_STROBE&apos;)) = &quot;DATA&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1)))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;)) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1))and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TX_TRI&apos;)=1))and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN1&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;))or ((spirit:decode(id(&apos;PARAM_VALUE.TEMPLATE&apos;)) = 1)and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN1&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tri_t_15</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tri_t_15" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN2_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN2&apos;))=1) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN2_DATA_STROBE&apos;)) = &quot;DATA&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1))))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN2_BUS_DIR&apos;)) = &quot;TX&quot;)and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1))and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TX_TRI&apos;)=1)) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN2_DATA_STROBE&apos;)) != &quot;Input Clock&quot;)and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN2&apos;))=1))or ((spirit:decode(id(&apos;PARAM_VALUE.TEMPLATE&apos;)) = 1) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN2&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tri_t_16</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tri_t_16" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN3&apos;))=1) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_DATA_STROBE&apos;)) = &quot;DATA&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1)))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;)) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_BUS_DIR&apos;)) = &quot;TX&quot;)and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1))and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TX_TRI&apos;)=1))and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN3&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;))or ((spirit:decode(id(&apos;PARAM_VALUE.TEMPLATE&apos;)) = 1)and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN3&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tri_t_17</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tri_t_17" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN4_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN4&apos;))=1) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN4_DATA_STROBE&apos;)) = &quot;DATA&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1))))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN4_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1))and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TX_TRI&apos;)=1))and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN4_DATA_STROBE&apos;)) != &quot;Input Clock&quot;)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN4&apos;))=1))or ((spirit:decode(id(&apos;PARAM_VALUE.TEMPLATE&apos;)) = 1) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN4&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tri_t_18</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tri_t_18" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN5&apos;))=1) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_DATA_STROBE&apos;)) = &quot;DATA&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1))and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TX_TRI&apos;)=1))and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN5&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;))or ((spirit:decode(id(&apos;PARAM_VALUE.TEMPLATE&apos;)) = 1)and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN5&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tri_t_19</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tri_t_19" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN6_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN6&apos;))=1) and ((((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN6_DATA_STROBE&apos;)) = &quot;Strobe&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN6_DATA_STROBE&apos;)) = &quot;Strobe_P&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN6_DATA_STROBE&apos;)) = &quot;Strobe_N&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN6_DATA_STROBE&apos;)) = &quot;INV_Strobe_P&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN6_DATA_STROBE&apos;)) = &quot;INV_Strobe_N&quot;)) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_CLOCK_TRI&apos;)=1))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN6_DATA_STROBE&apos;)) = &quot;DATA&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1))))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN6_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1))and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TX_TRI&apos;)=1))and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN6_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN6&apos;))=1))or ((spirit:decode(id(&apos;PARAM_VALUE.TEMPLATE&apos;)) = 1) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN6&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tri_t_20</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tri_t_20" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN7&apos;))=1) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_DATA_STROBE&apos;)) = &quot;DATA&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1)))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;)) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1)and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TX_TRI&apos;)=1)) ) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN7&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;))or ((spirit:decode(id(&apos;PARAM_VALUE.TEMPLATE&apos;)) = 1)and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN7&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tri_t_21</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tri_t_21" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN8_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN8&apos;))=1) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN8_DATA_STROBE&apos;)) = &quot;DATA&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1))))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN8_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1))and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TX_TRI&apos;)=1))and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN8_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN8&apos;))=1))or ((spirit:decode(id(&apos;PARAM_VALUE.TEMPLATE&apos;)) = 1) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN8&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tri_t_22</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tri_t_22" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN9&apos;))=1) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_DATA_STROBE&apos;)) = &quot;DATA&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1)))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;)) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1))and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TX_TRI&apos;)=1))and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN9&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;))or ((spirit:decode(id(&apos;PARAM_VALUE.TEMPLATE&apos;)) = 1)and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN9&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tri_t_23</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tri_t_23" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN10_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN10&apos;))=1) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN10_DATA_STROBE&apos;)) = &quot;DATA&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1))))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN10_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1))and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TX_TRI&apos;)=1))and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN10_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN10&apos;))=1))or ((spirit:decode(id(&apos;PARAM_VALUE.TEMPLATE&apos;)) = 1) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN10&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tri_t_24</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tri_t_24" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN11&apos;))=1) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_DATA_STROBE&apos;)) = &quot;DATA&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1)))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;)) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1))and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TX_TRI&apos;)=1))and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN11&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;))or ((spirit:decode(id(&apos;PARAM_VALUE.TEMPLATE&apos;)) = 1)and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN11&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tri_t_25</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tri_t_25" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN12_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN12&apos;))=1) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN12_DATA_STROBE&apos;)) = &quot;DATA&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1))))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN12_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1))and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TX_TRI&apos;)=1))and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN12_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN12&apos;))=1))or ((spirit:decode(id(&apos;PARAM_VALUE.TEMPLATE&apos;)) = 1) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN12&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tri_t_26</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tri_t_26" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN0&apos;))=1) and ((((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_DATA_STROBE&apos;)) = &quot;Strobe&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_DATA_STROBE&apos;)) = &quot;Strobe_P&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_DATA_STROBE&apos;)) = &quot;Strobe_N&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_DATA_STROBE&apos;)) = &quot;INV_Strobe_P&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_DATA_STROBE&apos;)) = &quot;INV_Strobe_N&quot;)) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_CLOCK_TRI&apos;)=1))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_DATA_STROBE&apos;)) = &quot;DATA&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1))))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1))and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TX_TRI&apos;)=1))and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN0&apos;))=1))or ((spirit:decode(id(&apos;PARAM_VALUE.TEMPLATE&apos;)) = 1) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN0&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tri_t_27</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tri_t_27" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN1&apos;))=1) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_DATA_STROBE&apos;)) = &quot;DATA&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1)))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;)) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1))and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TX_TRI&apos;)=1))and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN1&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;))or ((spirit:decode(id(&apos;PARAM_VALUE.TEMPLATE&apos;)) = 1)and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN1&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tri_t_28</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tri_t_28" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN2_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN2&apos;))=1) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN2_DATA_STROBE&apos;)) = &quot;DATA&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1))))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN2_BUS_DIR&apos;)) = &quot;TX&quot;)and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1))and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN2_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TX_TRI&apos;)=1))  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN2&apos;))=1))or ((spirit:decode(id(&apos;PARAM_VALUE.TEMPLATE&apos;)) = 1) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN2&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tri_t_29</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tri_t_29" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN3&apos;))=1) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_DATA_STROBE&apos;)) = &quot;DATA&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1)))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;)) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1))and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TX_TRI&apos;)=1))and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN3&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;))or ((spirit:decode(id(&apos;PARAM_VALUE.TEMPLATE&apos;)) = 1)and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN3&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tri_t_30</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tri_t_30" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN4_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN4&apos;))=1) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN4_DATA_STROBE&apos;)) = &quot;DATA&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1))))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN4_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1))and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TX_TRI&apos;)=1)) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN4_DATA_STROBE&apos;)) != &quot;Input Clock&quot;)and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN4&apos;))=1))or ((spirit:decode(id(&apos;PARAM_VALUE.TEMPLATE&apos;)) = 1) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN4&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tri_t_31</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tri_t_31" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN5&apos;))=1) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_DATA_STROBE&apos;)) = &quot;DATA&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_BUS_DIR&apos;)) = &quot;TX&quot;)and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1))and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TX_TRI&apos;)=1)) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN5&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;))or ((spirit:decode(id(&apos;PARAM_VALUE.TEMPLATE&apos;)) = 1)and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN5&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tri_t_32</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tri_t_32" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN6_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN6&apos;))=1) and ((((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN6_DATA_STROBE&apos;)) = &quot;Strobe&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN6_DATA_STROBE&apos;)) = &quot;Strobe_P&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN6_DATA_STROBE&apos;)) = &quot;Strobe_N&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN6_DATA_STROBE&apos;)) = &quot;INV_Strobe_P&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN6_DATA_STROBE&apos;)) = &quot;INV_Strobe_N&quot;)) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_CLOCK_TRI&apos;)=1))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN6_DATA_STROBE&apos;)) = &quot;DATA&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1))))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN6_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1))and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TX_TRI&apos;)=1))and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN6_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN6&apos;))=1))or ((spirit:decode(id(&apos;PARAM_VALUE.TEMPLATE&apos;)) = 1) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN6&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tri_t_33</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tri_t_33" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN7&apos;))=1) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_DATA_STROBE&apos;)) = &quot;DATA&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1)))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;)) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1))and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TX_TRI&apos;)=1))and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN7&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;))or ((spirit:decode(id(&apos;PARAM_VALUE.TEMPLATE&apos;)) = 1)and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN7&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tri_t_34</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tri_t_34" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN8_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN8&apos;))=1) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN8_DATA_STROBE&apos;)) = &quot;DATA&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1))))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN8_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1))and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TX_TRI&apos;)=1)) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN8_DATA_STROBE&apos;)) != &quot;Input Clock&quot;)and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN8&apos;))=1))or ((spirit:decode(id(&apos;PARAM_VALUE.TEMPLATE&apos;)) = 1) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN8&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tri_t_35</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tri_t_35" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN9&apos;))) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_DATA_STROBE&apos;)) = &quot;DATA&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1)))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;)) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1))and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TX_TRI&apos;)=1))and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN9&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;))or ((spirit:decode(id(&apos;PARAM_VALUE.TEMPLATE&apos;)) = 1)and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN9&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tri_t_36</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tri_t_36" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN10_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN10&apos;))=1) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN10_DATA_STROBE&apos;)) = &quot;DATA&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1))))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN10_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1))and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TX_TRI&apos;)=1)) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN10_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN10&apos;))=1))or ((spirit:decode(id(&apos;PARAM_VALUE.TEMPLATE&apos;)) = 1) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN10&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tri_t_37</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tri_t_37" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN11&apos;))=1) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_DATA_STROBE&apos;)) = &quot;DATA&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1)))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;)) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1))and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TX_TRI&apos;)=1))and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_DATA_STROBE&apos;)) != &quot;Input Clock&quot;)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN11&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;))or ((spirit:decode(id(&apos;PARAM_VALUE.TEMPLATE&apos;)) = 1)and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN11&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tri_t_38</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tri_t_38" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN12_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN12&apos;))=1) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN12_DATA_STROBE&apos;)) = &quot;DATA&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1))))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN12_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1))and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TX_TRI&apos;)=1))and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN12_DATA_STROBE&apos;)) != &quot;Input Clock&quot;)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN12&apos;))=1))or ((spirit:decode(id(&apos;PARAM_VALUE.TEMPLATE&apos;)) = 1) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN12&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tri_t_39</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tri_t_39" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN0_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN0&apos;))=1) and ((((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN0_DATA_STROBE&apos;)) = &quot;Strobe&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN0_DATA_STROBE&apos;)) = &quot;Strobe_P&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN0_DATA_STROBE&apos;)) = &quot;Strobe_N&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN0_DATA_STROBE&apos;)) = &quot;INV_Strobe_P&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN0_DATA_STROBE&apos;)) = &quot;INV_Strobe_N&quot;)) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_CLOCK_TRI&apos;)=1))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN0_DATA_STROBE&apos;)) = &quot;DATA&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1))))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN0_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1))and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TX_TRI&apos;)=1)) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN0_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN0&apos;))=1))or ((spirit:decode(id(&apos;PARAM_VALUE.TEMPLATE&apos;)) = 1) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN0&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tri_t_40</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tri_t_40" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN1&apos;))=1) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_DATA_STROBE&apos;)) = &quot;DATA&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1)))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;)) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1))and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TX_TRI&apos;)=1))and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_DATA_STROBE&apos;)) != &quot;Input Clock&quot;)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN1&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;))or ((spirit:decode(id(&apos;PARAM_VALUE.TEMPLATE&apos;)) = 1)and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN1&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tri_t_41</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tri_t_41" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN2_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN2&apos;))=1) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN2_DATA_STROBE&apos;)) = &quot;DATA&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1))))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN2_BUS_DIR&apos;)) = &quot;TX&quot;)and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1))and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TX_TRI&apos;)=1)) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN2_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN2&apos;))=1))or ((spirit:decode(id(&apos;PARAM_VALUE.TEMPLATE&apos;)) = 1) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN2&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tri_t_42</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tri_t_42" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN3&apos;))=1) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_DATA_STROBE&apos;)) = &quot;DATA&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1)))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;)) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_BUS_DIR&apos;)) = &quot;TX&quot;)and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1))and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TX_TRI&apos;)=1)) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN3&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;))or ((spirit:decode(id(&apos;PARAM_VALUE.TEMPLATE&apos;)) = 1)and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN3&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tri_t_43</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tri_t_43" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN4_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN4&apos;))=1) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN4_DATA_STROBE&apos;)) = &quot;DATA&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1))))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN4_BUS_DIR&apos;)) = &quot;TX&quot;)and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1))and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TX_TRI&apos;)=1)) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN4_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN4&apos;))=1))or ((spirit:decode(id(&apos;PARAM_VALUE.TEMPLATE&apos;)) = 1) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN4&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tri_t_44</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tri_t_44" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN5&apos;))=1) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_DATA_STROBE&apos;)) = &quot;DATA&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1)))  and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_BUS_DIR&apos;)) = &quot;TX&quot;)and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1))and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TX_TRI&apos;)=1)) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN5&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;))or ((spirit:decode(id(&apos;PARAM_VALUE.TEMPLATE&apos;)) = 1)and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN5&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tri_t_45</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tri_t_45" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN6_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN6&apos;))=1) and ((((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN6_DATA_STROBE&apos;)) = &quot;Strobe&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN6_DATA_STROBE&apos;)) = &quot;Strobe_P&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN6_DATA_STROBE&apos;)) = &quot;Strobe_N&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN6_DATA_STROBE&apos;)) = &quot;INV_Strobe_P&quot;) or (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN6_DATA_STROBE&apos;)) = &quot;INV_Strobe_N&quot;)) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_CLOCK_TRI&apos;)=1))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN6_DATA_STROBE&apos;)) = &quot;DATA&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1))))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN6_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1))and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TX_TRI&apos;)=1)) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN6_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN6&apos;))=1))or ((spirit:decode(id(&apos;PARAM_VALUE.TEMPLATE&apos;)) = 1) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN6&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tri_t_46</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tri_t_46" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN7&apos;))=1) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_DATA_STROBE&apos;)) = &quot;DATA&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1)))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;)) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_BUS_DIR&apos;)) = &quot;TX&quot;)and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1))and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TX_TRI&apos;)=1))and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_DATA_STROBE&apos;)) != &quot;Input Clock&quot;)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN7&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;))or ((spirit:decode(id(&apos;PARAM_VALUE.TEMPLATE&apos;)) = 1)and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN7&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tri_t_47</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tri_t_47" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN8_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN8&apos;))=1) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN8_DATA_STROBE&apos;)) = &quot;DATA&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1))))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN8_BUS_DIR&apos;)) = &quot;TX&quot;)and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1))and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TX_TRI&apos;)=1))and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN8_DATA_STROBE&apos;)) != &quot;Input Clock&quot;)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN8&apos;))=1))or ((spirit:decode(id(&apos;PARAM_VALUE.TEMPLATE&apos;)) = 1) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN8&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tri_t_48</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tri_t_48" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN9&apos;))=1) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_DATA_STROBE&apos;)) = &quot;DATA&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1)))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;)) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_BUS_DIR&apos;)) = &quot;TX&quot;)and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1))and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TX_TRI&apos;)=1))and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_DATA_STROBE&apos;)) != &quot;Input Clock&quot;)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN9&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;))or ((spirit:decode(id(&apos;PARAM_VALUE.TEMPLATE&apos;)) = 1)and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN9&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tri_t_49</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tri_t_49" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN10_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN10&apos;))=1) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN10_DATA_STROBE&apos;)) = &quot;DATA&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1))))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN10_BUS_DIR&apos;)) = &quot;TX&quot;)and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1))and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TX_TRI&apos;)=1))and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN10_DATA_STROBE&apos;)) != &quot;Input Clock&quot;)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN10&apos;))=1))or ((spirit:decode(id(&apos;PARAM_VALUE.TEMPLATE&apos;)) = 1) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN10&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tri_t_50</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tri_t_50" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN11&apos;))=1) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_DATA_STROBE&apos;)) = &quot;DATA&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1)))) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;)) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_BUS_DIR&apos;)) = &quot;TX&quot;)and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1))and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TX_TRI&apos;)=1))and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_DATA_STROBE&apos;)) != &quot;Input Clock&quot;)  and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN11&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;))or ((spirit:decode(id(&apos;PARAM_VALUE.TEMPLATE&apos;)) = 1)and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_SIG_TYPE&apos;)) = &quot;SINGLE&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN11&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tri_t_51</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tri_t_51" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN12_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN12&apos;))=1) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN12_DATA_STROBE&apos;)) = &quot;DATA&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1))))) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN12_BUS_DIR&apos;)) = &quot;TX&quot;)and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_TRI&apos;)=1))and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_TX_TRI&apos;)=1)) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN12_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN12&apos;))=1))or ((spirit:decode(id(&apos;PARAM_VALUE.TEMPLATE&apos;)) = 1) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN12&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tri_tbyte0</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tri_tbyte0" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_NIBBLE0_TRI&apos;))=1) or ((spirit:decode(id(&apos;PARAM_VALUE.EN_MULTI_INTF_PORTS&apos;))=1) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN0_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN0&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN0_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) ) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN1&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) ) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN2_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN2&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN2_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) ) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN3&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_DATA_STROBE&apos;)) != &quot;Input Clock&quot;)) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN4_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN4&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN4_DATA_STROBE&apos;)) != &quot;Input Clock&quot;)) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN5&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_DATA_STROBE&apos;)) != &quot;Input Clock&quot;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tri_tbyte1</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tri_tbyte1" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_NIBBLE1_TRI&apos;))=1) or ((spirit:decode(id(&apos;PARAM_VALUE.EN_MULTI_INTF_PORTS&apos;))=1) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN6_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN6&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN6_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) ) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN7&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) ) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN8_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN8&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN8_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) ) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN9&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_DATA_STROBE&apos;)) != &quot;Input Clock&quot;)) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN10_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN10&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN10_DATA_STROBE&apos;)) != &quot;Input Clock&quot;)) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN11&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_DATA_STROBE&apos;)) != &quot;Input Clock&quot;)) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN12_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN12&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN12_DATA_STROBE&apos;)) != &quot;Input Clock&quot;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tri_tbyte2</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tri_tbyte2" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_NIBBLE2_TRI&apos;))=1) or ((spirit:decode(id(&apos;PARAM_VALUE.EN_MULTI_INTF_PORTS&apos;))=1) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN0_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN0&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN0_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) ) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN1&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) ) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN2_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN2&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN2_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) ) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN3&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_DATA_STROBE&apos;)) != &quot;Input Clock&quot;)) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN4_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN4&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN4_DATA_STROBE&apos;)) != &quot;Input Clock&quot;)) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN5&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_DATA_STROBE&apos;)) != &quot;Input Clock&quot;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tri_tbyte3</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tri_tbyte3" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_NIBBLE3_TRI&apos;))=1) or ((spirit:decode(id(&apos;PARAM_VALUE.EN_MULTI_INTF_PORTS&apos;))=1) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN6_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN6&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN6_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) ) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN7&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) ) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN8_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN8&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN8_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) ) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN9&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_DATA_STROBE&apos;)) != &quot;Input Clock&quot;)) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN10_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN10&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN10_DATA_STROBE&apos;)) != &quot;Input Clock&quot;)) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN11&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_DATA_STROBE&apos;)) != &quot;Input Clock&quot;)) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN12_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN12&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN12_DATA_STROBE&apos;)) != &quot;Input Clock&quot;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tri_tbyte4</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tri_tbyte4" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_NIBBLE4_TRI&apos;))=1) or ((spirit:decode(id(&apos;PARAM_VALUE.EN_MULTI_INTF_PORTS&apos;))=1) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN0&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) ) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN1&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) ) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN2_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN2&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN2_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) ) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN3&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_DATA_STROBE&apos;)) != &quot;Input Clock&quot;)) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN4_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN4&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN4_DATA_STROBE&apos;)) != &quot;Input Clock&quot;)) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN5&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_DATA_STROBE&apos;)) != &quot;Input Clock&quot;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tri_tbyte5</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tri_tbyte5" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_NIBBLE5_TRI&apos;))=1) or ((spirit:decode(id(&apos;PARAM_VALUE.EN_MULTI_INTF_PORTS&apos;))=1) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN6_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN6&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN6_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) ) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN7&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) ) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN8_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN8&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN8_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) ) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN9&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_DATA_STROBE&apos;)) != &quot;Input Clock&quot;)) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN10_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN10&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN10_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN11&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_DATA_STROBE&apos;)) != &quot;Input Clock&quot;)) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN12_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN12&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN12_DATA_STROBE&apos;)) != &quot;Input Clock&quot;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tri_tbyte6</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tri_tbyte6" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_NIBBLE6_TRI&apos;))=1) or ((spirit:decode(id(&apos;PARAM_VALUE.EN_MULTI_INTF_PORTS&apos;))=1) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN0_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN0&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN0_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) ) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN1&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) ) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN2_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN2&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN2_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) ) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN3&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_DATA_STROBE&apos;)) != &quot;Input Clock&quot;)) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN4_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN4&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN4_DATA_STROBE&apos;)) != &quot;Input Clock&quot;)) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN5&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_DATA_STROBE&apos;)) != &quot;Input Clock&quot;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>tri_tbyte7</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.tri_tbyte7" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_NIBBLE7_TRI&apos;))=1) or ((spirit:decode(id(&apos;PARAM_VALUE.EN_MULTI_INTF_PORTS&apos;))=1) and (((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN6_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN6&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN6_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) ) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN7&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) ) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN8_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN8&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN8_DATA_STROBE&apos;)) != &quot;Input Clock&quot;) ) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN9&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_DATA_STROBE&apos;)) != &quot;Input Clock&quot;)) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN10_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN10&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN10_DATA_STROBE&apos;)) != &quot;Input Clock&quot;))or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN11&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_DATA_STROBE&apos;)) != &quot;Input Clock&quot;)) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN12_BUS_DIR&apos;)) = &quot;TX&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN12&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN12_DATA_STROBE&apos;)) != &quot;Input Clock&quot;)))))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bidir_tx_bs_tri_clk</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bidir_tx_bs_tri_clk" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_NIBBLE0_TRI&apos;))=1) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_NIBBLE1_TRI&apos;))=1) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_NIBBLE2_TRI&apos;))=1) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_NIBBLE3_TRI&apos;))=1) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_NIBBLE4_TRI&apos;))=1) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_NIBBLE5_TRI&apos;))=1) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_NIBBLE6_TRI&apos;))=1) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_NIBBLE7_TRI&apos;))=1))  and ((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bidir_tx_bs_tri_ce0</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bidir_tx_bs_tri_ce0" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_NIBBLE0_TRI&apos;))=1)  and ((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bidir_tx_bs_tri_inc0</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bidir_tx_bs_tri_inc0" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_NIBBLE0_TRI&apos;))=1)  and ((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bidir_tx_bs_tri_load0</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bidir_tx_bs_tri_load0" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_NIBBLE0_TRI&apos;))=1)  and ((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bidir_tx_bs_tri_en_vtc0</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bidir_tx_bs_tri_en_vtc0" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_NIBBLE0_TRI&apos;))=1)  and ((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bidir_tx_bs_tri_cntvalueout0</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bidir_tx_bs_tri_cntvalueout0" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_NIBBLE0_TRI&apos;))=1)  and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bidir_tx_bs_tri_cntvaluein0</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bidir_tx_bs_tri_cntvaluein0" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_NIBBLE0_TRI&apos;))=1)  and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bidir_tx_bs_tri_ce1</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bidir_tx_bs_tri_ce1" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_NIBBLE1_TRI&apos;))=1)  and ((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bidir_tx_bs_tri_inc1</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bidir_tx_bs_tri_inc1" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_NIBBLE1_TRI&apos;))=1)  and ((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bidir_tx_bs_tri_load1</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bidir_tx_bs_tri_load1" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_NIBBLE1_TRI&apos;))=1)  and ((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bidir_tx_bs_tri_en_vtc1</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bidir_tx_bs_tri_en_vtc1" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_NIBBLE1_TRI&apos;))=1)  and ((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bidir_tx_bs_tri_cntvalueout1</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bidir_tx_bs_tri_cntvalueout1" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_NIBBLE1_TRI&apos;))=1)  and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bidir_tx_bs_tri_cntvaluein1</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bidir_tx_bs_tri_cntvaluein1" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_NIBBLE1_TRI&apos;))=1)  and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bidir_tx_bs_tri_ce2</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bidir_tx_bs_tri_ce2" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_NIBBLE2_TRI&apos;))=1)  and ((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bidir_tx_bs_tri_inc2</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bidir_tx_bs_tri_inc2" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_NIBBLE2_TRI&apos;))=1)  and ((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bidir_tx_bs_tri_load2</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bidir_tx_bs_tri_load2" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_NIBBLE2_TRI&apos;))=1)  and ((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bidir_tx_bs_tri_en_vtc2</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bidir_tx_bs_tri_en_vtc2" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_NIBBLE2_TRI&apos;))=1)  and ((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bidir_tx_bs_tri_cntvalueout2</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bidir_tx_bs_tri_cntvalueout2" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_NIBBLE2_TRI&apos;))=1)  and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bidir_tx_bs_tri_cntvaluein2</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bidir_tx_bs_tri_cntvaluein2" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_NIBBLE2_TRI&apos;))=1)  and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bidir_tx_bs_tri_ce3</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bidir_tx_bs_tri_ce3" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_NIBBLE3_TRI&apos;))=1)  and ((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bidir_tx_bs_tri_inc3</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bidir_tx_bs_tri_inc3" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_NIBBLE3_TRI&apos;))=1)  and ((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bidir_tx_bs_tri_load3</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bidir_tx_bs_tri_load3" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_NIBBLE3_TRI&apos;))=1)  and ((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bidir_tx_bs_tri_en_vtc3</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bidir_tx_bs_tri_en_vtc3" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_NIBBLE3_TRI&apos;))=1)  and ((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bidir_tx_bs_tri_cntvalueout3</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bidir_tx_bs_tri_cntvalueout3" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_NIBBLE3_TRI&apos;))=1)  and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bidir_tx_bs_tri_cntvaluein3</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bidir_tx_bs_tri_cntvaluein3" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_NIBBLE3_TRI&apos;))=1)  and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bidir_tx_bs_tri_ce4</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bidir_tx_bs_tri_ce4" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_NIBBLE4_TRI&apos;))=1)  and ((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bidir_tx_bs_tri_inc4</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bidir_tx_bs_tri_inc4" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_NIBBLE4_TRI&apos;))=1)  and ((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bidir_tx_bs_tri_load4</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bidir_tx_bs_tri_load4" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_NIBBLE4_TRI&apos;))=1)  and ((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bidir_tx_bs_tri_en_vtc4</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bidir_tx_bs_tri_en_vtc4" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_NIBBLE4_TRI&apos;))=1)  and ((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bidir_tx_bs_tri_cntvalueout4</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bidir_tx_bs_tri_cntvalueout4" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_NIBBLE4_TRI&apos;))=1)  and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bidir_tx_bs_tri_cntvaluein4</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bidir_tx_bs_tri_cntvaluein4" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_NIBBLE4_TRI&apos;))=1)  and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bidir_tx_bs_tri_ce5</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bidir_tx_bs_tri_ce5" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_NIBBLE5_TRI&apos;))=1)  and ((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bidir_tx_bs_tri_inc5</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bidir_tx_bs_tri_inc5" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_NIBBLE5_TRI&apos;))=1)  and ((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bidir_tx_bs_tri_load5</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bidir_tx_bs_tri_load5" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_NIBBLE5_TRI&apos;))=1)  and ((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bidir_tx_bs_tri_en_vtc5</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bidir_tx_bs_tri_en_vtc5" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_NIBBLE5_TRI&apos;))=1)  and ((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bidir_tx_bs_tri_cntvalueout5</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bidir_tx_bs_tri_cntvalueout5" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_NIBBLE5_TRI&apos;))=1)  and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bidir_tx_bs_tri_cntvaluein5</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bidir_tx_bs_tri_cntvaluein5" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_NIBBLE5_TRI&apos;))=1)  and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bidir_tx_bs_tri_ce6</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bidir_tx_bs_tri_ce6" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_NIBBLE6_TRI&apos;))=1)  and ((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bidir_tx_bs_tri_inc6</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bidir_tx_bs_tri_inc6" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_NIBBLE6_TRI&apos;))=1)  and ((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bidir_tx_bs_tri_load6</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bidir_tx_bs_tri_load6" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_NIBBLE6_TRI&apos;))=1)  and ((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bidir_tx_bs_tri_en_vtc6</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bidir_tx_bs_tri_en_vtc6" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_NIBBLE6_TRI&apos;))=1)  and ((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bidir_tx_bs_tri_cntvalueout6</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bidir_tx_bs_tri_cntvalueout6" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_NIBBLE6_TRI&apos;))=1)  and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bidir_tx_bs_tri_cntvaluein6</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bidir_tx_bs_tri_cntvaluein6" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_NIBBLE6_TRI&apos;))=1)  and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bidir_tx_bs_tri_ce7</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bidir_tx_bs_tri_ce7" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_NIBBLE7_TRI&apos;))=1)  and ((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bidir_tx_bs_tri_inc7</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bidir_tx_bs_tri_inc7" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_NIBBLE7_TRI&apos;))=1)  and ((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bidir_tx_bs_tri_load7</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bidir_tx_bs_tri_load7" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_NIBBLE7_TRI&apos;))=1)  and ((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bidir_tx_bs_tri_en_vtc7</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bidir_tx_bs_tri_en_vtc7" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_NIBBLE7_TRI&apos;))=1)  and ((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=1)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bidir_tx_bs_tri_cntvalueout7</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bidir_tx_bs_tri_cntvalueout7" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_NIBBLE7_TRI&apos;))=1)  and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bidir_tx_bs_tri_cntvaluein7</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bidir_tx_bs_tri_cntvaluein7" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_NIBBLE7_TRI&apos;))=1)  and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TX_DELAY_TYPE&apos;))=2))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>riu_rd_data_bg0_bs0</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.riu_rd_data_bg0_bs0" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC0&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_INTERFACE&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_SPLIT&apos;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>riu_valid_bg0_bs0</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.riu_valid_bg0_bs0" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC0&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_INTERFACE&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_SPLIT&apos;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>riu_addr_bg0_bs0</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.riu_addr_bg0_bs0" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC0&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_INTERFACE&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_SPLIT&apos;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>riu_nibble_sel_bg0_bs0</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.riu_nibble_sel_bg0_bs0" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC0&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_INTERFACE&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_SPLIT&apos;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>riu_wr_data_bg0_bs0</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.riu_wr_data_bg0_bs0" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC0&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_INTERFACE&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_SPLIT&apos;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>riu_wr_en_bg0_bs0</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.riu_wr_en_bg0_bs0" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC0&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_INTERFACE&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_SPLIT&apos;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>riu_rd_data_bg0_bs1</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.riu_rd_data_bg0_bs1" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC1&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_INTERFACE&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_SPLIT&apos;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>riu_valid_bg0_bs1</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.riu_valid_bg0_bs1" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC1&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_INTERFACE&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_SPLIT&apos;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>riu_addr_bg0_bs1</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.riu_addr_bg0_bs1" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC1&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_INTERFACE&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_SPLIT&apos;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>riu_nibble_sel_bg0_bs1</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.riu_nibble_sel_bg0_bs1" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC1&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_INTERFACE&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_SPLIT&apos;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>riu_wr_data_bg0_bs1</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.riu_wr_data_bg0_bs1" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC1&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_INTERFACE&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_SPLIT&apos;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>riu_wr_en_bg0_bs1</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.riu_wr_en_bg0_bs1" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC1&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_INTERFACE&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_SPLIT&apos;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>riu_rd_data_bg1_bs2</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.riu_rd_data_bg1_bs2" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC2&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_INTERFACE&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_SPLIT&apos;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>riu_valid_bg1_bs2</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.riu_valid_bg1_bs2" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC2&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_INTERFACE&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_SPLIT&apos;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>riu_addr_bg1_bs2</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.riu_addr_bg1_bs2" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC2&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_INTERFACE&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_SPLIT&apos;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>riu_nibble_sel_bg1_bs2</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.riu_nibble_sel_bg1_bs2" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC2&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_INTERFACE&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_SPLIT&apos;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>riu_wr_data_bg1_bs2</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.riu_wr_data_bg1_bs2" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC2&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_INTERFACE&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_SPLIT&apos;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>riu_wr_en_bg1_bs2</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.riu_wr_en_bg1_bs2" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC2&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_INTERFACE&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_SPLIT&apos;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>riu_rd_data_bg1_bs3</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.riu_rd_data_bg1_bs3" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC3&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_INTERFACE&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_SPLIT&apos;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>riu_valid_bg1_bs3</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.riu_valid_bg1_bs3" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC3&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_INTERFACE&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_SPLIT&apos;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>riu_addr_bg1_bs3</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.riu_addr_bg1_bs3" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC3&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_INTERFACE&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_SPLIT&apos;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>riu_nibble_sel_bg1_bs3</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.riu_nibble_sel_bg1_bs3" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC3&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_INTERFACE&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_SPLIT&apos;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>riu_wr_data_bg1_bs3</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.riu_wr_data_bg1_bs3" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC3&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_INTERFACE&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_SPLIT&apos;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>riu_wr_en_bg1_bs3</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.riu_wr_en_bg1_bs3" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC3&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_INTERFACE&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_SPLIT&apos;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>riu_rd_data_bg2_bs4</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.riu_rd_data_bg2_bs4" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC4&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_INTERFACE&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_SPLIT&apos;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>riu_valid_bg2_bs4</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.riu_valid_bg2_bs4" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC4&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_INTERFACE&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_SPLIT&apos;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>riu_addr_bg2_bs4</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.riu_addr_bg2_bs4" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC4&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_INTERFACE&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_SPLIT&apos;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>riu_nibble_sel_bg2_bs4</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.riu_nibble_sel_bg2_bs4" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC4&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_INTERFACE&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_SPLIT&apos;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>riu_wr_data_bg2_bs4</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.riu_wr_data_bg2_bs4" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC4&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_INTERFACE&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_SPLIT&apos;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>riu_wr_en_bg2_bs4</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.riu_wr_en_bg2_bs4" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC4&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_INTERFACE&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_SPLIT&apos;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>riu_rd_data_bg2_bs5</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.riu_rd_data_bg2_bs5" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC5&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_INTERFACE&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_SPLIT&apos;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>riu_valid_bg2_bs5</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.riu_valid_bg2_bs5" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC5&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_INTERFACE&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_SPLIT&apos;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>riu_addr_bg2_bs5</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.riu_addr_bg2_bs5" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC5&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_INTERFACE&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_SPLIT&apos;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>riu_nibble_sel_bg2_bs5</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.riu_nibble_sel_bg2_bs5" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC5&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_INTERFACE&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_SPLIT&apos;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>riu_wr_data_bg2_bs5</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.riu_wr_data_bg2_bs5" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC5&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_INTERFACE&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_SPLIT&apos;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>riu_wr_en_bg2_bs5</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.riu_wr_en_bg2_bs5" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC5&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_INTERFACE&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_SPLIT&apos;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>riu_rd_data_bg3_bs6</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.riu_rd_data_bg3_bs6" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC6&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_INTERFACE&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_SPLIT&apos;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>riu_valid_bg3_bs6</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.riu_valid_bg3_bs6" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC6&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_INTERFACE&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_SPLIT&apos;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>riu_addr_bg3_bs6</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.riu_addr_bg3_bs6" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC6&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_INTERFACE&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_SPLIT&apos;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>riu_nibble_sel_bg3_bs6</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.riu_nibble_sel_bg3_bs6" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC6&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_INTERFACE&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_SPLIT&apos;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>riu_wr_data_bg3_bs6</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.riu_wr_data_bg3_bs6" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC6&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_INTERFACE&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_SPLIT&apos;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>riu_wr_en_bg3_bs6</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.riu_wr_en_bg3_bs6" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC6&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_INTERFACE&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_SPLIT&apos;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>riu_rd_data_bg3_bs7</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.riu_rd_data_bg3_bs7" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC7&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_INTERFACE&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_SPLIT&apos;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>riu_valid_bg3_bs7</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.riu_valid_bg3_bs7" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC7&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_INTERFACE&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_SPLIT&apos;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>riu_addr_bg3_bs7</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.riu_addr_bg3_bs7" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC7&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_INTERFACE&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_SPLIT&apos;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>riu_nibble_sel_bg3_bs7</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.riu_nibble_sel_bg3_bs7" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC7&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_INTERFACE&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_SPLIT&apos;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>riu_wr_data_bg3_bs7</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.riu_wr_data_bg3_bs7" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC7&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_INTERFACE&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_SPLIT&apos;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>riu_wr_en_bg3_bs7</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.riu_wr_en_bg3_bs7" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC7&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_INTERFACE&apos;))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_SPLIT&apos;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>riu_rd_data_bg0</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.riu_rd_data_bg0" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC0&apos;)) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC1&apos;)))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_INTERFACE&apos;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>riu_valid_bg0</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.riu_valid_bg0" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC0&apos;)) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC1&apos;)))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_INTERFACE&apos;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>riu_addr_bg0</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.riu_addr_bg0" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC0&apos;)) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC1&apos;)))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_INTERFACE&apos;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>riu_nibble_sel_bg0</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.riu_nibble_sel_bg0" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC0&apos;)) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC1&apos;)))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_INTERFACE&apos;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>riu_wr_data_bg0</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.riu_wr_data_bg0" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC0&apos;)) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC1&apos;)))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_INTERFACE&apos;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>riu_wr_en_bg0</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.riu_wr_en_bg0" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC0&apos;)) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC1&apos;)))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_INTERFACE&apos;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>riu_rd_data_bg1</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.riu_rd_data_bg1" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC2&apos;)) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC3&apos;)))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_INTERFACE&apos;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>riu_valid_bg1</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.riu_valid_bg1" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC2&apos;)) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC3&apos;)))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_INTERFACE&apos;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>riu_addr_bg1</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.riu_addr_bg1" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC2&apos;)) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC3&apos;)))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_INTERFACE&apos;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>riu_nibble_sel_bg1</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.riu_nibble_sel_bg1" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC2&apos;)) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC3&apos;)))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_INTERFACE&apos;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>riu_wr_data_bg1</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.riu_wr_data_bg1" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC2&apos;)) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC3&apos;)))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_INTERFACE&apos;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>riu_wr_en_bg1</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.riu_wr_en_bg1" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC2&apos;)) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC3&apos;)))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_INTERFACE&apos;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>riu_rd_data_bg2</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.riu_rd_data_bg2" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC4&apos;)) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC5&apos;)))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_INTERFACE&apos;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>riu_valid_bg2</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.riu_valid_bg2" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC4&apos;)) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC5&apos;)))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_INTERFACE&apos;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>riu_addr_bg2</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.riu_addr_bg2" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC4&apos;)) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC5&apos;)))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_INTERFACE&apos;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>riu_nibble_sel_bg2</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.riu_nibble_sel_bg2" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC4&apos;)) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC5&apos;)))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_INTERFACE&apos;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>riu_wr_data_bg2</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.riu_wr_data_bg2" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC4&apos;)) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC5&apos;)))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_INTERFACE&apos;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>riu_wr_en_bg2</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.riu_wr_en_bg2" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC4&apos;)) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC5&apos;)))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_INTERFACE&apos;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>riu_rd_data_bg3</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.riu_rd_data_bg3" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC6&apos;)) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC7&apos;)))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_INTERFACE&apos;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>riu_valid_bg3</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.riu_valid_bg3" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC6&apos;)) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC7&apos;)))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_INTERFACE&apos;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>riu_addr_bg3</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.riu_addr_bg3" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC6&apos;)) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC7&apos;)))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_INTERFACE&apos;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>riu_nibble_sel_bg3</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.riu_nibble_sel_bg3" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC6&apos;)) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC7&apos;)))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_INTERFACE&apos;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>riu_wr_data_bg3</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.riu_wr_data_bg3" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC6&apos;)) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC7&apos;)))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_INTERFACE&apos;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>riu_wr_en_bg3</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.riu_wr_en_bg3" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC6&apos;)) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC7&apos;)))) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ENABLE_RIU_INTERFACE&apos;)))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>vtc_rdy_bsc0</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.vtc_rdy_bsc0" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC0&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.PLL0_RX_EXTERNAL_CLK_TO_DATA&apos;)) != 2))">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>en_vtc_bsc0</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.en_vtc_bsc0" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC0&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.PLL0_RX_EXTERNAL_CLK_TO_DATA&apos;)) != 2))">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>vtc_rdy_bsc1</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.vtc_rdy_bsc1" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC1&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.PLL0_RX_EXTERNAL_CLK_TO_DATA&apos;)) != 2))">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>en_vtc_bsc1</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.en_vtc_bsc1" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC1&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.PLL0_RX_EXTERNAL_CLK_TO_DATA&apos;)) != 2))">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>vtc_rdy_bsc2</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.vtc_rdy_bsc2" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC2&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.PLL0_RX_EXTERNAL_CLK_TO_DATA&apos;)) != 2))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>en_vtc_bsc2</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.en_vtc_bsc2" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC2&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.PLL0_RX_EXTERNAL_CLK_TO_DATA&apos;)) != 2))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>vtc_rdy_bsc3</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.vtc_rdy_bsc3" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC3&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.PLL0_RX_EXTERNAL_CLK_TO_DATA&apos;)) != 2))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>en_vtc_bsc3</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.en_vtc_bsc3" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC3&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.PLL0_RX_EXTERNAL_CLK_TO_DATA&apos;)) != 2))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>vtc_rdy_bsc4</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.vtc_rdy_bsc4" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC4&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.PLL0_RX_EXTERNAL_CLK_TO_DATA&apos;)) != 2))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>en_vtc_bsc4</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.en_vtc_bsc4" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC4&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.PLL0_RX_EXTERNAL_CLK_TO_DATA&apos;)) != 2))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>vtc_rdy_bsc5</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.vtc_rdy_bsc5" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC5&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.PLL0_RX_EXTERNAL_CLK_TO_DATA&apos;)) != 2))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>en_vtc_bsc5</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.en_vtc_bsc5" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC5&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.PLL0_RX_EXTERNAL_CLK_TO_DATA&apos;)) != 2))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>vtc_rdy_bsc6</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.vtc_rdy_bsc6" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC6&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.PLL0_RX_EXTERNAL_CLK_TO_DATA&apos;)) != 2))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>en_vtc_bsc6</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.en_vtc_bsc6" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC6&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.PLL0_RX_EXTERNAL_CLK_TO_DATA&apos;)) != 2))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>vtc_rdy_bsc7</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.vtc_rdy_bsc7" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC7&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.PLL0_RX_EXTERNAL_CLK_TO_DATA&apos;)) != 2))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>en_vtc_bsc7</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.en_vtc_bsc7" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC7&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.PLL0_RX_EXTERNAL_CLK_TO_DATA&apos;)) != 2))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>phy_rden_bsc0</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.phy_rden_bsc0" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN0_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN0&apos;))) ) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN1_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN1&apos;))) ) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN2_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN2&apos;))) ) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN3_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN3&apos;))) ) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN4_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN4&apos;))) ) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN5_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN5&apos;))) ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>phy_rden_bsc1</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.phy_rden_bsc1" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN6_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN6&apos;))) ) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN7_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN7&apos;))) ) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN8_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN8&apos;))) ) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN9_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN9&apos;))) ) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN10_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN10&apos;))) ) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN11_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN11&apos;))) ) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE0_PIN12_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE0_PIN12&apos;))) ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>phy_rden_bsc2</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.phy_rden_bsc2" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN0_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN0&apos;))) ) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN1_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN1&apos;))) ) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN2_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN2&apos;))) ) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN3_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN3&apos;))) ) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN4_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN4&apos;))) ) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN5_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN5&apos;))) ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>phy_rden_bsc3</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.phy_rden_bsc3" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN6_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN6&apos;))) ) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN7_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN7&apos;))) ) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN8_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN8_DATA_STROBE&apos;))) != &quot;Input Clock&quot; and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN8&apos;))) ) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN9_DATA_STROBE&apos;))) != &quot;Input Clock&quot; and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN9&apos;))) ) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN10_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN10_DATA_STROBE&apos;))) != &quot;Input Clock&quot; and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN10&apos;))) ) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN11_DATA_STROBE&apos;))) != &quot;Input Clock&quot; and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN11&apos;))) ) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE1_PIN12_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE1_PIN12&apos;))) ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>phy_rden_bsc4</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.phy_rden_bsc4" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN0_DATA_STROBE&apos;))) != &quot;Input Clock&quot; and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN0&apos;))) ) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN1_DATA_STROBE&apos;))) != &quot;Input Clock&quot; and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN1&apos;))) ) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN2_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN2_DATA_STROBE&apos;))) != &quot;Input Clock&quot; and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN2&apos;))) ) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN3_DATA_STROBE&apos;))) != &quot;Input Clock&quot; and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN3&apos;))) ) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN4_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN4&apos;))) ) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN5_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN5&apos;))) ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>phy_rden_bsc5</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.phy_rden_bsc5" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN6_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN6&apos;))) ) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN7_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN7&apos;))) ) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN8_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN8&apos;))) ) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN9_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN9&apos;))) ) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN10_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN10&apos;))) ) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN11_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN11&apos;))) ) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE2_PIN12_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE2_PIN12&apos;))) ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>phy_rden_bsc6</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.phy_rden_bsc6" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN0_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN0&apos;))) ) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN1_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN1&apos;))) ) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN2_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN2&apos;))) ) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN3_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN3&apos;))) ) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN4_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN4&apos;))) ) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN5_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN5&apos;))) ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>phy_rden_bsc7</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.phy_rden_bsc7" xilinx:dependency="(((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN6_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN6&apos;))) ) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN7_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN7&apos;))) ) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN8_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN8&apos;))) ) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN9_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN9&apos;))) ) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN10_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN10&apos;))) ) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN11_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN11&apos;))) ) or ((spirit:decode(id(&apos;PARAM_VALUE.BYTE3_PIN12_BUS_DIR&apos;)) = &quot;BIDIR&quot;) and (spirit:decode(id(&apos;PARAM_VALUE.ENABLE_BYTE3_PIN12&apos;))) ))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>dly_rdy_bsc0</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.dly_rdy_bsc0" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC0&apos;))=1)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>dly_rdy_bsc1</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.dly_rdy_bsc1" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC1&apos;))=1)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>dly_rdy_bsc2</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.dly_rdy_bsc2" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC2&apos;))=1)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>dly_rdy_bsc3</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.dly_rdy_bsc3" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC3&apos;))=1)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>dly_rdy_bsc4</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.dly_rdy_bsc4" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC4&apos;))=1)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>dly_rdy_bsc5</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.dly_rdy_bsc5" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC5&apos;))=1)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>dly_rdy_bsc6</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.dly_rdy_bsc6" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC6&apos;))=1)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>dly_rdy_bsc7</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.dly_rdy_bsc7" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_BSC7&apos;))=1)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rst_seq_done</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>shared_pll0_clkout0_in</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.shared_pll0_clkout0_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_PLL_SHARING&apos;))=1)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>shared_pll1_clkout0_in</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.shared_pll1_clkout0_in" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_PLL_SHARING&apos;))=1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_SERIAL_MODE&apos;))=&quot;TRUE&quot;)  and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_TX&apos;))= 1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_RX&apos;))= 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>shared_pll0_clkoutphy_in</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.shared_pll0_clkoutphy_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_PLL_SHARING&apos;))=1)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>shared_pll0_clkoutphy_out</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.shared_pll0_clkoutphy_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_PLL_SHARING&apos;))=0)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>shared_pll1_clkoutphy_in</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.shared_pll1_clkoutphy_in" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_PLL_SHARING&apos;))=1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_SERIAL_MODE&apos;))=&quot;TRUE&quot;)  and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_TX&apos;))= 1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_RX&apos;))= 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>shared_pll1_clkoutphy_out</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.shared_pll1_clkoutphy_out" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_PLL_SHARING&apos;))=0) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_SERIAL_MODE&apos;))=&quot;TRUE&quot;)  and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_TX&apos;))= 1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_RX&apos;))= 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>shared_pll0_locked_in</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.shared_pll0_locked_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_PLL_SHARING&apos;))=1)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>shared_pll1_locked_in</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.shared_pll1_locked_in" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_PLL_SHARING&apos;))=1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_SERIAL_MODE&apos;))=&quot;TRUE&quot;)  and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_TX&apos;))= 1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_RX&apos;))= 1))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>app_clk</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.app_clk" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.EN_MULTI_INTF_PORTS&apos;))=1)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>multi_intf_lock_in</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.multi_intf_lock_in" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.EN_MULTI_INTF_PORTS&apos;))=1)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>intf_rdy</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.intf_rdy" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.EN_MULTI_INTF_PORTS&apos;))=1)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pll0_clkout0</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pll0_clkout0" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_PLL_SHARING&apos;))=0)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pll0_clkout1</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pll0_clkout1" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_PLL0_PLLOUT1&apos;))=1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_PLL_SHARING&apos;))=0))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pll1_clkout0</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pll1_clkout0" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_SERIAL_MODE&apos;))=&quot;TRUE&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_TX&apos;))= 1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_RX&apos;))= 1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_PLL_SHARING&apos;))=0))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rst</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>daddr</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">6</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.daddr" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_PLL_DRP_PORTS&apos;))=1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_PLL_SHARING&apos;))=0))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>dclk</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.dclk" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_PLL_DRP_PORTS&apos;))=1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_PLL_SHARING&apos;))=0))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>den</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.den" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_PLL_DRP_PORTS&apos;))=1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_PLL_SHARING&apos;))=0))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>dwe</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.dwe" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_PLL_DRP_PORTS&apos;))=1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_PLL_SHARING&apos;))=0))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>di</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.di" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_PLL_DRP_PORTS&apos;))=1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_PLL_SHARING&apos;))=0))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>do_out</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.do_out" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_PLL_DRP_PORTS&apos;))=1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_PLL_SHARING&apos;))=0))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>drdy</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.drdy" xilinx:dependency="((spirit:decode(id(&apos;PARAM_VALUE.ENABLE_PLL_DRP_PORTS&apos;))=1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_PLL_SHARING&apos;))=0))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bs_rst_dphy_in</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bs_rst_dphy_in" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_TEMPLATE&apos;))=1) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TEMPLATE&apos;))=2))">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>clk_p</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.clk_p" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_CLK_SIG_TYPE&apos;))=&quot;DIFF&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_PLL_SHARING&apos;))=0))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>clk_n</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.clk_n" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_CLK_SIG_TYPE&apos;))=&quot;DIFF&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_PLL_SHARING&apos;))=0))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>clk</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.clk" xilinx:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.C_CLK_SIG_TYPE&apos;))=&quot;SINGLE&quot;) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_PLL_SHARING&apos;))=0)) or ((spirit:decode(id(&apos;MODELPARAM_VALUE.C_PLL_SHARING&apos;))=1) and (spirit:decode(id(&apos;PARAM_VALUE.PLL0_RX_EXTERNAL_CLK_TO_DATA&apos;)) =1 or spirit:decode(id(&apos;PARAM_VALUE.PLL0_RX_EXTERNAL_CLK_TO_DATA&apos;)) =0 )))">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>riu_clk</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.riu_clk" xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.RIU_FROM_PLL&apos;))=0)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pll0_locked</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pll0_locked" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_PLL_SHARING&apos;))=0)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pll1_locked</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pll1_locked" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_SERIAL_MODE&apos;))=&quot;TRUE&quot;) and  (spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_TX&apos;))= 1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_EN_RX&apos;))= 1) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_PLL_SHARING&apos;))=0))">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bg0_pin0_nc</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bg0_pin0_nc" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_NIB0_BS0_EN&apos;))= 1)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bg0_pin6_nc</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bg0_pin6_nc" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_NIB1_BS0_EN&apos;))= 1)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bg1_pin0_nc</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bg1_pin0_nc" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_NIB2_BS0_EN&apos;))= 1)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bg1_pin6_nc</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bg1_pin6_nc" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_NIB3_BS0_EN&apos;))= 1)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bg2_pin0_nc</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bg2_pin0_nc" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_NIB4_BS0_EN&apos;))= 1)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bg2_pin6_nc</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bg2_pin6_nc" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_NIB5_BS0_EN&apos;))= 1)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bg3_pin0_nc</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bg3_pin0_nc" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_NIB6_BS0_EN&apos;))= 1)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>bg3_pin6_nc</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.bg3_pin6_nc" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_NIB7_BS0_EN&apos;))= 1)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>clk_rxp</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>data_to_fabric_clk_rxp</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>clk_rxn</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>data_to_fabric_clk_rxn</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>data_rxp0</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>data_to_fabric_data_rxp0</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>data_rxn0</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>data_to_fabric_data_rxn0</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>data_rxp1</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>data_to_fabric_data_rxp1</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>data_rxn1</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>data_to_fabric_data_rxn1</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>data_rxp2</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>data_to_fabric_data_rxp2</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>data_rxn2</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>data_to_fabric_data_rxn2</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>data_rxp3</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>data_to_fabric_data_rxp3</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>data_rxn3</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>data_to_fabric_data_rxn3</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
    </spirit:ports>
    <spirit:modelParameters>
      <spirit:modelParameter xsi:type="spirit:nameValueTypeType" spirit:dataType="INTEGER">
        <spirit:name>C_PLL0_RX_EXTERNAL_CLK_TO_DATA</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_PLL0_RX_EXTERNAL_CLK_TO_DATA">3</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_TEMPLATE</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TEMPLATE">2</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_ENABLE_PLL0_PLLOUTFB</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_ENABLE_PLL0_PLLOUTFB">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_PLL0_CLKFBOUT_MULT</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_PLL0_CLKFBOUT_MULT">15</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_PLL1_CLKFBOUT_MULT</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_PLL1_CLKFBOUT_MULT">15</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="STRING">
        <spirit:name>C_CLK_SIG_TYPE</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_CLK_SIG_TYPE">SINGLE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_PLL0_DIVCLK_DIVIDE</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_PLL0_DIVCLK_DIVIDE">2</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_PLL1_DIVCLK_DIVIDE</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_PLL1_DIVCLK_DIVIDE">2</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_ENABLE_PLL0_PLLOUT1</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_ENABLE_PLL0_PLLOUT1">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_PLL0_CLKOUT1_DIVIDE</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_PLL0_CLKOUT1_DIVIDE">1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="REAL">
        <spirit:name>C_PLL0_MMCM_CLKFBOUT_MULT_F</spirit:name>
        <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_PLL0_MMCM_CLKFBOUT_MULT_F">7.875</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="REAL">
        <spirit:name>C_PLL0_MMCM_DIVCLK_DIVIDE</spirit:name>
        <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_PLL0_MMCM_DIVCLK_DIVIDE">1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="REAL">
        <spirit:name>C_PLL0_MMCM_CLKOUT0_DIVIDE_F</spirit:name>
        <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_PLL0_MMCM_CLKOUT0_DIVIDE_F">7.875</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_PLL0_FIFO_WRITE_CLK_EN</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_PLL0_FIFO_WRITE_CLK_EN">1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="STRING">
        <spirit:name>C_PLL0_CLK_SOURCE</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_PLL0_CLK_SOURCE">BUFG_TO_PLL</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_RX_DELAY_CASCADE</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_CASCADE">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_RX_DELAY_TYPE</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_TYPE">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_TX_DELAY_VALUE</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_VALUE" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_CLK_FWD_PHASE</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_CLK_FWD_PHASE">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_TX_DATA_PHASE</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DATA_PHASE">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="STRING">
        <spirit:name>C_DIFFERENTIAL_IO_STD</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_DIFFERENTIAL_IO_STD">MIPI_DPHY_DCI</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="STRING">
        <spirit:name>C_DIFFERENTIAL_IO_TERMINATION</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_DIFFERENTIAL_IO_TERMINATION">TERM_100</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="STRING">
        <spirit:name>C_SINGLE_ENDED_IO_STD</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_SINGLE_ENDED_IO_STD">NONE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="STRING">
        <spirit:name>C_SINGLE_ENDED_IO_TERMINATION</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_SINGLE_ENDED_IO_TERMINATION">NONE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="STRING">
        <spirit:name>C_TX_PRE_EMPHASIS_S</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_PRE_EMPHASIS_S">NONE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="STRING">
        <spirit:name>C_TX_PRE_EMPHASIS_D</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_PRE_EMPHASIS_D">NONE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="STRING">
        <spirit:name>C_TX_DRIVE_S</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DRIVE_S">NONE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="STRING">
        <spirit:name>C_TX_DRIVE_D</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DRIVE_D">NONE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="STRING">
        <spirit:name>C_TX_SLEW_S</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_SLEW_S">NONE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="STRING">
        <spirit:name>C_TX_SLEW_D</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_SLEW_D">NONE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="STRING">
        <spirit:name>C_RX_EQUALIZATION_S</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_EQUALIZATION_S">NONE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="STRING">
        <spirit:name>C_RX_EQUALIZATION_D</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_EQUALIZATION_D">EQ_NONE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_ENABLE_BITSLIP</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_ENABLE_BITSLIP">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_ENABLE_DATA_BITSLIP</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_ENABLE_DATA_BITSLIP">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_ENABLE_TX_TRI</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_ENABLE_TX_TRI">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="STRING">
        <spirit:name>C_BITSLIP_MODE</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_BITSLIP_MODE">SLIP_PER_BIT</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_BITSLIP_VAL</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_BITSLIP_VAL" spirit:bitStringLength="8">0x2C</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_ENABLE_RIU_INTERFACE</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_ENABLE_RIU_INTERFACE">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_ENABLE_RIU_SPLIT</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_ENABLE_RIU_SPLIT">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_DATA_TRI</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_DATA_TRI">1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_CLOCK_TRI</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_CLOCK_TRI">1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_EN_MULTI_INTF_PORTS</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_EN_MULTI_INTF_PORTS">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="STRING">
        <spirit:name>C_DEVICE_FAMILY</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_DEVICE_FAMILY">zynquplus</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="STRING">
        <spirit:name>C_DEVICE</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_DEVICE">xck26</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_EN_BSC0</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_EN_BSC0">1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_EN_BSC1</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_EN_BSC1">1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_EN_BSC2</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_EN_BSC2">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_EN_BSC3</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_EN_BSC3">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_EN_BSC4</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_EN_BSC4">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_EN_BSC5</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_EN_BSC5">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_EN_BSC6</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_EN_BSC6">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_EN_BSC7</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_EN_BSC7">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_EX_INST_GEN</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_EX_INST_GEN">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="STRING">
        <spirit:name>C_PIN_INFO</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_PIN_INFO">0 {nibble 0 dir RX sig_type DIFF data_strb Strobe data_strb_org Strobe sig_name clk_rxp loc G1} 1 {nibble 0 dir RX sig_type DIFF data_strb Strobe data_strb_org Strobe sig_name clk_rxn loc F1} 2 {nibble 0 dir RX sig_type DIFF data_strb Data data_strb_org Data sig_name data_rxp0 loc E1} 3 {nibble 0 dir RX sig_type DIFF data_strb Data data_strb_org Data sig_name data_rxn0 loc D1} 4 {nibble 0 dir RX sig_type DIFF data_strb Data data_strb_org Data sig_name data_rxp1 loc F2} 5 {nibble 0 dir RX sig_typ
e DIFF data_strb Data data_strb_org Data sig_name data_rxn1 loc E2} 6 {nibble 1 dir RX sig_type DIFF data_strb Data data_strb_org Data sig_name data_rxp2 loc G3} 7 {nibble 1 dir RX sig_type DIFF data_strb Data data_strb_org Data sig_name data_rxn2 loc F3} 8 {nibble 1 dir RX sig_type DIFF data_strb Data data_strb_org Data sig_name data_rxp3 loc E4} 9 {nibble 1 dir RX sig_type DIFF data_strb Data data_strb_org Data sig_name data_rxn3 loc E3}</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="STRING">
        <spirit:name>C_ALL_EN_PIN_INFO</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_ALL_EN_PIN_INFO">0 {nibble 0 dir RX sig_type DIFF data_strb Strobe data_strb_org Strobe sig_name clk_rxp loc G1} 1 {nibble 0 dir RX sig_type DIFF data_strb Strobe data_strb_org Strobe sig_name clk_rxn loc F1} 2 {nibble 0 dir RX sig_type DIFF data_strb Data data_strb_org Data sig_name data_rxp0 loc E1} 3 {nibble 0 dir RX sig_type DIFF data_strb Data data_strb_org Data sig_name data_rxn0 loc D1} 4 {nibble 0 dir RX sig_type DIFF data_strb Data data_strb_org Data sig_name data_rxp1 loc F2} 5 {nibble 0 dir RX sig_typ
e DIFF data_strb Data data_strb_org Data sig_name data_rxn1 loc E2} 6 {nibble 1 dir RX sig_type DIFF data_strb Data data_strb_org Data sig_name data_rxp2 loc G3} 7 {nibble 1 dir RX sig_type DIFF data_strb Data data_strb_org Data sig_name data_rxn2 loc F3} 8 {nibble 1 dir RX sig_type DIFF data_strb Data data_strb_org Data sig_name data_rxp3 loc E4} 9 {nibble 1 dir RX sig_type DIFF data_strb Data data_strb_org Data sig_name data_rxn3 loc E3}</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_CLK_FWD</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_CLK_FWD">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="STRING">
        <spirit:name>C_SERIAL_MODE</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_SERIAL_MODE">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_EN_TX</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_EN_TX">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_EN_RX</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_EN_RX">1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_EN_BIDIR</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_EN_BIDIR">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_NIBBLE0_TRI</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_NIBBLE0_TRI">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_NIBBLE1_TRI</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_NIBBLE1_TRI">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_NIBBLE2_TRI</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_NIBBLE2_TRI">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_NIBBLE3_TRI</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_NIBBLE3_TRI">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_NIBBLE4_TRI</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_NIBBLE4_TRI">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_NIBBLE5_TRI</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_NIBBLE5_TRI">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_NIBBLE6_TRI</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_NIBBLE6_TRI">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_NIBBLE7_TRI</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_NIBBLE7_TRI">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_SERIALIZATION_FACTOR</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_SERIALIZATION_FACTOR">8</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_TX_DELAY_TYPE</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_TYPE">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_TX_DELAY_TYPE0</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_TYPE0">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_TX_DELAY_TYPE1</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_TYPE1">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_TX_DELAY_TYPE2</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_TYPE2">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_TX_DELAY_TYPE3</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_TYPE3">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_TX_DELAY_TYPE4</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_TYPE4">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_TX_DELAY_TYPE5</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_TYPE5">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_TX_DELAY_TYPE6</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_TYPE6">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_TX_DELAY_TYPE7</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_TYPE7">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_TX_DELAY_TYPE8</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_TYPE8">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_TX_DELAY_TYPE9</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_TYPE9">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_TX_DELAY_TYPE10</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_TYPE10">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_TX_DELAY_TYPE11</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_TYPE11">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_TX_DELAY_TYPE12</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_TYPE12">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_TX_DELAY_TYPE13</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_TYPE13">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_TX_DELAY_TYPE14</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_TYPE14">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_TX_DELAY_TYPE15</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_TYPE15">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_TX_DELAY_TYPE16</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_TYPE16">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_TX_DELAY_TYPE17</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_TYPE17">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_TX_DELAY_TYPE18</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_TYPE18">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_TX_DELAY_TYPE19</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_TYPE19">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_TX_DELAY_TYPE20</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_TYPE20">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_TX_DELAY_TYPE21</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_TYPE21">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_TX_DELAY_TYPE22</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_TYPE22">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_TX_DELAY_TYPE23</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_TYPE23">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_TX_DELAY_TYPE24</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_TYPE24">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_TX_DELAY_TYPE25</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_TYPE25">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_TX_DELAY_TYPE26</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_TYPE26">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_TX_DELAY_TYPE27</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_TYPE27">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_TX_DELAY_TYPE28</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_TYPE28">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_TX_DELAY_TYPE29</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_TYPE29">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_TX_DELAY_TYPE30</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_TYPE30">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_TX_DELAY_TYPE31</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_TYPE31">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_TX_DELAY_TYPE32</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_TYPE32">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_TX_DELAY_TYPE33</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_TYPE33">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_TX_DELAY_TYPE34</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_TYPE34">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_TX_DELAY_TYPE35</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_TYPE35">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_TX_DELAY_TYPE36</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_TYPE36">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_TX_DELAY_TYPE37</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_TYPE37">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_TX_DELAY_TYPE38</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_TYPE38">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_TX_DELAY_TYPE39</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_TYPE39">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_TX_DELAY_TYPE40</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_TYPE40">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_TX_DELAY_TYPE41</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_TYPE41">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_TX_DELAY_TYPE42</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_TYPE42">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_TX_DELAY_TYPE43</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_TYPE43">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_TX_DELAY_TYPE44</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_TYPE44">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_TX_DELAY_TYPE45</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_TYPE45">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_TX_DELAY_TYPE46</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_TYPE46">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_TX_DELAY_TYPE47</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_TYPE47">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_TX_DELAY_TYPE48</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_TYPE48">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_TX_DELAY_TYPE49</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_TYPE49">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_TX_DELAY_TYPE50</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_TYPE50">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_TX_DELAY_TYPE51</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_TYPE51">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_TX_DELAY_VALUE0</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_VALUE0" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_TX_DELAY_VALUE1</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_VALUE1" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_TX_DELAY_VALUE2</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_VALUE2" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_TX_DELAY_VALUE3</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_VALUE3" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_TX_DELAY_VALUE4</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_VALUE4" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_TX_DELAY_VALUE5</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_VALUE5" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_TX_DELAY_VALUE6</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_VALUE6" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_TX_DELAY_VALUE7</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_VALUE7" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_TX_DELAY_VALUE8</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_VALUE8" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_TX_DELAY_VALUE9</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_VALUE9" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_TX_DELAY_VALUE10</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_VALUE10" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_TX_DELAY_VALUE11</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_VALUE11" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_TX_DELAY_VALUE12</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_VALUE12" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_TX_DELAY_VALUE13</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_VALUE13" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_TX_DELAY_VALUE14</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_VALUE14" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_TX_DELAY_VALUE15</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_VALUE15" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_TX_DELAY_VALUE16</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_VALUE16" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_TX_DELAY_VALUE17</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_VALUE17" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_TX_DELAY_VALUE18</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_VALUE18" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_TX_DELAY_VALUE19</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_VALUE19" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_TX_DELAY_VALUE20</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_VALUE20" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_TX_DELAY_VALUE21</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_VALUE21" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_TX_DELAY_VALUE22</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_VALUE22" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_TX_DELAY_VALUE23</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_VALUE23" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_TX_DELAY_VALUE24</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_VALUE24" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_TX_DELAY_VALUE25</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_VALUE25" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_TX_DELAY_VALUE26</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_VALUE26" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_TX_DELAY_VALUE27</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_VALUE27" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_TX_DELAY_VALUE28</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_VALUE28" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_TX_DELAY_VALUE29</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_VALUE29" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_TX_DELAY_VALUE30</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_VALUE30" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_TX_DELAY_VALUE31</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_VALUE31" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_TX_DELAY_VALUE32</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_VALUE32" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_TX_DELAY_VALUE33</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_VALUE33" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_TX_DELAY_VALUE34</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_VALUE34" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_TX_DELAY_VALUE35</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_VALUE35" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_TX_DELAY_VALUE36</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_VALUE36" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_TX_DELAY_VALUE37</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_VALUE37" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_TX_DELAY_VALUE38</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_VALUE38" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_TX_DELAY_VALUE39</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_VALUE39" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_TX_DELAY_VALUE40</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_VALUE40" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_TX_DELAY_VALUE41</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_VALUE41" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_TX_DELAY_VALUE42</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_VALUE42" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_TX_DELAY_VALUE43</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_VALUE43" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_TX_DELAY_VALUE44</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_VALUE44" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_TX_DELAY_VALUE45</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_VALUE45" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_TX_DELAY_VALUE46</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_VALUE46" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_TX_DELAY_VALUE47</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_VALUE47" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_TX_DELAY_VALUE48</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_VALUE48" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_TX_DELAY_VALUE49</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_VALUE49" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_TX_DELAY_VALUE50</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_VALUE50" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_TX_DELAY_VALUE51</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_DELAY_VALUE51" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_RX_DELAY_TYPE0</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_TYPE0">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_RX_DELAY_TYPE1</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_TYPE1">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_RX_DELAY_TYPE2</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_TYPE2">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_RX_DELAY_TYPE3</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_TYPE3">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_RX_DELAY_TYPE4</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_TYPE4">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_RX_DELAY_TYPE5</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_TYPE5">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_RX_DELAY_TYPE6</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_TYPE6">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_RX_DELAY_TYPE7</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_TYPE7">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_RX_DELAY_TYPE8</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_TYPE8">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_RX_DELAY_TYPE9</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_TYPE9">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_RX_DELAY_TYPE10</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_TYPE10">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_RX_DELAY_TYPE11</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_TYPE11">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_RX_DELAY_TYPE12</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_TYPE12">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_RX_DELAY_TYPE13</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_TYPE13">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_RX_DELAY_TYPE14</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_TYPE14">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_RX_DELAY_TYPE15</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_TYPE15">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_RX_DELAY_TYPE16</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_TYPE16">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_RX_DELAY_TYPE17</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_TYPE17">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_RX_DELAY_TYPE18</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_TYPE18">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_RX_DELAY_TYPE19</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_TYPE19">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_RX_DELAY_TYPE20</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_TYPE20">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_RX_DELAY_TYPE21</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_TYPE21">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_RX_DELAY_TYPE22</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_TYPE22">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_RX_DELAY_TYPE23</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_TYPE23">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_RX_DELAY_TYPE24</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_TYPE24">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_RX_DELAY_TYPE25</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_TYPE25">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_RX_DELAY_TYPE26</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_TYPE26">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_RX_DELAY_TYPE27</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_TYPE27">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_RX_DELAY_TYPE28</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_TYPE28">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_RX_DELAY_TYPE29</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_TYPE29">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_RX_DELAY_TYPE30</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_TYPE30">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_RX_DELAY_TYPE31</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_TYPE31">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_RX_DELAY_TYPE32</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_TYPE32">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_RX_DELAY_TYPE33</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_TYPE33">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_RX_DELAY_TYPE34</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_TYPE34">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_RX_DELAY_TYPE35</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_TYPE35">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_RX_DELAY_TYPE36</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_TYPE36">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_RX_DELAY_TYPE37</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_TYPE37">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_RX_DELAY_TYPE38</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_TYPE38">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_RX_DELAY_TYPE39</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_TYPE39">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_RX_DELAY_TYPE40</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_TYPE40">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_RX_DELAY_TYPE41</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_TYPE41">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_RX_DELAY_TYPE42</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_TYPE42">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_RX_DELAY_TYPE43</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_TYPE43">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_RX_DELAY_TYPE44</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_TYPE44">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_RX_DELAY_TYPE45</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_TYPE45">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_RX_DELAY_TYPE46</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_TYPE46">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_RX_DELAY_TYPE47</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_TYPE47">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_RX_DELAY_TYPE48</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_TYPE48">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_RX_DELAY_TYPE49</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_TYPE49">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_RX_DELAY_TYPE50</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_TYPE50">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_RX_DELAY_TYPE51</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_TYPE51">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE0</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE0" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE1</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE1" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE2</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE2" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE3</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE3" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE4</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE4" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE5</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE5" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE6</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE6" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE7</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE7" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE8</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE8" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE9</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE9" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE10</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE10" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE11</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE11" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE12</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE12" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE13</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE13" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE14</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE14" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE15</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE15" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE16</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE16" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE17</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE17" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE18</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE18" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE19</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE19" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE20</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE20" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE21</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE21" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE22</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE22" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE23</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE23" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE24</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE24" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE25</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE25" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE26</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE26" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE27</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE27" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE28</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE28" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE29</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE29" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE30</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE30" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE31</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE31" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE32</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE32" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE33</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE33" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE34</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE34" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE35</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE35" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE36</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE36" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE37</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE37" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE38</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE38" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE39</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE39" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE40</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE40" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE41</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE41" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE42</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE42" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE43</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE43" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE44</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE44" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE45</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE45" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE46</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE46" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE47</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE47" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE48</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE48" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE49</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE49" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE50</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE50" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE51</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE51" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE_EXT0</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE_EXT0" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE_EXT1</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE_EXT1" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE_EXT2</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE_EXT2" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE_EXT3</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE_EXT3" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE_EXT4</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE_EXT4" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE_EXT5</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE_EXT5" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE_EXT6</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE_EXT6" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE_EXT7</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE_EXT7" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE_EXT8</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE_EXT8" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE_EXT9</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE_EXT9" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE_EXT10</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE_EXT10" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE_EXT11</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE_EXT11" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE_EXT12</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE_EXT12" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE_EXT13</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE_EXT13" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE_EXT14</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE_EXT14" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE_EXT15</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE_EXT15" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE_EXT16</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE_EXT16" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE_EXT17</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE_EXT17" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE_EXT18</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE_EXT18" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE_EXT19</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE_EXT19" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE_EXT20</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE_EXT20" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE_EXT21</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE_EXT21" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE_EXT22</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE_EXT22" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE_EXT23</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE_EXT23" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE_EXT24</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE_EXT24" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE_EXT25</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE_EXT25" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE_EXT26</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE_EXT26" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE_EXT27</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE_EXT27" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE_EXT28</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE_EXT28" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE_EXT29</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE_EXT29" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE_EXT30</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE_EXT30" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE_EXT31</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE_EXT31" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE_EXT32</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE_EXT32" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE_EXT33</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE_EXT33" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE_EXT34</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE_EXT34" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE_EXT35</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE_EXT35" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE_EXT36</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE_EXT36" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE_EXT37</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE_EXT37" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE_EXT38</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE_EXT38" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE_EXT39</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE_EXT39" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE_EXT40</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE_EXT40" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE_EXT41</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE_EXT41" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE_EXT42</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE_EXT42" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE_EXT43</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE_EXT43" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE_EXT44</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE_EXT44" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE_EXT45</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE_EXT45" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE_EXT46</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE_EXT46" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE_EXT47</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE_EXT47" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE_EXT48</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE_EXT48" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE_EXT49</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE_EXT49" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE_EXT50</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE_EXT50" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_DELAY_VALUE_EXT51</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_VALUE_EXT51" spirit:bitStringLength="12">000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="REAL">
        <spirit:name>C_TX_REFCLK_FREQ</spirit:name>
        <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_REFCLK_FREQ">1500.00</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="REAL">
        <spirit:name>C_CLKIN_PERIOD</spirit:name>
        <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_CLKIN_PERIOD">5.0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="STRING">
        <spirit:name>C_DIV_MODE</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_DIV_MODE">DIV4</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="STRING">
        <spirit:name>C_EN_RIU_OR0</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_EN_RIU_OR0">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="STRING">
        <spirit:name>C_EN_RIU_OR1</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_EN_RIU_OR1">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="STRING">
        <spirit:name>C_EN_RIU_OR2</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_EN_RIU_OR2">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="STRING">
        <spirit:name>C_EN_RIU_OR3</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_EN_RIU_OR3">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_NIB0_EN_OTHER_PCLK</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_NIB0_EN_OTHER_PCLK">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_NIB1_EN_OTHER_PCLK</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_NIB1_EN_OTHER_PCLK">1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_NIB2_EN_OTHER_PCLK</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_NIB2_EN_OTHER_PCLK">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_NIB3_EN_OTHER_PCLK</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_NIB3_EN_OTHER_PCLK">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_NIB4_EN_OTHER_PCLK</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_NIB4_EN_OTHER_PCLK">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_NIB5_EN_OTHER_PCLK</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_NIB5_EN_OTHER_PCLK">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_NIB6_EN_OTHER_PCLK</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_NIB6_EN_OTHER_PCLK">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_NIB7_EN_OTHER_PCLK</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_NIB7_EN_OTHER_PCLK">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_NIB0_EN_OTHER_NCLK</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_NIB0_EN_OTHER_NCLK">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_NIB1_EN_OTHER_NCLK</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_NIB1_EN_OTHER_NCLK">1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_NIB2_EN_OTHER_NCLK</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_NIB2_EN_OTHER_NCLK">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_NIB3_EN_OTHER_NCLK</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_NIB3_EN_OTHER_NCLK">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_NIB4_EN_OTHER_NCLK</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_NIB4_EN_OTHER_NCLK">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_NIB5_EN_OTHER_NCLK</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_NIB5_EN_OTHER_NCLK">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_NIB6_EN_OTHER_NCLK</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_NIB6_EN_OTHER_NCLK">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_NIB7_EN_OTHER_NCLK</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_NIB7_EN_OTHER_NCLK">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_NIB0_EN_CLK_TO_EXT_NORTH</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_NIB0_EN_CLK_TO_EXT_NORTH">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_NIB1_EN_CLK_TO_EXT_NORTH</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_NIB1_EN_CLK_TO_EXT_NORTH">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_NIB2_EN_CLK_TO_EXT_NORTH</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_NIB2_EN_CLK_TO_EXT_NORTH">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_NIB3_EN_CLK_TO_EXT_NORTH</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_NIB3_EN_CLK_TO_EXT_NORTH">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_NIB4_EN_CLK_TO_EXT_NORTH</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_NIB4_EN_CLK_TO_EXT_NORTH">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_NIB5_EN_CLK_TO_EXT_NORTH</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_NIB5_EN_CLK_TO_EXT_NORTH">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_NIB6_EN_CLK_TO_EXT_NORTH</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_NIB6_EN_CLK_TO_EXT_NORTH">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_NIB7_EN_CLK_TO_EXT_NORTH</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_NIB7_EN_CLK_TO_EXT_NORTH">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_NIB0_EN_CLK_TO_EXT_SOUTH</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_NIB0_EN_CLK_TO_EXT_SOUTH">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_NIB1_EN_CLK_TO_EXT_SOUTH</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_NIB1_EN_CLK_TO_EXT_SOUTH">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_NIB2_EN_CLK_TO_EXT_SOUTH</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_NIB2_EN_CLK_TO_EXT_SOUTH">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_NIB3_EN_CLK_TO_EXT_SOUTH</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_NIB3_EN_CLK_TO_EXT_SOUTH">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_NIB4_EN_CLK_TO_EXT_SOUTH</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_NIB4_EN_CLK_TO_EXT_SOUTH">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_NIB5_EN_CLK_TO_EXT_SOUTH</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_NIB5_EN_CLK_TO_EXT_SOUTH">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_NIB6_EN_CLK_TO_EXT_SOUTH</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_NIB6_EN_CLK_TO_EXT_SOUTH">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_NIB7_EN_CLK_TO_EXT_SOUTH</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_NIB7_EN_CLK_TO_EXT_SOUTH">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_RX_BITSLICE0_EN</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_BITSLICE0_EN">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_RX_STROBE_EN</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_STROBE_EN">3</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="REAL">
        <spirit:name>C_RX_REFCLK_FREQ</spirit:name>
        <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_REFCLK_FREQ">1500.00</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="STRING">
        <spirit:name>C_PLL0_CLKOUTPHY_MODE</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_PLL0_CLKOUTPHY_MODE">VCO</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="STRING">
        <spirit:name>C_PLL1_CLKOUTPHY_MODE</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_PLL1_CLKOUTPHY_MODE">VCO</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="REAL">
        <spirit:name>C_PLL0_DIV_FACTOR</spirit:name>
        <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_PLL0_DIV_FACTOR">1.0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="REAL">
        <spirit:name>C_PLL1_DIV_FACTOR</spirit:name>
        <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_PLL1_DIV_FACTOR">1.0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_BANK</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_BANK">66</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="STRING">
        <spirit:name>C_EXDES_BANK</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_EXDES_BANK">64_(HP)</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_NIB0_BS0_EN</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_NIB0_BS0_EN">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_NIB1_BS0_EN</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_NIB1_BS0_EN">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_NIB2_BS0_EN</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_NIB2_BS0_EN">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_NIB3_BS0_EN</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_NIB3_BS0_EN">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_NIB4_BS0_EN</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_NIB4_BS0_EN">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_NIB5_BS0_EN</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_NIB5_BS0_EN">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_NIB6_BS0_EN</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_NIB6_BS0_EN">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_NIB7_BS0_EN</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_NIB7_BS0_EN">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="STRING">
        <spirit:name>C_BS0_INFO</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_BS0_INFO">0 {name bg0_pin0_nc loc G1} 1 {name bg0_pin6_nc loc G3} 2 {name bg1_pin0_nc loc C1} 3 {name bg1_pin6_nc loc B4} 4 {name bg2_pin0_nc loc D7} 5 {name bg2_pin6_nc loc G8} 6 {name bg3_pin0_nc loc {}} 7 {name bg3_pin6_nc loc {}}</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="STRING">
        <spirit:name>C_INCLK_LOC</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_INCLK_LOC">NONE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_INCLK_PIN</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_INCLK_PIN">100</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="STRING">
        <spirit:name>C_GC_LOC</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_GC_LOC">21 {name IO_L11P_T1U_N8_GC_66 loc D4} 23 {name IO_L12P_T1U_N10_GC_66 loc C3} 28 {name IO_L14P_T2L_N2_GC_66 loc E5}</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="STRING">
        <spirit:name>C_SIM_DEVICE</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_SIM_DEVICE">ULTRASCALE_PLUS_ES1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="REAL">
        <spirit:name>C_SIM_VERSION</spirit:name>
        <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_SIM_VERSION">2.0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>TX_BITSLICE_TRI_EN</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.TX_BITSLICE_TRI_EN">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_CLK_FWD_ENABLE</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_CLK_FWD_ENABLE" spirit:bitStringLength="52">0000000000000000000000000000000000000000000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_CLK_FWD_BITSLICE_NO</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_CLK_FWD_BITSLICE_NO">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_CLKIN_DIFF_EN</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_CLKIN_DIFF_EN">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_TX_BITSLICE_EN</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_TX_BITSLICE_EN" spirit:bitStringLength="52">0000000000000000000000000000000000000000000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_BIDIR_BITSLICE_EN</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_BIDIR_BITSLICE_EN" spirit:bitStringLength="52">0000000000000000000000000000000000000000000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_DIFF_EN</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_DIFF_EN" spirit:bitStringLength="52">0b0000000000000000000000000000000000000000001111111111</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_PIN_EN</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_PIN_EN" spirit:bitStringLength="52">0b0000000000000000000000000000000000000000000101010101</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_RX_BITSLICE_EN</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_BITSLICE_EN" spirit:bitStringLength="52">0b0000000000000000000000000000000000000000001111111111</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_ALL_RX_EN</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_ALL_RX_EN" spirit:bitStringLength="52">0b0000000000000000000000000000000000000000001111111111</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_DATA_PIN_EN</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_DATA_PIN_EN">5</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_PLL_SHARING</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_PLL_SHARING">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_BS_INIT_VAL</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_BS_INIT_VAL" spirit:bitStringLength="52">0000000000000000000000000000000000000000000000000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="bitString">
        <spirit:name>C_INV_RX_CLK</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_INV_RX_CLK" spirit:bitStringLength="8">00000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="REAL">
        <spirit:name>C_PLL_VCOMIN</spirit:name>
        <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_PLL_VCOMIN">750.000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="REAL">
        <spirit:name>C_PLL0_CLK0_PHASE</spirit:name>
        <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_PLL0_CLK0_PHASE">0.0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="REAL">
        <spirit:name>C_PLL0_CLK1_PHASE</spirit:name>
        <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_PLL0_CLK1_PHASE">0.0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="REAL">
        <spirit:name>C_PLL1_CLK0_PHASE</spirit:name>
        <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_PLL1_CLK0_PHASE">0.0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="REAL">
        <spirit:name>C_PLL1_CLK1_PHASE</spirit:name>
        <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_PLL1_CLK1_PHASE">0.0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="STRING">
        <spirit:name>C_STRB_INFO</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_STRB_INFO">9 99 9 9 9 9 9 9 9 9 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="REAL">
        <spirit:name>C_EX_CLK_FREQ</spirit:name>
        <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_EX_CLK_FREQ">200.000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="STRING">
        <spirit:name>C_RX_DELAY_FORMAT</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_RX_DELAY_FORMAT">TIME</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="INTEGER">
        <spirit:name>C_ENABLE_N_PINS</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_ENABLE_N_PINS">1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="STRING">
        <spirit:name>C_REC_IN_FREQ</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_REC_IN_FREQ">93.750</spirit:value>
      </spirit:modelParameter>
    </spirit:modelParameters>
  </spirit:model>
  <spirit:choices>
    <spirit:choice>
      <spirit:name>choice_list_0c04cb16</spirit:name>
      <spirit:enumeration>1000.00</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_14e37531</spirit:name>
      <spirit:enumeration>COUNT</spirit:enumeration>
      <spirit:enumeration>TIME</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_17d2dc5b</spirit:name>
      <spirit:enumeration>EQ_LEVEL0</spirit:enumeration>
      <spirit:enumeration>EQ_LEVEL1</spirit:enumeration>
      <spirit:enumeration>EQ_LEVEL2</spirit:enumeration>
      <spirit:enumeration>EQ_LEVEL3</spirit:enumeration>
      <spirit:enumeration>EQ_LEVEL4</spirit:enumeration>
      <spirit:enumeration>EQ_NONE</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_281f0d3b</spirit:name>
      <spirit:enumeration>LATENCY</spirit:enumeration>
      <spirit:enumeration>WAVEFORM</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_3b26a2ea</spirit:name>
      <spirit:enumeration>RDRV_NONE_NONE</spirit:enumeration>
      <spirit:enumeration>RDRV_40_40</spirit:enumeration>
      <spirit:enumeration>RDRV_48_48</spirit:enumeration>
      <spirit:enumeration>RDRV_60_60</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_4e89caad</spirit:name>
      <spirit:enumeration>RX</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_568bd184</spirit:name>
      <spirit:enumeration>Data</spirit:enumeration>
      <spirit:enumeration>Clk Fwd</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_598304d0</spirit:name>
      <spirit:enumeration>0</spirit:enumeration>
      <spirit:enumeration>90</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_65aded21</spirit:name>
      <spirit:enumeration>Data</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_6b4993e2</spirit:name>
      <spirit:enumeration>Data</spirit:enumeration>
      <spirit:enumeration>Input Clock</spirit:enumeration>
      <spirit:enumeration>Clk Fwd</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_76ae9d74</spirit:name>
      <spirit:enumeration>Data</spirit:enumeration>
      <spirit:enumeration>Clk Fwd</spirit:enumeration>
      <spirit:enumeration>Input Clock</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_8af5a703</spirit:name>
      <spirit:enumeration>0</spirit:enumeration>
      <spirit:enumeration>1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_997181f0</spirit:name>
      <spirit:enumeration>SLIP_PER_BIT</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_a134928a</spirit:name>
      <spirit:enumeration>64_(HP)</spirit:enumeration>
      <spirit:enumeration>65_(HP)</spirit:enumeration>
      <spirit:enumeration>66_(HP)_(Half Bank)</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_c8951bc1</spirit:name>
      <spirit:enumeration>NONE</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_cfd7875f</spirit:name>
      <spirit:enumeration>71.429</spirit:enumeration>
      <spirit:enumeration>75.000</spirit:enumeration>
      <spirit:enumeration>78.947</spirit:enumeration>
      <spirit:enumeration>83.333</spirit:enumeration>
      <spirit:enumeration>88.235</spirit:enumeration>
      <spirit:enumeration>93.750</spirit:enumeration>
      <spirit:enumeration>100.000</spirit:enumeration>
      <spirit:enumeration>107.143</spirit:enumeration>
      <spirit:enumeration>115.385</spirit:enumeration>
      <spirit:enumeration>125.000</spirit:enumeration>
      <spirit:enumeration>136.364</spirit:enumeration>
      <spirit:enumeration>142.857</spirit:enumeration>
      <spirit:enumeration>150.000</spirit:enumeration>
      <spirit:enumeration>157.895</spirit:enumeration>
      <spirit:enumeration>166.667</spirit:enumeration>
      <spirit:enumeration>176.471</spirit:enumeration>
      <spirit:enumeration>187.500</spirit:enumeration>
      <spirit:enumeration>200.000</spirit:enumeration>
      <spirit:enumeration>214.286</spirit:enumeration>
      <spirit:enumeration>225.000</spirit:enumeration>
      <spirit:enumeration>230.769</spirit:enumeration>
      <spirit:enumeration>236.842</spirit:enumeration>
      <spirit:enumeration>250.000</spirit:enumeration>
      <spirit:enumeration>264.706</spirit:enumeration>
      <spirit:enumeration>272.727</spirit:enumeration>
      <spirit:enumeration>281.250</spirit:enumeration>
      <spirit:enumeration>285.714</spirit:enumeration>
      <spirit:enumeration>300.000</spirit:enumeration>
      <spirit:enumeration>315.789</spirit:enumeration>
      <spirit:enumeration>321.429</spirit:enumeration>
      <spirit:enumeration>333.333</spirit:enumeration>
      <spirit:enumeration>346.154</spirit:enumeration>
      <spirit:enumeration>352.941</spirit:enumeration>
      <spirit:enumeration>357.143</spirit:enumeration>
      <spirit:enumeration>375.000</spirit:enumeration>
      <spirit:enumeration>394.737</spirit:enumeration>
      <spirit:enumeration>400.000</spirit:enumeration>
      <spirit:enumeration>409.091</spirit:enumeration>
      <spirit:enumeration>416.667</spirit:enumeration>
      <spirit:enumeration>428.571</spirit:enumeration>
      <spirit:enumeration>441.176</spirit:enumeration>
      <spirit:enumeration>450.000</spirit:enumeration>
      <spirit:enumeration>461.538</spirit:enumeration>
      <spirit:enumeration>468.750</spirit:enumeration>
      <spirit:enumeration>473.684</spirit:enumeration>
      <spirit:enumeration>500.000</spirit:enumeration>
      <spirit:enumeration>525.000</spirit:enumeration>
      <spirit:enumeration>529.412</spirit:enumeration>
      <spirit:enumeration>535.714</spirit:enumeration>
      <spirit:enumeration>545.455</spirit:enumeration>
      <spirit:enumeration>552.632</spirit:enumeration>
      <spirit:enumeration>562.500</spirit:enumeration>
      <spirit:enumeration>571.429</spirit:enumeration>
      <spirit:enumeration>576.923</spirit:enumeration>
      <spirit:enumeration>583.333</spirit:enumeration>
      <spirit:enumeration>600.000</spirit:enumeration>
      <spirit:enumeration>617.647</spirit:enumeration>
      <spirit:enumeration>625.000</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_d8920bdd</spirit:name>
      <spirit:enumeration>8</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_de014f6a</spirit:name>
      <spirit:enumeration>TERM_100</spirit:enumeration>
      <spirit:enumeration>TERM_NONE</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_e03d9dac</spirit:name>
      <spirit:enumeration>MIPI_DPHY_DCI</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_f4538885</spirit:name>
      <spirit:enumeration>Data</spirit:enumeration>
      <spirit:enumeration>Strobe</spirit:enumeration>
      <spirit:enumeration>Clk Fwd</spirit:enumeration>
      <spirit:enumeration>Input Clock</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_pairs_018dc9ad</spirit:name>
      <spirit:enumeration spirit:text="Data">Data</spirit:enumeration>
      <spirit:enumeration spirit:text="Strobe/Clock">Strobe</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_pairs_04260eb3</spirit:name>
      <spirit:enumeration spirit:text="Data">Data</spirit:enumeration>
      <spirit:enumeration spirit:text="Input Clock">Input Clock</spirit:enumeration>
      <spirit:enumeration spirit:text="Strobe/Clock">Strobe</spirit:enumeration>
      <spirit:enumeration spirit:text="Clk Fwd">Clk Fwd</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_pairs_36e67e1b</spirit:name>
      <spirit:enumeration spirit:text="RX_ONLY">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_pairs_3e3068fc</spirit:name>
      <spirit:enumeration spirit:text="Data">Data</spirit:enumeration>
      <spirit:enumeration spirit:text="Strobe/Clock">Strobe</spirit:enumeration>
      <spirit:enumeration spirit:text="Strobe/Clock_P">Strobe_P</spirit:enumeration>
      <spirit:enumeration spirit:text="Strobe/Clock_N">Strobe_N</spirit:enumeration>
      <spirit:enumeration spirit:text="INV_Strobe/Clock_P">INV_Strobe_P</spirit:enumeration>
      <spirit:enumeration spirit:text="INV_Strobe/Clock_N">INV_Strobe_N</spirit:enumeration>
      <spirit:enumeration spirit:text="Clk Fwd">Clk Fwd</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_pairs_57137254</spirit:name>
      <spirit:enumeration spirit:text="None">NONE</spirit:enumeration>
      <spirit:enumeration spirit:text="Differential">DIFF</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_pairs_6c14c626</spirit:name>
      <spirit:enumeration spirit:text="MIPI">MIPI</spirit:enumeration>
      <spirit:enumeration spirit:text="Start From Scratch">None</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_pairs_81ef286a</spirit:name>
      <spirit:enumeration spirit:text="TX">TX</spirit:enumeration>
      <spirit:enumeration spirit:text="RX">RX</spirit:enumeration>
      <spirit:enumeration spirit:text="BIDIR(Beta)">BIDIR</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_pairs_9ac6675d</spirit:name>
      <spirit:enumeration spirit:text="Single-ended">SINGLE</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_pairs_a9078966</spirit:name>
      <spirit:enumeration spirit:text="Clock_Capable_Pin">IBUF_TO_PLL</spirit:enumeration>
      <spirit:enumeration spirit:text="Fabric(Driven by BUFG)">BUFG_TO_PLL</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_pairs_ab6c69d3</spirit:name>
      <spirit:enumeration spirit:text="Differential">DIFF</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_pairs_b03d74cc</spirit:name>
      <spirit:enumeration spirit:text="Center DDR Strobe/Clock">3</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_pairs_b406f54e</spirit:name>
      <spirit:enumeration spirit:text="Serialized">0</spirit:enumeration>
      <spirit:enumeration spirit:text="Combinatorial">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_pairs_b757a05a</spirit:name>
      <spirit:enumeration spirit:text="Data">Data</spirit:enumeration>
      <spirit:enumeration spirit:text="Clk Fwd">Clk Fwd</spirit:enumeration>
      <spirit:enumeration spirit:text="Strobe/Clock">Strobe</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_pairs_b98bf275</spirit:name>
      <spirit:enumeration spirit:text="FALSE">0</spirit:enumeration>
      <spirit:enumeration spirit:text="TRUE">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_pairs_ccc64b8e</spirit:name>
      <spirit:enumeration spirit:text="FIXED">0</spirit:enumeration>
      <spirit:enumeration spirit:text="VARIABLE">1</spirit:enumeration>
      <spirit:enumeration spirit:text="VAR_LOAD">2</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_pairs_f78a0c67</spirit:name>
      <spirit:enumeration spirit:text="None">NONE</spirit:enumeration>
      <spirit:enumeration spirit:text="RX">RX</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_pairs_f8ef0539</spirit:name>
      <spirit:enumeration spirit:text="Differential">DIFF</spirit:enumeration>
      <spirit:enumeration spirit:text="Single-ended">SINGLE</spirit:enumeration>
    </spirit:choice>
  </spirit:choices>
  <spirit:fileSets>
    <spirit:fileSet>
      <spirit:name>xilinx_anylanguagebehavioralsimulation_view_fileset</spirit:name>
      <spirit:file>
        <spirit:name>../../../../../../ipshared/1aa5/hdl/high_speed_selectio_wiz_v3_6_rfs.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:userFileType>USED_IN_ipstatic</spirit:userFileType>
        <spirit:logicalName>high_speed_selectio_wiz_v3_6_9</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>hdl/bd_d10d_phy_0_hssio_rx_mipi_iobuf_rx.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>bd_d10d_phy_0_hssio_rx_hssio_wiz_top.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>bd_d10d_phy_0_hssio_rx_high_speed_selectio_wiz_v3_6_9.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:exportedName>bd_d10d_phy_0_hssio_rx_high_speed_selectio_wiz_v3_6_9</spirit:exportedName>
      </spirit:file>
    </spirit:fileSet>
    <spirit:fileSet>
      <spirit:name>xilinx_anylanguagesynthesis_view_fileset</spirit:name>
      <spirit:file>
        <spirit:name>../../../../../../ipshared/1aa5/hdl/high_speed_selectio_wiz_v3_6_rfs.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:logicalName>high_speed_selectio_wiz_v3_6_9</spirit:logicalName>
      </spirit:file>
      <spirit:file>
        <spirit:name>hdl/bd_d10d_phy_0_hssio_rx_mipi_iobuf_rx.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>bd_d10d_phy_0_hssio_rx_hssio_wiz_top.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>bd_d10d_phy_0_hssio_rx.xdc</spirit:name>
        <spirit:userFileType>xdc</spirit:userFileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>bd_d10d_phy_0_hssio_rx_ooc.xdc</spirit:name>
        <spirit:userFileType>xdc</spirit:userFileType>
        <spirit:userFileType>USED_IN_implementation</spirit:userFileType>
        <spirit:userFileType>USED_IN_out_of_context</spirit:userFileType>
        <spirit:userFileType>USED_IN_synthesis</spirit:userFileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>bd_d10d_phy_0_hssio_rx_high_speed_selectio_wiz_v3_6_9.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:exportedName>bd_d10d_phy_0_hssio_rx_high_speed_selectio_wiz_v3_6_9</spirit:exportedName>
      </spirit:file>
    </spirit:fileSet>
    <spirit:fileSet>
      <spirit:name>xilinx_verilogsimulationwrapper_view_fileset</spirit:name>
      <spirit:file>
        <spirit:name>sim/bd_d10d_phy_0_hssio_rx.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:logicalName>xil_defaultlib</spirit:logicalName>
      </spirit:file>
    </spirit:fileSet>
    <spirit:fileSet>
      <spirit:name>xilinx_verilogsynthesiswrapper_view_fileset</spirit:name>
      <spirit:file>
        <spirit:name>synth/bd_d10d_phy_0_hssio_rx.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:logicalName>xil_defaultlib</spirit:logicalName>
      </spirit:file>
    </spirit:fileSet>
  </spirit:fileSets>
  <spirit:description>The High Speed SelectIO Wizard creates a HDL file (Verilog ) that contains IO and clocking logic such as RX/TX_BITSLICE, BITSLICE_CONTROL and PLL blocks customized to the user&apos;s interface requirements. Pin LOC update in this wizard updates the RTL to provide required connectivity among blocks</spirit:description>
  <spirit:parameters>
    <spirit:parameter>
      <spirit:name>Component_Name</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.Component_Name" spirit:order="2">bd_d10d_phy_0_hssio_rx</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>HSSIO_VALIDATE</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.HSSIO_VALIDATE" spirit:order="3">high_speed_selectio_wiz_v3_6</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>DIFF_IO_T</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.DIFF_IO_T" spirit:order="4">DIFF_TERM_ADV</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>DIFF_IO_P</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.DIFF_IO_P" spirit:order="5">PRE_EMPHASIS</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>EXDES_INST</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.EXDES_INST" spirit:choiceRef="choice_list_8af5a703" spirit:order="6">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>APPEND_PIN_NO</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.APPEND_PIN_NO" spirit:choiceRef="choice_pairs_b98bf275" spirit:order="7">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PLL_SHARING</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.PLL_SHARING" spirit:choiceRef="choice_list_8af5a703" spirit:order="8">1</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PLL_PHASE_MODE</spirit:name>
      <spirit:displayName>PLL Phase Shift Mode</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PLL_PHASE_MODE" spirit:choiceRef="choice_list_281f0d3b" spirit:order="9">LATENCY</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>INIT_VAL</spirit:name>
      <spirit:displayName>INIT_VAL</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.INIT_VAL" spirit:choiceRef="choice_list_8af5a703" spirit:order="10">1</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PRESET</spirit:name>
      <spirit:displayName>HSSIO preset</spirit:displayName>
      <spirit:description>You may select a template configuration preset to pre-populate the corresponding template</spirit:description>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PRESET" spirit:choiceRef="choice_pairs_6c14c626" spirit:order="11">None</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PLL_LOCS</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PLL_LOCS" spirit:order="12">PLL_X0Y6 PLL_X0Y7</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>TEMPLATE</spirit:name>
      <spirit:displayName>Template</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.TEMPLATE" spirit:order="13" spirit:minimum="0" spirit:maximum="2" spirit:rangeType="long">2</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BUS_DIR</spirit:name>
      <spirit:displayName>Bus Direction</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BUS_DIR" spirit:choiceRef="choice_pairs_36e67e1b" spirit:order="14">1</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BUS_DIR">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>FIFO_RD_EN_CONTROL</spirit:name>
      <spirit:displayName>FIFO Read Enable User Control</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.FIFO_RD_EN_CONTROL" spirit:choiceRef="choice_pairs_b98bf275" spirit:order="15">1</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PLL0_DATA_SPEED</spirit:name>
      <spirit:displayName>Interface Speed</spirit:displayName>
      <spirit:value spirit:format="float" spirit:resolve="user" spirit:id="PARAM_VALUE.PLL0_DATA_SPEED" spirit:order="16" spirit:minimum="375.00" spirit:maximum="2650.00">1500.00</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>MIPI_RX_DATA_SPEED</spirit:name>
      <spirit:displayName>Interface Speed</spirit:displayName>
      <spirit:value spirit:format="float" spirit:resolve="user" spirit:id="PARAM_VALUE.MIPI_RX_DATA_SPEED" spirit:order="17" spirit:minimum="80.00" spirit:maximum="2650.00">1440</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PLL0_INPUT_CLK_FREQ</spirit:name>
      <spirit:displayName>PLL Input Clk Frequency</spirit:displayName>
      <spirit:value spirit:format="float" spirit:resolve="user" spirit:id="PARAM_VALUE.PLL0_INPUT_CLK_FREQ" spirit:choiceRef="choice_list_cfd7875f" spirit:order="18">200.000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PLL0_RX_EXTERNAL_CLK_TO_DATA</spirit:name>
      <spirit:displayName>RX External Clock and Data</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.PLL0_RX_EXTERNAL_CLK_TO_DATA" spirit:choiceRef="choice_pairs_b03d74cc" spirit:order="19">3</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.PLL0_RX_EXTERNAL_CLK_TO_DATA">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>EN_ADV_STRB_SEL</spirit:name>
      <spirit:displayName>Enable Advanced Strobe/Clock Selection</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.EN_ADV_STRB_SEL" spirit:choiceRef="choice_pairs_b98bf275" spirit:order="20">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>ENABLE_PLL0_PLLOUTFB</spirit:name>
      <spirit:displayName>Enable PLL CLKFBOUT</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.ENABLE_PLL0_PLLOUTFB" spirit:choiceRef="choice_pairs_b98bf275" spirit:order="21">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PLL0_PLLOUTFB</spirit:name>
      <spirit:displayName>PLL CLKFBOUT</spirit:displayName>
      <spirit:value spirit:format="float" spirit:resolve="user" spirit:id="PARAM_VALUE.PLL0_PLLOUTFB" spirit:order="22">100.00</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.PLL0_PLLOUTFB">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PLL0_PLLOUT0</spirit:name>
      <spirit:displayName>PLL CLKOUT0</spirit:displayName>
      <spirit:value spirit:format="float" spirit:resolve="user" spirit:id="PARAM_VALUE.PLL0_PLLOUT0" spirit:order="23">187.500</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.PLL0_PLLOUT0">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>RIU_FROM_PLL</spirit:name>
      <spirit:displayName>Generate RIU Clock from PLL</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.RIU_FROM_PLL" spirit:choiceRef="choice_pairs_b98bf275" spirit:order="24">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>ENABLE_PLL0_PLLOUT1</spirit:name>
      <spirit:displayName>Enable PLL CLKOUT1</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.ENABLE_PLL0_PLLOUT1" spirit:choiceRef="choice_pairs_b98bf275" spirit:order="25">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PLL0_PLLOUT1</spirit:name>
      <spirit:displayName>PLL CLKOUT1</spirit:displayName>
      <spirit:value spirit:format="float" spirit:resolve="user" spirit:id="PARAM_VALUE.PLL0_PLLOUT1" spirit:choiceRef="choice_list_0c04cb16" spirit:order="26">1000.00</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.PLL0_PLLOUT1">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>EN_IBUF_CLKOUT</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.EN_IBUF_CLKOUT" spirit:choiceRef="choice_pairs_b98bf275" spirit:order="27">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.EN_IBUF_CLKOUT">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PLL0_FIFO_WRITE_CLK_OUT</spirit:name>
      <spirit:displayName>Enable FIFO WRITE CLKOUT</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.PLL0_FIFO_WRITE_CLK_OUT" spirit:choiceRef="choice_pairs_b98bf275" spirit:order="28">1</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.PLL0_FIFO_WRITE_CLK_OUT">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PLL0_CLK_SOURCE</spirit:name>
      <spirit:displayName>PLL Clock Source</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PLL0_CLK_SOURCE" spirit:choiceRef="choice_pairs_a9078966" spirit:order="29">BUFG_TO_PLL</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.PLL0_CLK_SOURCE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>SERIALIZATION_FACTOR</spirit:name>
      <spirit:displayName>Bitslice Serialization Factor</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.SERIALIZATION_FACTOR" spirit:choiceRef="choice_list_d8920bdd" spirit:order="30">8</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.SERIALIZATION_FACTOR">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>RX_DELAY_CASCADE</spirit:name>
      <spirit:displayName>Rx Delay Cascade</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.RX_DELAY_CASCADE" spirit:choiceRef="choice_pairs_b98bf275" spirit:order="31">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>RX_DELAY_MODE</spirit:name>
      <spirit:displayName>RX Delay Mode</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.RX_DELAY_MODE" spirit:choiceRef="choice_list_14e37531" spirit:order="32">TIME</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.RX_DELAY_MODE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>RX_DELAY_TYPE</spirit:name>
      <spirit:displayName>RX Delay Type</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.RX_DELAY_TYPE" spirit:choiceRef="choice_pairs_ccc64b8e" spirit:order="33">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>RX_DELAY_VALUE</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.RX_DELAY_VALUE" spirit:order="34" spirit:minimum="0" spirit:maximum="1100" spirit:rangeType="long">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>TX_DELAY_TYPE</spirit:name>
      <spirit:displayName>TX Delay Type</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.TX_DELAY_TYPE" spirit:choiceRef="choice_pairs_ccc64b8e" spirit:order="35">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.TX_DELAY_TYPE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>TX_DELAY_VALUE</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.TX_DELAY_VALUE" spirit:order="36" spirit:minimum="0" spirit:maximum="1100" spirit:rangeType="long">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.TX_DELAY_VALUE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>CLK_FWD_PHASE</spirit:name>
      <spirit:displayName>Clock Forward Phase</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.CLK_FWD_PHASE" spirit:choiceRef="choice_list_598304d0" spirit:order="37">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.CLK_FWD_PHASE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>TX_DATA_PHASE</spirit:name>
      <spirit:displayName>TX Data Phase</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.TX_DATA_PHASE" spirit:choiceRef="choice_list_598304d0" spirit:order="38">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="generated" xilinx:id="PARAM_ENABLEMENT.TX_DATA_PHASE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BANK</spirit:name>
      <spirit:displayName>Bank</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BANK" spirit:choiceRef="choice_list_a134928a" spirit:order="39">66_(HP)_(Half Bank)</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>DIFFERENTIAL_IO_STD</spirit:name>
      <spirit:displayName>Differential IO Std</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.DIFFERENTIAL_IO_STD" spirit:choiceRef="choice_list_e03d9dac" spirit:order="40">MIPI_DPHY_DCI</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.DIFFERENTIAL_IO_STD">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>DIFFERENTIAL_IO_TERMINATION</spirit:name>
      <spirit:displayName>Differential Termination</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.DIFFERENTIAL_IO_TERMINATION" spirit:choiceRef="choice_list_de014f6a" spirit:order="41">TERM_100</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>SINGLE_IO_STD</spirit:name>
      <spirit:displayName>Single IO Std</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.SINGLE_IO_STD" spirit:choiceRef="choice_list_c8951bc1" spirit:order="42">NONE</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.SINGLE_IO_STD">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>SINGLE_IO_TERMINATION</spirit:name>
      <spirit:displayName>Single Ended Termination</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.SINGLE_IO_TERMINATION" spirit:choiceRef="choice_list_c8951bc1" spirit:order="43">NONE</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.SINGLE_IO_TERMINATION">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>TX_PRE_EMPHASIS_S</spirit:name>
      <spirit:displayName>Single Ended Tx Pre-Emphasis</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.TX_PRE_EMPHASIS_S" spirit:choiceRef="choice_list_c8951bc1" spirit:order="44">NONE</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.TX_PRE_EMPHASIS_S">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>TX_PRE_EMPHASIS_D</spirit:name>
      <spirit:displayName>Differential Tx Pre-Emphasis</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.TX_PRE_EMPHASIS_D" spirit:choiceRef="choice_list_c8951bc1" spirit:order="45">NONE</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.TX_PRE_EMPHASIS_D">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>OUTPUT_IMPEDANCE</spirit:name>
      <spirit:displayName>Output Impedance</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.OUTPUT_IMPEDANCE" spirit:choiceRef="choice_list_3b26a2ea" spirit:order="46">RDRV_NONE_NONE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>RX_EQUALIZATION_S</spirit:name>
      <spirit:displayName>Single Ended Rx Equalization</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.RX_EQUALIZATION_S" spirit:choiceRef="choice_list_c8951bc1" spirit:order="47">NONE</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.RX_EQUALIZATION_S">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>RX_EQUALIZATION_D</spirit:name>
      <spirit:displayName>Differential Rx Equalization</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.RX_EQUALIZATION_D" spirit:choiceRef="choice_list_17d2dc5b" spirit:order="48">EQ_NONE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>ENABLE_RIU_INTERFACE</spirit:name>
      <spirit:displayName>RIU Interface</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.ENABLE_RIU_INTERFACE" spirit:choiceRef="choice_pairs_b98bf275" spirit:order="49">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>ENABLE_RIU_SPLIT</spirit:name>
      <spirit:displayName>RIU Split</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.ENABLE_RIU_SPLIT" spirit:choiceRef="choice_pairs_b98bf275" spirit:order="50">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>ENABLE_PLL_DRP_PORTS</spirit:name>
      <spirit:displayName>Enable DRP ports of PLL</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.ENABLE_PLL_DRP_PORTS" spirit:choiceRef="choice_pairs_b98bf275" spirit:order="51">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>ENABLE_N_PINS</spirit:name>
      <spirit:displayName>Enable N-side RX bitslice</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.ENABLE_N_PINS" spirit:choiceRef="choice_pairs_b98bf275" spirit:order="52">1</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>ENABLE_BITSLIP</spirit:name>
      <spirit:displayName>Enable BitSlip</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.ENABLE_BITSLIP" spirit:choiceRef="choice_pairs_b98bf275" spirit:order="53">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>ENABLE_DATA_BITSLIP</spirit:name>
      <spirit:displayName>Enable Data BitSlip</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.ENABLE_DATA_BITSLIP" spirit:choiceRef="choice_pairs_b98bf275" spirit:order="54">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.ENABLE_DATA_BITSLIP">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BITSLIP_MODE</spirit:name>
      <spirit:displayName>Bitslip Mode</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BITSLIP_MODE" spirit:choiceRef="choice_list_997181f0" spirit:order="55">SLIP_PER_BIT</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BITSLIP_MODE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BITSLIP_VAL</spirit:name>
      <spirit:displayName>Bitslip Training Pattern</spirit:displayName>
      <spirit:value spirit:format="bitString" spirit:resolve="user" spirit:id="PARAM_VALUE.BITSLIP_VAL" spirit:order="56" spirit:bitStringLength="8">0x2C</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BITSLIP_VAL">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>ENABLE_TX_TRI</spirit:name>
      <spirit:displayName>Enable TX 3-State</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.ENABLE_TX_TRI" spirit:choiceRef="choice_pairs_b98bf275" spirit:order="57">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="generated" xilinx:id="PARAM_ENABLEMENT.ENABLE_TX_TRI">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>DATA_TRI</spirit:name>
      <spirit:displayName>Data 3-State</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.DATA_TRI" spirit:choiceRef="choice_pairs_b406f54e" spirit:order="58">1</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.DATA_TRI">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>CLOCK_TRI</spirit:name>
      <spirit:displayName>Strobe/Clock 3-State</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.CLOCK_TRI" spirit:choiceRef="choice_pairs_b406f54e" spirit:order="59">1</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.CLOCK_TRI">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>EN_MULTI_INTF_PORTS</spirit:name>
      <spirit:displayName>Enable Ports to Connect Multiple Interfaces</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.EN_MULTI_INTF_PORTS" spirit:choiceRef="choice_pairs_b98bf275" spirit:order="60">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_SELECT_ALL_PINS</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_SELECT_ALL_PINS" spirit:order="61">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_DESELECT_ALL_PINS</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_DESELECT_ALL_PINS" spirit:order="62">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_SELECT_ALL_PINS</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_SELECT_ALL_PINS" spirit:order="63">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_DESELECT_ALL_PINS</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_DESELECT_ALL_PINS" spirit:order="64">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_SELECT_ALL_PINS</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_SELECT_ALL_PINS" spirit:order="65">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_DESELECT_ALL_PINS</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_DESELECT_ALL_PINS" spirit:order="66">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_SELECT_ALL_PINS</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_SELECT_ALL_PINS" spirit:order="67">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_DESELECT_ALL_PINS</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_DESELECT_ALL_PINS" spirit:order="68">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN0_SIGNAL_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN0_SIGNAL_NAME" spirit:order="69">clk_rxp</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN1_SIGNAL_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN1_SIGNAL_NAME" spirit:order="70">clk_rxn</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN2_SIGNAL_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN2_SIGNAL_NAME" spirit:order="71">data_rxp0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN3_SIGNAL_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN3_SIGNAL_NAME" spirit:order="72">data_rxn0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN4_SIGNAL_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN4_SIGNAL_NAME" spirit:order="73">data_rxp1</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN5_SIGNAL_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN5_SIGNAL_NAME" spirit:order="74">data_rxn1</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN6_SIGNAL_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN6_SIGNAL_NAME" spirit:order="75">data_rxp2</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN7_SIGNAL_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN7_SIGNAL_NAME" spirit:order="76">data_rxn2</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN8_SIGNAL_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN8_SIGNAL_NAME" spirit:order="77">data_rxp3</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN9_SIGNAL_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN9_SIGNAL_NAME" spirit:order="78">data_rxn3</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN10_SIGNAL_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN10_SIGNAL_NAME" spirit:order="79">bg0_pin10</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN10_SIGNAL_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN11_SIGNAL_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN11_SIGNAL_NAME" spirit:order="80">bg0_pin11</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN11_SIGNAL_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN12_SIGNAL_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN12_SIGNAL_NAME" spirit:order="81">bg0_pin12</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN12_SIGNAL_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN0_LOC</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN0_LOC" spirit:order="82">G1</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN0_LOC">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN1_LOC</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN1_LOC" spirit:order="83">F1</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN1_LOC">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN2_LOC</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN2_LOC" spirit:order="84">E1</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN2_LOC">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN3_LOC</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN3_LOC" spirit:order="85">D1</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN3_LOC">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN4_LOC</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN4_LOC" spirit:order="86">F2</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN4_LOC">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN5_LOC</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN5_LOC" spirit:order="87">E2</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN5_LOC">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN6_LOC</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN6_LOC" spirit:order="88">G3</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN6_LOC">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN7_LOC</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN7_LOC" spirit:order="89">F3</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN7_LOC">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN8_LOC</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN8_LOC" spirit:order="90">E4</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN8_LOC">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN9_LOC</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN9_LOC" spirit:order="91">E3</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN9_LOC">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN10_LOC</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN10_LOC" spirit:order="92">G4</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN10_LOC">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN11_LOC</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN11_LOC" spirit:order="93"/>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN11_LOC">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN12_LOC</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN12_LOC" spirit:order="94"/>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN12_LOC">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN0_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN0_NAME" spirit:order="95">IO_L1P_T0L_N0_DBC_66</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN0_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN1_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN1_NAME" spirit:order="96">IO_L1N_T0L_N1_DBC_66</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN1_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN2_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN2_NAME" spirit:order="97">IO_L2P_T0L_N2_66</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN2_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN3_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN3_NAME" spirit:order="98">IO_L2N_T0L_N3_66</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN3_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN4_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN4_NAME" spirit:order="99">IO_L3P_T0L_N4_AD15P_66</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN4_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN5_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN5_NAME" spirit:order="100">IO_L3N_T0L_N5_AD15N_66</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN5_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN6_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN6_NAME" spirit:order="101">IO_L4P_T0U_N6_DBC_AD7P_66</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN6_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN7_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN7_NAME" spirit:order="102">IO_L4N_T0U_N7_DBC_AD7N_66</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN7_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN8_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN8_NAME" spirit:order="103">IO_L5P_T0U_N8_AD14P_66</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN8_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN9_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN9_NAME" spirit:order="104">IO_L5N_T0U_N9_AD14N_66</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN9_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN10_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN10_NAME" spirit:order="105">IO_T0U_N12_VRP_66</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN10_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN11_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN11_NAME" spirit:order="106"/>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN11_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN12_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN12_NAME" spirit:order="107"/>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN12_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN0_BUS_DIR</spirit:name>
      <spirit:displayName>bus dir1</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN0_BUS_DIR" spirit:choiceRef="choice_list_4e89caad" spirit:order="108">RX</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN1_BUS_DIR</spirit:name>
      <spirit:displayName>bus dir2</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN1_BUS_DIR" spirit:choiceRef="choice_pairs_81ef286a" spirit:order="109">RX</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN1_BUS_DIR">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN2_BUS_DIR</spirit:name>
      <spirit:displayName>bus dir3</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN2_BUS_DIR" spirit:choiceRef="choice_list_4e89caad" spirit:order="110">RX</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN3_BUS_DIR</spirit:name>
      <spirit:displayName>bus dir4</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN3_BUS_DIR" spirit:choiceRef="choice_pairs_81ef286a" spirit:order="111">RX</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN3_BUS_DIR">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN4_BUS_DIR</spirit:name>
      <spirit:displayName>bus dir5</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN4_BUS_DIR" spirit:choiceRef="choice_list_4e89caad" spirit:order="112">RX</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN5_BUS_DIR</spirit:name>
      <spirit:displayName>bus dir6</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN5_BUS_DIR" spirit:choiceRef="choice_pairs_81ef286a" spirit:order="113">RX</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN5_BUS_DIR">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN6_BUS_DIR</spirit:name>
      <spirit:displayName>bus dir7</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN6_BUS_DIR" spirit:choiceRef="choice_list_4e89caad" spirit:order="114">RX</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN7_BUS_DIR</spirit:name>
      <spirit:displayName>bus dir8</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN7_BUS_DIR" spirit:choiceRef="choice_pairs_81ef286a" spirit:order="115">RX</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN7_BUS_DIR">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN8_BUS_DIR</spirit:name>
      <spirit:displayName>bus dir9</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN8_BUS_DIR" spirit:choiceRef="choice_list_4e89caad" spirit:order="116">RX</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN9_BUS_DIR</spirit:name>
      <spirit:displayName>bus dir10</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN9_BUS_DIR" spirit:choiceRef="choice_pairs_81ef286a" spirit:order="117">RX</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN9_BUS_DIR">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN10_BUS_DIR</spirit:name>
      <spirit:displayName>bus dir11</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN10_BUS_DIR" spirit:choiceRef="choice_pairs_81ef286a" spirit:order="118">RX</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN10_BUS_DIR">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN11_BUS_DIR</spirit:name>
      <spirit:displayName>bus dir12</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN11_BUS_DIR" spirit:choiceRef="choice_pairs_81ef286a" spirit:order="119">RX</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN11_BUS_DIR">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN12_BUS_DIR</spirit:name>
      <spirit:displayName>bus dir13</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN12_BUS_DIR" spirit:choiceRef="choice_pairs_81ef286a" spirit:order="120">RX</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN12_BUS_DIR">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN0_DATA_STROBE</spirit:name>
      <spirit:displayName>Data Strobe0</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN0_DATA_STROBE" spirit:choiceRef="choice_pairs_018dc9ad" spirit:order="121">Strobe</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN1_DATA_STROBE</spirit:name>
      <spirit:displayName>Data Strobe1</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN1_DATA_STROBE" spirit:choiceRef="choice_pairs_b757a05a" spirit:order="122">Strobe</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN1_DATA_STROBE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN2_DATA_STROBE</spirit:name>
      <spirit:displayName>Data Strobe2</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN2_DATA_STROBE" spirit:choiceRef="choice_list_65aded21" spirit:order="123">Data</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN3_DATA_STROBE</spirit:name>
      <spirit:displayName>Data Strobe3</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN3_DATA_STROBE" spirit:choiceRef="choice_list_568bd184" spirit:order="124">Data</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN3_DATA_STROBE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN4_DATA_STROBE</spirit:name>
      <spirit:displayName>Data Strobe4</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN4_DATA_STROBE" spirit:choiceRef="choice_list_65aded21" spirit:order="125">Data</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN5_DATA_STROBE</spirit:name>
      <spirit:displayName>Data Strobe5</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN5_DATA_STROBE" spirit:choiceRef="choice_list_568bd184" spirit:order="126">Data</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN5_DATA_STROBE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN6_DATA_STROBE</spirit:name>
      <spirit:displayName>Data Strobe6</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN6_DATA_STROBE" spirit:choiceRef="choice_pairs_018dc9ad" spirit:order="127">Data</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN7_DATA_STROBE</spirit:name>
      <spirit:displayName>Data Strobe7</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN7_DATA_STROBE" spirit:choiceRef="choice_pairs_b757a05a" spirit:order="128">Data</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN7_DATA_STROBE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN8_DATA_STROBE</spirit:name>
      <spirit:displayName>Data Strobe8</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN8_DATA_STROBE" spirit:choiceRef="choice_list_65aded21" spirit:order="129">Data</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN9_DATA_STROBE</spirit:name>
      <spirit:displayName>Data Strobe9</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN9_DATA_STROBE" spirit:choiceRef="choice_list_568bd184" spirit:order="130">Data</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN9_DATA_STROBE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN10_DATA_STROBE</spirit:name>
      <spirit:displayName>Data Strobe10</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN10_DATA_STROBE" spirit:choiceRef="choice_list_568bd184" spirit:order="131">Data</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN10_DATA_STROBE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN11_DATA_STROBE</spirit:name>
      <spirit:displayName>Data Strobe11</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN11_DATA_STROBE" spirit:choiceRef="choice_list_568bd184" spirit:order="132">Data</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN11_DATA_STROBE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN12_DATA_STROBE</spirit:name>
      <spirit:displayName>Data Strobe12</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN12_DATA_STROBE" spirit:choiceRef="choice_list_568bd184" spirit:order="133">Data</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN12_DATA_STROBE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN0_SIG_TYPE</spirit:name>
      <spirit:displayName>Bus Sig Type1</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN0_SIG_TYPE" spirit:choiceRef="choice_pairs_ab6c69d3" spirit:order="134">DIFF</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN0_SIG_TYPE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN1_SIG_TYPE</spirit:name>
      <spirit:displayName>Bus Sig Type2</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN1_SIG_TYPE" spirit:choiceRef="choice_pairs_f8ef0539" spirit:order="135">DIFF</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN1_SIG_TYPE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN2_SIG_TYPE</spirit:name>
      <spirit:displayName>Bus Sig Type3</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN2_SIG_TYPE" spirit:choiceRef="choice_pairs_ab6c69d3" spirit:order="136">DIFF</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN2_SIG_TYPE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN3_SIG_TYPE</spirit:name>
      <spirit:displayName>Bus Sig Type4</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN3_SIG_TYPE" spirit:choiceRef="choice_pairs_f8ef0539" spirit:order="137">DIFF</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN3_SIG_TYPE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN4_SIG_TYPE</spirit:name>
      <spirit:displayName>Bus Sig Type5</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN4_SIG_TYPE" spirit:choiceRef="choice_pairs_ab6c69d3" spirit:order="138">DIFF</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN4_SIG_TYPE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN5_SIG_TYPE</spirit:name>
      <spirit:displayName>Bus Sig Type6</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN5_SIG_TYPE" spirit:choiceRef="choice_pairs_f8ef0539" spirit:order="139">DIFF</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN5_SIG_TYPE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN6_SIG_TYPE</spirit:name>
      <spirit:displayName>Bus Sig Type7</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN6_SIG_TYPE" spirit:choiceRef="choice_pairs_ab6c69d3" spirit:order="140">DIFF</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN6_SIG_TYPE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN7_SIG_TYPE</spirit:name>
      <spirit:displayName>Bus Sig Type8</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN7_SIG_TYPE" spirit:choiceRef="choice_pairs_f8ef0539" spirit:order="141">DIFF</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN7_SIG_TYPE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN8_SIG_TYPE</spirit:name>
      <spirit:displayName>Bus Sig Type9</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN8_SIG_TYPE" spirit:choiceRef="choice_pairs_ab6c69d3" spirit:order="142">DIFF</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN8_SIG_TYPE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN9_SIG_TYPE</spirit:name>
      <spirit:displayName>Bus Sig Type10</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN9_SIG_TYPE" spirit:choiceRef="choice_pairs_f8ef0539" spirit:order="143">DIFF</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN9_SIG_TYPE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN10_SIG_TYPE</spirit:name>
      <spirit:displayName>Bus Sig Type11</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN10_SIG_TYPE" spirit:choiceRef="choice_pairs_f8ef0539" spirit:order="144">SINGLE</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN10_SIG_TYPE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN11_SIG_TYPE</spirit:name>
      <spirit:displayName>Bus Sig Type12</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN11_SIG_TYPE" spirit:choiceRef="choice_pairs_f8ef0539" spirit:order="145">SINGLE</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN11_SIG_TYPE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN12_SIG_TYPE</spirit:name>
      <spirit:displayName>Bus Sig Type13</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN12_SIG_TYPE" spirit:choiceRef="choice_pairs_9ac6675d" spirit:order="146">SINGLE</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN12_SIG_TYPE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>ENABLE_BYTE0_PIN0</spirit:name>
      <spirit:displayName>check box1</spirit:displayName>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.ENABLE_BYTE0_PIN0" spirit:order="147">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>ENABLE_BYTE0_PIN1</spirit:name>
      <spirit:displayName>check box2</spirit:displayName>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.ENABLE_BYTE0_PIN1" spirit:order="148">true</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.ENABLE_BYTE0_PIN1">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>ENABLE_BYTE0_PIN2</spirit:name>
      <spirit:displayName>check box3</spirit:displayName>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.ENABLE_BYTE0_PIN2" spirit:order="149">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>ENABLE_BYTE0_PIN3</spirit:name>
      <spirit:displayName>check box4</spirit:displayName>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.ENABLE_BYTE0_PIN3" spirit:order="150">true</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.ENABLE_BYTE0_PIN3">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>ENABLE_BYTE0_PIN4</spirit:name>
      <spirit:displayName>check box5</spirit:displayName>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.ENABLE_BYTE0_PIN4" spirit:order="151">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>ENABLE_BYTE0_PIN5</spirit:name>
      <spirit:displayName>check box6</spirit:displayName>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.ENABLE_BYTE0_PIN5" spirit:order="152">true</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.ENABLE_BYTE0_PIN5">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>ENABLE_BYTE0_PIN6</spirit:name>
      <spirit:displayName>check box7</spirit:displayName>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.ENABLE_BYTE0_PIN6" spirit:order="153">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>ENABLE_BYTE0_PIN7</spirit:name>
      <spirit:displayName>check box8</spirit:displayName>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.ENABLE_BYTE0_PIN7" spirit:order="154">true</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.ENABLE_BYTE0_PIN7">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>ENABLE_BYTE0_PIN8</spirit:name>
      <spirit:displayName>check box9</spirit:displayName>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.ENABLE_BYTE0_PIN8" spirit:order="155">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>ENABLE_BYTE0_PIN9</spirit:name>
      <spirit:displayName>check box10</spirit:displayName>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.ENABLE_BYTE0_PIN9" spirit:order="156">true</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.ENABLE_BYTE0_PIN9">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>ENABLE_BYTE0_PIN10</spirit:name>
      <spirit:displayName>check box11</spirit:displayName>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.ENABLE_BYTE0_PIN10" spirit:order="157">FALSE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>ENABLE_BYTE0_PIN11</spirit:name>
      <spirit:displayName>check box12</spirit:displayName>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.ENABLE_BYTE0_PIN11" spirit:order="158">FALSE</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.ENABLE_BYTE0_PIN11">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>ENABLE_BYTE0_PIN12</spirit:name>
      <spirit:displayName>check box13</spirit:displayName>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.ENABLE_BYTE0_PIN12" spirit:order="159">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.ENABLE_BYTE0_PIN12">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>ENABLE_BYTE1_PIN0</spirit:name>
      <spirit:displayName>check box1</spirit:displayName>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.ENABLE_BYTE1_PIN0" spirit:order="160">FALSE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>ENABLE_BYTE1_PIN1</spirit:name>
      <spirit:displayName>check box2</spirit:displayName>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.ENABLE_BYTE1_PIN1" spirit:order="161">FALSE</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.ENABLE_BYTE1_PIN1">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>ENABLE_BYTE1_PIN2</spirit:name>
      <spirit:displayName>check box3</spirit:displayName>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.ENABLE_BYTE1_PIN2" spirit:order="162">FALSE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>ENABLE_BYTE1_PIN3</spirit:name>
      <spirit:displayName>check box4</spirit:displayName>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.ENABLE_BYTE1_PIN3" spirit:order="163">FALSE</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.ENABLE_BYTE1_PIN3">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>ENABLE_BYTE1_PIN4</spirit:name>
      <spirit:displayName>check box5</spirit:displayName>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.ENABLE_BYTE1_PIN4" spirit:order="164">FALSE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>ENABLE_BYTE1_PIN5</spirit:name>
      <spirit:displayName>check box6</spirit:displayName>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.ENABLE_BYTE1_PIN5" spirit:order="165">FALSE</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.ENABLE_BYTE1_PIN5">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>ENABLE_BYTE1_PIN6</spirit:name>
      <spirit:displayName>check box7</spirit:displayName>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.ENABLE_BYTE1_PIN6" spirit:order="166">FALSE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>ENABLE_BYTE1_PIN7</spirit:name>
      <spirit:displayName>check box8</spirit:displayName>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.ENABLE_BYTE1_PIN7" spirit:order="167">FALSE</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.ENABLE_BYTE1_PIN7">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>ENABLE_BYTE1_PIN8</spirit:name>
      <spirit:displayName>check box9</spirit:displayName>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.ENABLE_BYTE1_PIN8" spirit:order="168">FALSE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>ENABLE_BYTE1_PIN9</spirit:name>
      <spirit:displayName>check box10</spirit:displayName>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.ENABLE_BYTE1_PIN9" spirit:order="169">FALSE</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.ENABLE_BYTE1_PIN9">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>ENABLE_BYTE1_PIN10</spirit:name>
      <spirit:displayName>check box11</spirit:displayName>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.ENABLE_BYTE1_PIN10" spirit:order="170">FALSE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>ENABLE_BYTE1_PIN11</spirit:name>
      <spirit:displayName>check box12</spirit:displayName>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.ENABLE_BYTE1_PIN11" spirit:order="171">FALSE</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.ENABLE_BYTE1_PIN11">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>ENABLE_BYTE1_PIN12</spirit:name>
      <spirit:displayName>check box13</spirit:displayName>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.ENABLE_BYTE1_PIN12" spirit:order="172">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.ENABLE_BYTE1_PIN12">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN0_BUS_DIR</spirit:name>
      <spirit:displayName>bus dir1</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN0_BUS_DIR" spirit:choiceRef="choice_pairs_81ef286a" spirit:order="173">RX</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN0_BUS_DIR">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN1_BUS_DIR</spirit:name>
      <spirit:displayName>bus dir2</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN1_BUS_DIR" spirit:choiceRef="choice_pairs_81ef286a" spirit:order="174">RX</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN1_BUS_DIR">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN2_BUS_DIR</spirit:name>
      <spirit:displayName>bus dir3</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN2_BUS_DIR" spirit:choiceRef="choice_pairs_81ef286a" spirit:order="175">RX</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN2_BUS_DIR">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN3_BUS_DIR</spirit:name>
      <spirit:displayName>bus dir4</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN3_BUS_DIR" spirit:choiceRef="choice_pairs_81ef286a" spirit:order="176">RX</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN3_BUS_DIR">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN4_BUS_DIR</spirit:name>
      <spirit:displayName>bus dir5</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN4_BUS_DIR" spirit:choiceRef="choice_pairs_81ef286a" spirit:order="177">RX</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN4_BUS_DIR">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN5_BUS_DIR</spirit:name>
      <spirit:displayName>bus dir6</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN5_BUS_DIR" spirit:choiceRef="choice_pairs_81ef286a" spirit:order="178">RX</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN5_BUS_DIR">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN6_BUS_DIR</spirit:name>
      <spirit:displayName>bus dir7</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN6_BUS_DIR" spirit:choiceRef="choice_pairs_81ef286a" spirit:order="179">RX</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN6_BUS_DIR">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN7_BUS_DIR</spirit:name>
      <spirit:displayName>bus dir8</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN7_BUS_DIR" spirit:choiceRef="choice_pairs_81ef286a" spirit:order="180">RX</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN7_BUS_DIR">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN8_BUS_DIR</spirit:name>
      <spirit:displayName>bus dir9</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN8_BUS_DIR" spirit:choiceRef="choice_pairs_81ef286a" spirit:order="181">RX</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN8_BUS_DIR">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN9_BUS_DIR</spirit:name>
      <spirit:displayName>bus dir10</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN9_BUS_DIR" spirit:choiceRef="choice_pairs_81ef286a" spirit:order="182">RX</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN9_BUS_DIR">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN10_BUS_DIR</spirit:name>
      <spirit:displayName>bus dir11</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN10_BUS_DIR" spirit:choiceRef="choice_pairs_81ef286a" spirit:order="183">RX</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN10_BUS_DIR">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN11_BUS_DIR</spirit:name>
      <spirit:displayName>bus dir12</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN11_BUS_DIR" spirit:choiceRef="choice_pairs_81ef286a" spirit:order="184">RX</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN11_BUS_DIR">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN12_BUS_DIR</spirit:name>
      <spirit:displayName>bus dir13</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN12_BUS_DIR" spirit:choiceRef="choice_pairs_81ef286a" spirit:order="185">RX</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN12_BUS_DIR">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN0_SIG_TYPE</spirit:name>
      <spirit:displayName>Bus Sig Type1</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN0_SIG_TYPE" spirit:choiceRef="choice_pairs_f8ef0539" spirit:order="186">SINGLE</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN0_SIG_TYPE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN1_SIG_TYPE</spirit:name>
      <spirit:displayName>Bus Sig Type2</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN1_SIG_TYPE" spirit:choiceRef="choice_pairs_f8ef0539" spirit:order="187">SINGLE</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN1_SIG_TYPE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN2_SIG_TYPE</spirit:name>
      <spirit:displayName>Bus Sig Type3</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN2_SIG_TYPE" spirit:choiceRef="choice_pairs_f8ef0539" spirit:order="188">SINGLE</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN2_SIG_TYPE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN3_SIG_TYPE</spirit:name>
      <spirit:displayName>Bus Sig Type4</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN3_SIG_TYPE" spirit:choiceRef="choice_pairs_f8ef0539" spirit:order="189">SINGLE</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN3_SIG_TYPE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN4_SIG_TYPE</spirit:name>
      <spirit:displayName>Bus Sig Type5</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN4_SIG_TYPE" spirit:choiceRef="choice_pairs_f8ef0539" spirit:order="190">SINGLE</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN4_SIG_TYPE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN5_SIG_TYPE</spirit:name>
      <spirit:displayName>Bus Sig Type6</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN5_SIG_TYPE" spirit:choiceRef="choice_pairs_f8ef0539" spirit:order="191">SINGLE</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN5_SIG_TYPE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN6_SIG_TYPE</spirit:name>
      <spirit:displayName>Bus Sig Type7</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN6_SIG_TYPE" spirit:choiceRef="choice_pairs_f8ef0539" spirit:order="192">SINGLE</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN6_SIG_TYPE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN7_SIG_TYPE</spirit:name>
      <spirit:displayName>Bus Sig Type8</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN7_SIG_TYPE" spirit:choiceRef="choice_pairs_f8ef0539" spirit:order="193">SINGLE</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN7_SIG_TYPE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN8_SIG_TYPE</spirit:name>
      <spirit:displayName>Bus Sig Type9</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN8_SIG_TYPE" spirit:choiceRef="choice_pairs_f8ef0539" spirit:order="194">SINGLE</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN8_SIG_TYPE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN9_SIG_TYPE</spirit:name>
      <spirit:displayName>Bus Sig Type10</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN9_SIG_TYPE" spirit:choiceRef="choice_pairs_f8ef0539" spirit:order="195">SINGLE</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN9_SIG_TYPE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN10_SIG_TYPE</spirit:name>
      <spirit:displayName>Bus Sig Type11</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN10_SIG_TYPE" spirit:choiceRef="choice_pairs_f8ef0539" spirit:order="196">SINGLE</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN10_SIG_TYPE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN11_SIG_TYPE</spirit:name>
      <spirit:displayName>Bus Sig Type12</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN11_SIG_TYPE" spirit:choiceRef="choice_pairs_f8ef0539" spirit:order="197">SINGLE</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN11_SIG_TYPE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN12_SIG_TYPE</spirit:name>
      <spirit:displayName>Bus Sig Type13</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN12_SIG_TYPE" spirit:choiceRef="choice_pairs_9ac6675d" spirit:order="198">SINGLE</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN12_SIG_TYPE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN0_DATA_STROBE</spirit:name>
      <spirit:displayName>Data Strobe13</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN0_DATA_STROBE" spirit:choiceRef="choice_pairs_3e3068fc" spirit:order="199">Data</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN0_DATA_STROBE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN1_DATA_STROBE</spirit:name>
      <spirit:displayName>Data Strobe14</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN1_DATA_STROBE" spirit:choiceRef="choice_pairs_3e3068fc" spirit:order="200">Data</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN1_DATA_STROBE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN2_DATA_STROBE</spirit:name>
      <spirit:displayName>Data Strobe15</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN2_DATA_STROBE" spirit:choiceRef="choice_list_568bd184" spirit:order="201">Data</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN2_DATA_STROBE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN3_DATA_STROBE</spirit:name>
      <spirit:displayName>Data Strobe16</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN3_DATA_STROBE" spirit:choiceRef="choice_list_568bd184" spirit:order="202">Data</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN3_DATA_STROBE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN4_DATA_STROBE</spirit:name>
      <spirit:displayName>Data Strobe17</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN4_DATA_STROBE" spirit:choiceRef="choice_list_568bd184" spirit:order="203">Data</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN4_DATA_STROBE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN5_DATA_STROBE</spirit:name>
      <spirit:displayName>Data Strobe18</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN5_DATA_STROBE" spirit:choiceRef="choice_list_568bd184" spirit:order="204">Data</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN5_DATA_STROBE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN6_DATA_STROBE</spirit:name>
      <spirit:displayName>Data Strobe19</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN6_DATA_STROBE" spirit:choiceRef="choice_pairs_3e3068fc" spirit:order="205">Data</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN6_DATA_STROBE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN7_DATA_STROBE</spirit:name>
      <spirit:displayName>Data Strobe20</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN7_DATA_STROBE" spirit:choiceRef="choice_pairs_3e3068fc" spirit:order="206">Data</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN7_DATA_STROBE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN8_DATA_STROBE</spirit:name>
      <spirit:displayName>Data Strobe21</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN8_DATA_STROBE" spirit:choiceRef="choice_list_76ae9d74" spirit:order="207">Data</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN8_DATA_STROBE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN9_DATA_STROBE</spirit:name>
      <spirit:displayName>Data Strobe22</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN9_DATA_STROBE" spirit:choiceRef="choice_list_76ae9d74" spirit:order="208">Data</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN9_DATA_STROBE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN10_DATA_STROBE</spirit:name>
      <spirit:displayName>Data Strobe23</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN10_DATA_STROBE" spirit:choiceRef="choice_list_76ae9d74" spirit:order="209">Data</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN10_DATA_STROBE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN11_DATA_STROBE</spirit:name>
      <spirit:displayName>Data Strobe24</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN11_DATA_STROBE" spirit:choiceRef="choice_list_76ae9d74" spirit:order="210">Data</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN11_DATA_STROBE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN12_DATA_STROBE</spirit:name>
      <spirit:displayName>Data Strobe25</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN12_DATA_STROBE" spirit:choiceRef="choice_list_568bd184" spirit:order="211">Data</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN12_DATA_STROBE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN0_SIGNAL_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN0_SIGNAL_NAME" spirit:order="212">bg1_pin0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN0_SIGNAL_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN1_SIGNAL_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN1_SIGNAL_NAME" spirit:order="213">bg1_pin1</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN1_SIGNAL_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN2_SIGNAL_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN2_SIGNAL_NAME" spirit:order="214">bg1_pin2</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN2_SIGNAL_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN3_SIGNAL_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN3_SIGNAL_NAME" spirit:order="215">bg1_pin3</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN3_SIGNAL_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN4_SIGNAL_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN4_SIGNAL_NAME" spirit:order="216">bg1_pin4</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN4_SIGNAL_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN5_SIGNAL_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN5_SIGNAL_NAME" spirit:order="217">bg1_pin5</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN5_SIGNAL_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN6_SIGNAL_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN6_SIGNAL_NAME" spirit:order="218">bg1_pin6</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN6_SIGNAL_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN7_SIGNAL_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN7_SIGNAL_NAME" spirit:order="219">bg1_pin7</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN7_SIGNAL_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN8_SIGNAL_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN8_SIGNAL_NAME" spirit:order="220">bg1_pin8</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN8_SIGNAL_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN9_SIGNAL_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN9_SIGNAL_NAME" spirit:order="221">bg1_pin9</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN9_SIGNAL_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN10_SIGNAL_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN10_SIGNAL_NAME" spirit:order="222">bg1_pin10</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN10_SIGNAL_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN11_SIGNAL_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN11_SIGNAL_NAME" spirit:order="223">bg1_pin11</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN11_SIGNAL_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN12_SIGNAL_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN12_SIGNAL_NAME" spirit:order="224">bg1_pin12</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN12_SIGNAL_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN0_LOC</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN0_LOC" spirit:order="225">C1</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN0_LOC">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN1_LOC</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN1_LOC" spirit:order="226">B1</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN1_LOC">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN2_LOC</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN2_LOC" spirit:order="227">A2</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN2_LOC">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN3_LOC</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN3_LOC" spirit:order="228">A1</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN3_LOC">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN4_LOC</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN4_LOC" spirit:order="229">B3</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN4_LOC">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN5_LOC</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN5_LOC" spirit:order="230">A3</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN5_LOC">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN6_LOC</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN6_LOC" spirit:order="231">B4</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN6_LOC">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN7_LOC</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN7_LOC" spirit:order="232">A4</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN7_LOC">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN8_LOC</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN8_LOC" spirit:order="233">D4</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN8_LOC">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN9_LOC</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN9_LOC" spirit:order="234">C4</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN9_LOC">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN10_LOC</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN10_LOC" spirit:order="235">C3</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN10_LOC">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN11_LOC</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN11_LOC" spirit:order="236">C2</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN11_LOC">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN12_LOC</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN12_LOC" spirit:order="237"/>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN12_LOC">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN0_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN0_NAME" spirit:order="238">IO_L7P_T1L_N0_QBC_AD13P_66</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN0_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN1_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN1_NAME" spirit:order="239">IO_L7N_T1L_N1_QBC_AD13N_66</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN1_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN2_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN2_NAME" spirit:order="240">IO_L8P_T1L_N2_AD5P_66</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN2_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN3_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN3_NAME" spirit:order="241">IO_L8N_T1L_N3_AD5N_66</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN3_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN4_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN4_NAME" spirit:order="242">IO_L9P_T1L_N4_AD12P_66</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN4_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN5_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN5_NAME" spirit:order="243">IO_L9N_T1L_N5_AD12N_66</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN5_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN6_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN6_NAME" spirit:order="244">IO_L10P_T1U_N6_QBC_AD4P_66</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN6_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN7_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN7_NAME" spirit:order="245">IO_L10N_T1U_N7_QBC_AD4N_66</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN7_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN8_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN8_NAME" spirit:order="246">IO_L11P_T1U_N8_GC_66</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN8_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN9_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN9_NAME" spirit:order="247">IO_L11N_T1U_N9_GC_66</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN9_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN10_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN10_NAME" spirit:order="248">IO_L12P_T1U_N10_GC_66</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN10_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN11_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN11_NAME" spirit:order="249">IO_L12N_T1U_N11_GC_66</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN11_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN12_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN12_NAME" spirit:order="250"/>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN12_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>ENABLE_BYTE2_PIN0</spirit:name>
      <spirit:displayName>check box1</spirit:displayName>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.ENABLE_BYTE2_PIN0" spirit:order="251">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>ENABLE_BYTE2_PIN1</spirit:name>
      <spirit:displayName>check box2</spirit:displayName>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.ENABLE_BYTE2_PIN1" spirit:order="252">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.ENABLE_BYTE2_PIN1">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>ENABLE_BYTE2_PIN2</spirit:name>
      <spirit:displayName>check box3</spirit:displayName>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.ENABLE_BYTE2_PIN2" spirit:order="253">FALSE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>ENABLE_BYTE2_PIN3</spirit:name>
      <spirit:displayName>check box4</spirit:displayName>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.ENABLE_BYTE2_PIN3" spirit:order="254">FALSE</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.ENABLE_BYTE2_PIN3">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>ENABLE_BYTE2_PIN4</spirit:name>
      <spirit:displayName>check box5</spirit:displayName>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.ENABLE_BYTE2_PIN4" spirit:order="255">FALSE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>ENABLE_BYTE2_PIN5</spirit:name>
      <spirit:displayName>check box6</spirit:displayName>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.ENABLE_BYTE2_PIN5" spirit:order="256">FALSE</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.ENABLE_BYTE2_PIN5">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>ENABLE_BYTE2_PIN6</spirit:name>
      <spirit:displayName>check box7</spirit:displayName>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.ENABLE_BYTE2_PIN6" spirit:order="257">FALSE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>ENABLE_BYTE2_PIN7</spirit:name>
      <spirit:displayName>check box8</spirit:displayName>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.ENABLE_BYTE2_PIN7" spirit:order="258">FALSE</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.ENABLE_BYTE2_PIN7">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>ENABLE_BYTE2_PIN8</spirit:name>
      <spirit:displayName>check box9</spirit:displayName>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.ENABLE_BYTE2_PIN8" spirit:order="259">FALSE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>ENABLE_BYTE2_PIN9</spirit:name>
      <spirit:displayName>check box10</spirit:displayName>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.ENABLE_BYTE2_PIN9" spirit:order="260">FALSE</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.ENABLE_BYTE2_PIN9">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>ENABLE_BYTE2_PIN10</spirit:name>
      <spirit:displayName>check box11</spirit:displayName>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.ENABLE_BYTE2_PIN10" spirit:order="261">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>ENABLE_BYTE2_PIN11</spirit:name>
      <spirit:displayName>check box12</spirit:displayName>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.ENABLE_BYTE2_PIN11" spirit:order="262">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.ENABLE_BYTE2_PIN11">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>ENABLE_BYTE2_PIN12</spirit:name>
      <spirit:displayName>check box13</spirit:displayName>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.ENABLE_BYTE2_PIN12" spirit:order="263">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.ENABLE_BYTE2_PIN12">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN0_BUS_DIR</spirit:name>
      <spirit:displayName>bus dir1</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN0_BUS_DIR" spirit:choiceRef="choice_list_4e89caad" spirit:order="264">RX</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN0_BUS_DIR">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN1_BUS_DIR</spirit:name>
      <spirit:displayName>bus dir2</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN1_BUS_DIR" spirit:choiceRef="choice_pairs_81ef286a" spirit:order="265">RX</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN1_BUS_DIR">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN2_BUS_DIR</spirit:name>
      <spirit:displayName>bus dir3</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN2_BUS_DIR" spirit:choiceRef="choice_pairs_81ef286a" spirit:order="266">RX</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN2_BUS_DIR">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN3_BUS_DIR</spirit:name>
      <spirit:displayName>bus dir4</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN3_BUS_DIR" spirit:choiceRef="choice_pairs_81ef286a" spirit:order="267">RX</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN3_BUS_DIR">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN4_BUS_DIR</spirit:name>
      <spirit:displayName>bus dir5</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN4_BUS_DIR" spirit:choiceRef="choice_pairs_81ef286a" spirit:order="268">RX</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN4_BUS_DIR">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN5_BUS_DIR</spirit:name>
      <spirit:displayName>bus dir6</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN5_BUS_DIR" spirit:choiceRef="choice_pairs_81ef286a" spirit:order="269">RX</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN5_BUS_DIR">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN6_BUS_DIR</spirit:name>
      <spirit:displayName>bus dir7</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN6_BUS_DIR" spirit:choiceRef="choice_pairs_81ef286a" spirit:order="270">RX</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN6_BUS_DIR">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN7_BUS_DIR</spirit:name>
      <spirit:displayName>bus dir8</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN7_BUS_DIR" spirit:choiceRef="choice_pairs_81ef286a" spirit:order="271">RX</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN7_BUS_DIR">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN8_BUS_DIR</spirit:name>
      <spirit:displayName>bus dir9</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN8_BUS_DIR" spirit:choiceRef="choice_pairs_81ef286a" spirit:order="272">RX</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN8_BUS_DIR">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN9_BUS_DIR</spirit:name>
      <spirit:displayName>bus dir10</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN9_BUS_DIR" spirit:choiceRef="choice_pairs_81ef286a" spirit:order="273">RX</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN9_BUS_DIR">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN10_BUS_DIR</spirit:name>
      <spirit:displayName>bus dir11</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN10_BUS_DIR" spirit:choiceRef="choice_pairs_81ef286a" spirit:order="274">RX</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN10_BUS_DIR">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN11_BUS_DIR</spirit:name>
      <spirit:displayName>bus dir12</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN11_BUS_DIR" spirit:choiceRef="choice_pairs_81ef286a" spirit:order="275">RX</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN11_BUS_DIR">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN12_BUS_DIR</spirit:name>
      <spirit:displayName>bus dir13</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN12_BUS_DIR" spirit:choiceRef="choice_pairs_81ef286a" spirit:order="276">RX</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN12_BUS_DIR">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN0_SIG_TYPE</spirit:name>
      <spirit:displayName>Bus Sig Type1</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN0_SIG_TYPE" spirit:choiceRef="choice_pairs_ab6c69d3" spirit:order="277">DIFF</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN0_SIG_TYPE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN1_SIG_TYPE</spirit:name>
      <spirit:displayName>Bus Sig Type2</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN1_SIG_TYPE" spirit:choiceRef="choice_pairs_f8ef0539" spirit:order="278">DIFF</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN1_SIG_TYPE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN2_SIG_TYPE</spirit:name>
      <spirit:displayName>Bus Sig Type3</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN2_SIG_TYPE" spirit:choiceRef="choice_pairs_f8ef0539" spirit:order="279">SINGLE</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN2_SIG_TYPE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN3_SIG_TYPE</spirit:name>
      <spirit:displayName>Bus Sig Type4</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN3_SIG_TYPE" spirit:choiceRef="choice_pairs_f8ef0539" spirit:order="280">SINGLE</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN3_SIG_TYPE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN4_SIG_TYPE</spirit:name>
      <spirit:displayName>Bus Sig Type5</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN4_SIG_TYPE" spirit:choiceRef="choice_pairs_f8ef0539" spirit:order="281">SINGLE</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN4_SIG_TYPE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN5_SIG_TYPE</spirit:name>
      <spirit:displayName>Bus Sig Type6</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN5_SIG_TYPE" spirit:choiceRef="choice_pairs_f8ef0539" spirit:order="282">SINGLE</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN5_SIG_TYPE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN6_SIG_TYPE</spirit:name>
      <spirit:displayName>Bus Sig Type7</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN6_SIG_TYPE" spirit:choiceRef="choice_pairs_f8ef0539" spirit:order="283">SINGLE</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN6_SIG_TYPE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN7_SIG_TYPE</spirit:name>
      <spirit:displayName>Bus Sig Type8</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN7_SIG_TYPE" spirit:choiceRef="choice_pairs_f8ef0539" spirit:order="284">SINGLE</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN7_SIG_TYPE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN8_SIG_TYPE</spirit:name>
      <spirit:displayName>Bus Sig Type9</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN8_SIG_TYPE" spirit:choiceRef="choice_pairs_f8ef0539" spirit:order="285">SINGLE</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN8_SIG_TYPE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN9_SIG_TYPE</spirit:name>
      <spirit:displayName>Bus Sig Type10</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN9_SIG_TYPE" spirit:choiceRef="choice_pairs_f8ef0539" spirit:order="286">SINGLE</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN9_SIG_TYPE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN10_SIG_TYPE</spirit:name>
      <spirit:displayName>Bus Sig Type11</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN10_SIG_TYPE" spirit:choiceRef="choice_pairs_f8ef0539" spirit:order="287">SINGLE</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN10_SIG_TYPE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN11_SIG_TYPE</spirit:name>
      <spirit:displayName>Bus Sig Type12</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN11_SIG_TYPE" spirit:choiceRef="choice_pairs_f8ef0539" spirit:order="288">SINGLE</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN11_SIG_TYPE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN12_SIG_TYPE</spirit:name>
      <spirit:displayName>Bus Sig Type13</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN12_SIG_TYPE" spirit:choiceRef="choice_pairs_9ac6675d" spirit:order="289">SINGLE</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN12_SIG_TYPE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN0_DATA_STROBE</spirit:name>
      <spirit:displayName>Data Strobe26</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN0_DATA_STROBE" spirit:choiceRef="choice_pairs_018dc9ad" spirit:order="290">Data</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN0_DATA_STROBE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN1_DATA_STROBE</spirit:name>
      <spirit:displayName>Data Strobe27</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN1_DATA_STROBE" spirit:choiceRef="choice_pairs_04260eb3" spirit:order="291">Data</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN1_DATA_STROBE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN2_DATA_STROBE</spirit:name>
      <spirit:displayName>Data Strobe28</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN2_DATA_STROBE" spirit:choiceRef="choice_list_f4538885" spirit:order="292">Data</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN2_DATA_STROBE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN3_DATA_STROBE</spirit:name>
      <spirit:displayName>Data Strobe29</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN3_DATA_STROBE" spirit:choiceRef="choice_list_6b4993e2" spirit:order="293">Data</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN3_DATA_STROBE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN4_DATA_STROBE</spirit:name>
      <spirit:displayName>Data Strobe30</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN4_DATA_STROBE" spirit:choiceRef="choice_list_568bd184" spirit:order="294">Data</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN4_DATA_STROBE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN5_DATA_STROBE</spirit:name>
      <spirit:displayName>Data Strobe31</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN5_DATA_STROBE" spirit:choiceRef="choice_list_568bd184" spirit:order="295">Data</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN5_DATA_STROBE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN6_DATA_STROBE</spirit:name>
      <spirit:displayName>Data Strobe32</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN6_DATA_STROBE" spirit:choiceRef="choice_pairs_3e3068fc" spirit:order="296">Data</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN6_DATA_STROBE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN7_DATA_STROBE</spirit:name>
      <spirit:displayName>Data Strobe33</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN7_DATA_STROBE" spirit:choiceRef="choice_pairs_3e3068fc" spirit:order="297">Data</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN7_DATA_STROBE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN8_DATA_STROBE</spirit:name>
      <spirit:displayName>Data Strobe34</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN8_DATA_STROBE" spirit:choiceRef="choice_list_568bd184" spirit:order="298">Data</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN8_DATA_STROBE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN9_DATA_STROBE</spirit:name>
      <spirit:displayName>Data Strobe35</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN9_DATA_STROBE" spirit:choiceRef="choice_list_568bd184" spirit:order="299">Data</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN9_DATA_STROBE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN10_DATA_STROBE</spirit:name>
      <spirit:displayName>Data Strobe36</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN10_DATA_STROBE" spirit:choiceRef="choice_list_568bd184" spirit:order="300">Data</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN10_DATA_STROBE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN11_DATA_STROBE</spirit:name>
      <spirit:displayName>Data Strobe37</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN11_DATA_STROBE" spirit:choiceRef="choice_list_568bd184" spirit:order="301">Data</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN11_DATA_STROBE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN12_DATA_STROBE</spirit:name>
      <spirit:displayName>Data Strobe38</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN12_DATA_STROBE" spirit:choiceRef="choice_list_568bd184" spirit:order="302">Data</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN12_DATA_STROBE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN0_SIGNAL_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN0_SIGNAL_NAME" spirit:order="303">clk</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN0_SIGNAL_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN1_SIGNAL_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN1_SIGNAL_NAME" spirit:order="304">bg2_pin1</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN1_SIGNAL_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN2_SIGNAL_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN2_SIGNAL_NAME" spirit:order="305">bg2_pin2</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN2_SIGNAL_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN3_SIGNAL_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN3_SIGNAL_NAME" spirit:order="306">bg2_pin3</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN3_SIGNAL_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN4_SIGNAL_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN4_SIGNAL_NAME" spirit:order="307">bg2_pin4</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN4_SIGNAL_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN5_SIGNAL_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN5_SIGNAL_NAME" spirit:order="308">bg2_pin5</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN5_SIGNAL_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN6_SIGNAL_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN6_SIGNAL_NAME" spirit:order="309">bg2_pin6</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN6_SIGNAL_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN7_SIGNAL_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN7_SIGNAL_NAME" spirit:order="310">bg2_pin7</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN7_SIGNAL_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN8_SIGNAL_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN8_SIGNAL_NAME" spirit:order="311">bg2_pin8</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN8_SIGNAL_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN9_SIGNAL_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN9_SIGNAL_NAME" spirit:order="312">bg2_pin9</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN9_SIGNAL_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN10_SIGNAL_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN10_SIGNAL_NAME" spirit:order="313">bg2_pin10</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN10_SIGNAL_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN11_SIGNAL_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN11_SIGNAL_NAME" spirit:order="314">bg2_pin11</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN11_SIGNAL_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN12_SIGNAL_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN12_SIGNAL_NAME" spirit:order="315">bg2_pin12</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN12_SIGNAL_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN0_LOC</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN0_LOC" spirit:order="316">D7</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN0_LOC">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN1_LOC</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN1_LOC" spirit:order="317">D6</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN1_LOC">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN2_LOC</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN2_LOC" spirit:order="318">E5</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN2_LOC">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN3_LOC</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN3_LOC" spirit:order="319">D5</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN3_LOC">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN4_LOC</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN4_LOC" spirit:order="320">G6</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN4_LOC">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN5_LOC</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN5_LOC" spirit:order="321">F6</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN5_LOC">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN6_LOC</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN6_LOC" spirit:order="322">G8</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN6_LOC">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN7_LOC</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN7_LOC" spirit:order="323">F7</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN7_LOC">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN8_LOC</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN8_LOC" spirit:order="324">F8</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN8_LOC">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN9_LOC</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN9_LOC" spirit:order="325">E8</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN9_LOC">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN10_LOC</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN10_LOC" spirit:order="326"/>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN10_LOC">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN11_LOC</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN11_LOC" spirit:order="327"/>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN11_LOC">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN12_LOC</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN12_LOC" spirit:order="328"/>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN12_LOC">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN0_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN0_NAME" spirit:order="329">IO_L13P_T2L_N0_GC_QBC_66</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN0_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN1_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN1_NAME" spirit:order="330">IO_L13N_T2L_N1_GC_QBC_66</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN1_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN2_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN2_NAME" spirit:order="331">IO_L14P_T2L_N2_GC_66</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN2_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN3_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN3_NAME" spirit:order="332">IO_L14N_T2L_N3_GC_66</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN3_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN4_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN4_NAME" spirit:order="333">IO_L15P_T2L_N4_AD11P_66</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN4_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN5_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN5_NAME" spirit:order="334">IO_L15N_T2L_N5_AD11N_66</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN5_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN6_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN6_NAME" spirit:order="335">IO_L16P_T2U_N6_QBC_AD3P_66</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN6_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN7_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN7_NAME" spirit:order="336">IO_L16N_T2U_N7_QBC_AD3N_66</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN7_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN8_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN8_NAME" spirit:order="337">IO_L17P_T2U_N8_AD10P_66</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN8_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN9_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN9_NAME" spirit:order="338">IO_L17N_T2U_N9_AD10N_66</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN9_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN10_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN10_NAME" spirit:order="339"/>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN10_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN11_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN11_NAME" spirit:order="340"/>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN11_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN12_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN12_NAME" spirit:order="341"/>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN12_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>ENABLE_BYTE3_PIN0</spirit:name>
      <spirit:displayName>check box1</spirit:displayName>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.ENABLE_BYTE3_PIN0" spirit:order="342">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.ENABLE_BYTE3_PIN0">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>ENABLE_BYTE3_PIN1</spirit:name>
      <spirit:displayName>check box2</spirit:displayName>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.ENABLE_BYTE3_PIN1" spirit:order="343">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.ENABLE_BYTE3_PIN1">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>ENABLE_BYTE3_PIN2</spirit:name>
      <spirit:displayName>check box3</spirit:displayName>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.ENABLE_BYTE3_PIN2" spirit:order="344">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.ENABLE_BYTE3_PIN2">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>ENABLE_BYTE3_PIN3</spirit:name>
      <spirit:displayName>check box4</spirit:displayName>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.ENABLE_BYTE3_PIN3" spirit:order="345">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.ENABLE_BYTE3_PIN3">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>ENABLE_BYTE3_PIN4</spirit:name>
      <spirit:displayName>check box5</spirit:displayName>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.ENABLE_BYTE3_PIN4" spirit:order="346">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.ENABLE_BYTE3_PIN4">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>ENABLE_BYTE3_PIN5</spirit:name>
      <spirit:displayName>check box6</spirit:displayName>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.ENABLE_BYTE3_PIN5" spirit:order="347">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.ENABLE_BYTE3_PIN5">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>ENABLE_BYTE3_PIN6</spirit:name>
      <spirit:displayName>check box7</spirit:displayName>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.ENABLE_BYTE3_PIN6" spirit:order="348">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.ENABLE_BYTE3_PIN6">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>ENABLE_BYTE3_PIN7</spirit:name>
      <spirit:displayName>check box8</spirit:displayName>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.ENABLE_BYTE3_PIN7" spirit:order="349">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.ENABLE_BYTE3_PIN7">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>ENABLE_BYTE3_PIN8</spirit:name>
      <spirit:displayName>check box9</spirit:displayName>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.ENABLE_BYTE3_PIN8" spirit:order="350">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.ENABLE_BYTE3_PIN8">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>ENABLE_BYTE3_PIN9</spirit:name>
      <spirit:displayName>check box10</spirit:displayName>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.ENABLE_BYTE3_PIN9" spirit:order="351">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.ENABLE_BYTE3_PIN9">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>ENABLE_BYTE3_PIN10</spirit:name>
      <spirit:displayName>check box11</spirit:displayName>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.ENABLE_BYTE3_PIN10" spirit:order="352">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.ENABLE_BYTE3_PIN10">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>ENABLE_BYTE3_PIN11</spirit:name>
      <spirit:displayName>check box12</spirit:displayName>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.ENABLE_BYTE3_PIN11" spirit:order="353">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.ENABLE_BYTE3_PIN11">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>ENABLE_BYTE3_PIN12</spirit:name>
      <spirit:displayName>check box13</spirit:displayName>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.ENABLE_BYTE3_PIN12" spirit:order="354">false</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.ENABLE_BYTE3_PIN12">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN0_BUS_DIR</spirit:name>
      <spirit:displayName>bus dir1</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN0_BUS_DIR" spirit:choiceRef="choice_pairs_81ef286a" spirit:order="355">RX</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN0_BUS_DIR">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN1_BUS_DIR</spirit:name>
      <spirit:displayName>bus dir2</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN1_BUS_DIR" spirit:choiceRef="choice_pairs_81ef286a" spirit:order="356">RX</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN1_BUS_DIR">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN2_BUS_DIR</spirit:name>
      <spirit:displayName>bus dir3</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN2_BUS_DIR" spirit:choiceRef="choice_pairs_81ef286a" spirit:order="357">RX</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN2_BUS_DIR">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN3_BUS_DIR</spirit:name>
      <spirit:displayName>bus dir4</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN3_BUS_DIR" spirit:choiceRef="choice_pairs_81ef286a" spirit:order="358">RX</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN3_BUS_DIR">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN4_BUS_DIR</spirit:name>
      <spirit:displayName>bus dir5</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN4_BUS_DIR" spirit:choiceRef="choice_pairs_81ef286a" spirit:order="359">RX</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN4_BUS_DIR">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN5_BUS_DIR</spirit:name>
      <spirit:displayName>bus dir6</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN5_BUS_DIR" spirit:choiceRef="choice_pairs_81ef286a" spirit:order="360">RX</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN5_BUS_DIR">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN6_BUS_DIR</spirit:name>
      <spirit:displayName>bus dir7</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN6_BUS_DIR" spirit:choiceRef="choice_pairs_81ef286a" spirit:order="361">RX</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN6_BUS_DIR">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN7_BUS_DIR</spirit:name>
      <spirit:displayName>bus dir8</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN7_BUS_DIR" spirit:choiceRef="choice_pairs_81ef286a" spirit:order="362">RX</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN7_BUS_DIR">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN8_BUS_DIR</spirit:name>
      <spirit:displayName>bus dir9</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN8_BUS_DIR" spirit:choiceRef="choice_pairs_81ef286a" spirit:order="363">RX</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN8_BUS_DIR">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN9_BUS_DIR</spirit:name>
      <spirit:displayName>bus dir10</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN9_BUS_DIR" spirit:choiceRef="choice_pairs_81ef286a" spirit:order="364">RX</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN9_BUS_DIR">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN10_BUS_DIR</spirit:name>
      <spirit:displayName>bus dir11</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN10_BUS_DIR" spirit:choiceRef="choice_pairs_81ef286a" spirit:order="365">RX</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN10_BUS_DIR">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN11_BUS_DIR</spirit:name>
      <spirit:displayName>bus dir12</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN11_BUS_DIR" spirit:choiceRef="choice_pairs_81ef286a" spirit:order="366">RX</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN11_BUS_DIR">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN12_BUS_DIR</spirit:name>
      <spirit:displayName>bus dir13</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN12_BUS_DIR" spirit:choiceRef="choice_pairs_81ef286a" spirit:order="367">RX</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN12_BUS_DIR">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN0_SIG_TYPE</spirit:name>
      <spirit:displayName>Bus Sig Type1</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN0_SIG_TYPE" spirit:choiceRef="choice_pairs_f8ef0539" spirit:order="368">SINGLE</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN0_SIG_TYPE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN1_SIG_TYPE</spirit:name>
      <spirit:displayName>Bus Sig Type2</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN1_SIG_TYPE" spirit:choiceRef="choice_pairs_f8ef0539" spirit:order="369">SINGLE</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN1_SIG_TYPE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN2_SIG_TYPE</spirit:name>
      <spirit:displayName>Bus Sig Type3</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN2_SIG_TYPE" spirit:choiceRef="choice_pairs_f8ef0539" spirit:order="370">SINGLE</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN2_SIG_TYPE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN3_SIG_TYPE</spirit:name>
      <spirit:displayName>Bus Sig Type4</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN3_SIG_TYPE" spirit:choiceRef="choice_pairs_f8ef0539" spirit:order="371">SINGLE</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN3_SIG_TYPE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN4_SIG_TYPE</spirit:name>
      <spirit:displayName>Bus Sig Type5</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN4_SIG_TYPE" spirit:choiceRef="choice_pairs_f8ef0539" spirit:order="372">SINGLE</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN4_SIG_TYPE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN5_SIG_TYPE</spirit:name>
      <spirit:displayName>Bus Sig Type6</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN5_SIG_TYPE" spirit:choiceRef="choice_pairs_f8ef0539" spirit:order="373">SINGLE</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN5_SIG_TYPE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN6_SIG_TYPE</spirit:name>
      <spirit:displayName>Bus Sig Type7</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN6_SIG_TYPE" spirit:choiceRef="choice_pairs_f8ef0539" spirit:order="374">SINGLE</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN6_SIG_TYPE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN7_SIG_TYPE</spirit:name>
      <spirit:displayName>Bus Sig Type8</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN7_SIG_TYPE" spirit:choiceRef="choice_pairs_f8ef0539" spirit:order="375">SINGLE</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN7_SIG_TYPE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN8_SIG_TYPE</spirit:name>
      <spirit:displayName>Bus Sig Type9</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN8_SIG_TYPE" spirit:choiceRef="choice_pairs_f8ef0539" spirit:order="376">SINGLE</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN8_SIG_TYPE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN9_SIG_TYPE</spirit:name>
      <spirit:displayName>Bus Sig Type10</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN9_SIG_TYPE" spirit:choiceRef="choice_pairs_f8ef0539" spirit:order="377">SINGLE</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN9_SIG_TYPE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN10_SIG_TYPE</spirit:name>
      <spirit:displayName>Bus Sig Type11</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN10_SIG_TYPE" spirit:choiceRef="choice_pairs_f8ef0539" spirit:order="378">SINGLE</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN10_SIG_TYPE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN11_SIG_TYPE</spirit:name>
      <spirit:displayName>Bus Sig Type12</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN11_SIG_TYPE" spirit:choiceRef="choice_pairs_f8ef0539" spirit:order="379">SINGLE</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN11_SIG_TYPE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN12_SIG_TYPE</spirit:name>
      <spirit:displayName>Bus Sig Type13</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN12_SIG_TYPE" spirit:choiceRef="choice_pairs_9ac6675d" spirit:order="380">SINGLE</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN12_SIG_TYPE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN0_DATA_STROBE</spirit:name>
      <spirit:displayName>Data Strobe39</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN0_DATA_STROBE" spirit:choiceRef="choice_pairs_3e3068fc" spirit:order="381">Data</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN0_DATA_STROBE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN1_DATA_STROBE</spirit:name>
      <spirit:displayName>Data Strobe40</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN1_DATA_STROBE" spirit:choiceRef="choice_pairs_3e3068fc" spirit:order="382">Data</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN1_DATA_STROBE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN2_DATA_STROBE</spirit:name>
      <spirit:displayName>Data Strobe41</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN2_DATA_STROBE" spirit:choiceRef="choice_list_568bd184" spirit:order="383">Data</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN2_DATA_STROBE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN3_DATA_STROBE</spirit:name>
      <spirit:displayName>Data Strobe42</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN3_DATA_STROBE" spirit:choiceRef="choice_list_568bd184" spirit:order="384">Data</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN3_DATA_STROBE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN4_DATA_STROBE</spirit:name>
      <spirit:displayName>Data Strobe43</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN4_DATA_STROBE" spirit:choiceRef="choice_list_568bd184" spirit:order="385">Data</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN4_DATA_STROBE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN5_DATA_STROBE</spirit:name>
      <spirit:displayName>Data Strobe44</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN5_DATA_STROBE" spirit:choiceRef="choice_list_568bd184" spirit:order="386">Data</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN5_DATA_STROBE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN6_DATA_STROBE</spirit:name>
      <spirit:displayName>Data Strobe45</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN6_DATA_STROBE" spirit:choiceRef="choice_pairs_3e3068fc" spirit:order="387">Data</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN6_DATA_STROBE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN7_DATA_STROBE</spirit:name>
      <spirit:displayName>Data Strobe46</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN7_DATA_STROBE" spirit:choiceRef="choice_pairs_3e3068fc" spirit:order="388">Data</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN7_DATA_STROBE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN8_DATA_STROBE</spirit:name>
      <spirit:displayName>Data Strobe47</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN8_DATA_STROBE" spirit:choiceRef="choice_list_568bd184" spirit:order="389">Data</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN8_DATA_STROBE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN9_DATA_STROBE</spirit:name>
      <spirit:displayName>Data Strobe48</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN9_DATA_STROBE" spirit:choiceRef="choice_list_568bd184" spirit:order="390">Data</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN9_DATA_STROBE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN10_DATA_STROBE</spirit:name>
      <spirit:displayName>Data Strobe49</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN10_DATA_STROBE" spirit:choiceRef="choice_list_568bd184" spirit:order="391">Data</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN10_DATA_STROBE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN11_DATA_STROBE</spirit:name>
      <spirit:displayName>Data Strobe50</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN11_DATA_STROBE" spirit:choiceRef="choice_list_568bd184" spirit:order="392">Data</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN11_DATA_STROBE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN12_DATA_STROBE</spirit:name>
      <spirit:displayName>Data Strobe51</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN12_DATA_STROBE" spirit:choiceRef="choice_list_568bd184" spirit:order="393">Data</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN12_DATA_STROBE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN0_SIGNAL_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN0_SIGNAL_NAME" spirit:order="394">bg3_pin0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN0_SIGNAL_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN1_SIGNAL_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN1_SIGNAL_NAME" spirit:order="395">bg3_pin1</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN1_SIGNAL_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN2_SIGNAL_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN2_SIGNAL_NAME" spirit:order="396">bg3_pin2</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN2_SIGNAL_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN3_SIGNAL_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN3_SIGNAL_NAME" spirit:order="397">bg3_pin3</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN3_SIGNAL_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN4_SIGNAL_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN4_SIGNAL_NAME" spirit:order="398">bg3_pin4</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN4_SIGNAL_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN5_SIGNAL_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN5_SIGNAL_NAME" spirit:order="399">bg3_pin5</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN5_SIGNAL_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN6_SIGNAL_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN6_SIGNAL_NAME" spirit:order="400">bg3_pin6</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN6_SIGNAL_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN7_SIGNAL_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN7_SIGNAL_NAME" spirit:order="401">bg3_pin7</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN7_SIGNAL_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN8_SIGNAL_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN8_SIGNAL_NAME" spirit:order="402">bg3_pin8</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN8_SIGNAL_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN9_SIGNAL_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN9_SIGNAL_NAME" spirit:order="403">bg3_pin9</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN9_SIGNAL_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN10_SIGNAL_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN10_SIGNAL_NAME" spirit:order="404">bg3_pin10</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN10_SIGNAL_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN11_SIGNAL_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN11_SIGNAL_NAME" spirit:order="405">bg3_pin11</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN11_SIGNAL_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN12_SIGNAL_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN12_SIGNAL_NAME" spirit:order="406">bg3_pin12</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN12_SIGNAL_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN0_LOC</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN0_LOC" spirit:order="407"/>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN0_LOC">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN1_LOC</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN1_LOC" spirit:order="408"/>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN1_LOC">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN2_LOC</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN2_LOC" spirit:order="409"/>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN2_LOC">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN3_LOC</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN3_LOC" spirit:order="410"/>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN3_LOC">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN4_LOC</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN4_LOC" spirit:order="411"/>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN4_LOC">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN5_LOC</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN5_LOC" spirit:order="412"/>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN5_LOC">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN6_LOC</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN6_LOC" spirit:order="413"/>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN6_LOC">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN7_LOC</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN7_LOC" spirit:order="414"/>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN7_LOC">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN8_LOC</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN8_LOC" spirit:order="415"/>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN8_LOC">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN9_LOC</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN9_LOC" spirit:order="416"/>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN9_LOC">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN10_LOC</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN10_LOC" spirit:order="417"/>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN10_LOC">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN11_LOC</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN11_LOC" spirit:order="418"/>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN11_LOC">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN12_LOC</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN12_LOC" spirit:order="419"/>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN12_LOC">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN0_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN0_NAME" spirit:order="420"/>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN0_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN1_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN1_NAME" spirit:order="421"/>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN1_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN2_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN2_NAME" spirit:order="422"/>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN2_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN3_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN3_NAME" spirit:order="423"/>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN3_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN4_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN4_NAME" spirit:order="424"/>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN4_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN5_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN5_NAME" spirit:order="425"/>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN5_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN6_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN6_NAME" spirit:order="426"/>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN6_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN7_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN7_NAME" spirit:order="427"/>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN7_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN8_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN8_NAME" spirit:order="428"/>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN8_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN9_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN9_NAME" spirit:order="429"/>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN9_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN10_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN10_NAME" spirit:order="430"/>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN10_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN11_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN11_NAME" spirit:order="431"/>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN11_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN12_NAME</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN12_NAME" spirit:order="432"/>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN12_NAME">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN0_INIT</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN0_INIT" spirit:choiceRef="choice_list_8af5a703" spirit:order="433">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN0_INIT">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN1_INIT</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN1_INIT" spirit:choiceRef="choice_list_8af5a703" spirit:order="434">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN1_INIT">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN2_INIT</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN2_INIT" spirit:choiceRef="choice_list_8af5a703" spirit:order="435">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN2_INIT">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN3_INIT</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN3_INIT" spirit:choiceRef="choice_list_8af5a703" spirit:order="436">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN3_INIT">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN4_INIT</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN4_INIT" spirit:choiceRef="choice_list_8af5a703" spirit:order="437">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN4_INIT">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN5_INIT</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN5_INIT" spirit:choiceRef="choice_list_8af5a703" spirit:order="438">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN5_INIT">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN6_INIT</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN6_INIT" spirit:choiceRef="choice_list_8af5a703" spirit:order="439">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN6_INIT">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN7_INIT</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN7_INIT" spirit:choiceRef="choice_list_8af5a703" spirit:order="440">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN7_INIT">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN8_INIT</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN8_INIT" spirit:choiceRef="choice_list_8af5a703" spirit:order="441">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN8_INIT">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN9_INIT</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN9_INIT" spirit:choiceRef="choice_list_8af5a703" spirit:order="442">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN9_INIT">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN10_INIT</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN10_INIT" spirit:choiceRef="choice_list_8af5a703" spirit:order="443">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN10_INIT">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN11_INIT</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN11_INIT" spirit:choiceRef="choice_list_8af5a703" spirit:order="444">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN11_INIT">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN12_INIT</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN12_INIT" spirit:choiceRef="choice_list_8af5a703" spirit:order="445">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN12_INIT">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN0_INIT</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN0_INIT" spirit:choiceRef="choice_list_8af5a703" spirit:order="446">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN0_INIT">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN1_INIT</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN1_INIT" spirit:choiceRef="choice_list_8af5a703" spirit:order="447">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN1_INIT">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN2_INIT</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN2_INIT" spirit:choiceRef="choice_list_8af5a703" spirit:order="448">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN2_INIT">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN3_INIT</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN3_INIT" spirit:choiceRef="choice_list_8af5a703" spirit:order="449">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN3_INIT">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN4_INIT</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN4_INIT" spirit:choiceRef="choice_list_8af5a703" spirit:order="450">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN4_INIT">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN5_INIT</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN5_INIT" spirit:choiceRef="choice_list_8af5a703" spirit:order="451">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN5_INIT">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN6_INIT</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN6_INIT" spirit:choiceRef="choice_list_8af5a703" spirit:order="452">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN6_INIT">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN7_INIT</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN7_INIT" spirit:choiceRef="choice_list_8af5a703" spirit:order="453">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN7_INIT">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN8_INIT</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN8_INIT" spirit:choiceRef="choice_list_8af5a703" spirit:order="454">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN8_INIT">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN9_INIT</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN9_INIT" spirit:choiceRef="choice_list_8af5a703" spirit:order="455">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN9_INIT">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN10_INIT</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN10_INIT" spirit:choiceRef="choice_list_8af5a703" spirit:order="456">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN10_INIT">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN11_INIT</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN11_INIT" spirit:choiceRef="choice_list_8af5a703" spirit:order="457">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN11_INIT">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN12_INIT</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN12_INIT" spirit:choiceRef="choice_list_8af5a703" spirit:order="458">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN12_INIT">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN0_INIT</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN0_INIT" spirit:choiceRef="choice_list_8af5a703" spirit:order="459">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN0_INIT">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN1_INIT</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN1_INIT" spirit:choiceRef="choice_list_8af5a703" spirit:order="460">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN1_INIT">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN2_INIT</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN2_INIT" spirit:choiceRef="choice_list_8af5a703" spirit:order="461">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN2_INIT">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN3_INIT</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN3_INIT" spirit:choiceRef="choice_list_8af5a703" spirit:order="462">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN3_INIT">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN4_INIT</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN4_INIT" spirit:choiceRef="choice_list_8af5a703" spirit:order="463">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN4_INIT">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN5_INIT</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN5_INIT" spirit:choiceRef="choice_list_8af5a703" spirit:order="464">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN5_INIT">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN6_INIT</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN6_INIT" spirit:choiceRef="choice_list_8af5a703" spirit:order="465">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN6_INIT">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN7_INIT</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN7_INIT" spirit:choiceRef="choice_list_8af5a703" spirit:order="466">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN7_INIT">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN8_INIT</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN8_INIT" spirit:choiceRef="choice_list_8af5a703" spirit:order="467">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN8_INIT">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN9_INIT</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN9_INIT" spirit:choiceRef="choice_list_8af5a703" spirit:order="468">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN9_INIT">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN10_INIT</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN10_INIT" spirit:choiceRef="choice_list_8af5a703" spirit:order="469">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN10_INIT">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN11_INIT</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN11_INIT" spirit:choiceRef="choice_list_8af5a703" spirit:order="470">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN11_INIT">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN12_INIT</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN12_INIT" spirit:choiceRef="choice_list_8af5a703" spirit:order="471">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN12_INIT">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN0_INIT</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN0_INIT" spirit:choiceRef="choice_list_8af5a703" spirit:order="472">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN0_INIT">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN1_INIT</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN1_INIT" spirit:choiceRef="choice_list_8af5a703" spirit:order="473">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN1_INIT">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN2_INIT</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN2_INIT" spirit:choiceRef="choice_list_8af5a703" spirit:order="474">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN2_INIT">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN3_INIT</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN3_INIT" spirit:choiceRef="choice_list_8af5a703" spirit:order="475">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN3_INIT">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN4_INIT</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN4_INIT" spirit:choiceRef="choice_list_8af5a703" spirit:order="476">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN4_INIT">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN5_INIT</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN5_INIT" spirit:choiceRef="choice_list_8af5a703" spirit:order="477">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN5_INIT">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN6_INIT</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN6_INIT" spirit:choiceRef="choice_list_8af5a703" spirit:order="478">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN6_INIT">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN7_INIT</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN7_INIT" spirit:choiceRef="choice_list_8af5a703" spirit:order="479">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN7_INIT">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN8_INIT</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN8_INIT" spirit:choiceRef="choice_list_8af5a703" spirit:order="480">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN8_INIT">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN9_INIT</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN9_INIT" spirit:choiceRef="choice_list_8af5a703" spirit:order="481">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN9_INIT">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN10_INIT</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN10_INIT" spirit:choiceRef="choice_list_8af5a703" spirit:order="482">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN10_INIT">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN11_INIT</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN11_INIT" spirit:choiceRef="choice_list_8af5a703" spirit:order="483">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN11_INIT">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN12_INIT</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN12_INIT" spirit:choiceRef="choice_list_8af5a703" spirit:order="484">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN12_INIT">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN0_DELAY_VALUE</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN0_DELAY_VALUE" spirit:order="485" spirit:minimum="0" spirit:maximum="1100" spirit:rangeType="long">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN0_DELAY_VALUE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN1_DELAY_VALUE</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN1_DELAY_VALUE" spirit:order="486" spirit:minimum="0" spirit:maximum="1100" spirit:rangeType="long">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN1_DELAY_VALUE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN2_DELAY_VALUE</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN2_DELAY_VALUE" spirit:order="487" spirit:minimum="0" spirit:maximum="1100" spirit:rangeType="long">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN2_DELAY_VALUE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN3_DELAY_VALUE</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN3_DELAY_VALUE" spirit:order="488" spirit:minimum="0" spirit:maximum="1100" spirit:rangeType="long">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN3_DELAY_VALUE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN4_DELAY_VALUE</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN4_DELAY_VALUE" spirit:order="489" spirit:minimum="0" spirit:maximum="1100" spirit:rangeType="long">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN4_DELAY_VALUE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN5_DELAY_VALUE</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN5_DELAY_VALUE" spirit:order="490" spirit:minimum="0" spirit:maximum="1100" spirit:rangeType="long">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN5_DELAY_VALUE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN6_DELAY_VALUE</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN6_DELAY_VALUE" spirit:order="491" spirit:minimum="0" spirit:maximum="1100" spirit:rangeType="long">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN6_DELAY_VALUE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN7_DELAY_VALUE</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN7_DELAY_VALUE" spirit:order="492" spirit:minimum="0" spirit:maximum="1100" spirit:rangeType="long">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN7_DELAY_VALUE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN8_DELAY_VALUE</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN8_DELAY_VALUE" spirit:order="493" spirit:minimum="0" spirit:maximum="1100" spirit:rangeType="long">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN8_DELAY_VALUE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN9_DELAY_VALUE</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN9_DELAY_VALUE" spirit:order="494" spirit:minimum="0" spirit:maximum="1100" spirit:rangeType="long">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN9_DELAY_VALUE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN10_DELAY_VALUE</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN10_DELAY_VALUE" spirit:order="495" spirit:minimum="0" spirit:maximum="1100" spirit:rangeType="long">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN10_DELAY_VALUE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN11_DELAY_VALUE</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN11_DELAY_VALUE" spirit:order="496" spirit:minimum="0" spirit:maximum="1100" spirit:rangeType="long">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN11_DELAY_VALUE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE0_PIN12_DELAY_VALUE</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE0_PIN12_DELAY_VALUE" spirit:order="497" spirit:minimum="0" spirit:maximum="1100" spirit:rangeType="long">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE0_PIN12_DELAY_VALUE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN0_DELAY_VALUE</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN0_DELAY_VALUE" spirit:order="498" spirit:minimum="0" spirit:maximum="1100" spirit:rangeType="long">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN0_DELAY_VALUE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN1_DELAY_VALUE</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN1_DELAY_VALUE" spirit:order="499" spirit:minimum="0" spirit:maximum="1100" spirit:rangeType="long">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN1_DELAY_VALUE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN2_DELAY_VALUE</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN2_DELAY_VALUE" spirit:order="500" spirit:minimum="0" spirit:maximum="1100" spirit:rangeType="long">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN2_DELAY_VALUE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN3_DELAY_VALUE</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN3_DELAY_VALUE" spirit:order="501" spirit:minimum="0" spirit:maximum="1100" spirit:rangeType="long">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN3_DELAY_VALUE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN4_DELAY_VALUE</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN4_DELAY_VALUE" spirit:order="502" spirit:minimum="0" spirit:maximum="1100" spirit:rangeType="long">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN4_DELAY_VALUE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN5_DELAY_VALUE</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN5_DELAY_VALUE" spirit:order="503" spirit:minimum="0" spirit:maximum="1100" spirit:rangeType="long">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN5_DELAY_VALUE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN6_DELAY_VALUE</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN6_DELAY_VALUE" spirit:order="504" spirit:minimum="0" spirit:maximum="1100" spirit:rangeType="long">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN6_DELAY_VALUE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN7_DELAY_VALUE</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN7_DELAY_VALUE" spirit:order="505" spirit:minimum="0" spirit:maximum="1100" spirit:rangeType="long">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN7_DELAY_VALUE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN8_DELAY_VALUE</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN8_DELAY_VALUE" spirit:order="506" spirit:minimum="0" spirit:maximum="1100" spirit:rangeType="long">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN8_DELAY_VALUE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN9_DELAY_VALUE</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN9_DELAY_VALUE" spirit:order="507" spirit:minimum="0" spirit:maximum="1100" spirit:rangeType="long">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN9_DELAY_VALUE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN10_DELAY_VALUE</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN10_DELAY_VALUE" spirit:order="508" spirit:minimum="0" spirit:maximum="1100" spirit:rangeType="long">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN10_DELAY_VALUE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN11_DELAY_VALUE</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN11_DELAY_VALUE" spirit:order="509" spirit:minimum="0" spirit:maximum="1100" spirit:rangeType="long">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN11_DELAY_VALUE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE1_PIN12_DELAY_VALUE</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE1_PIN12_DELAY_VALUE" spirit:order="510" spirit:minimum="0" spirit:maximum="1100" spirit:rangeType="long">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE1_PIN12_DELAY_VALUE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN0_DELAY_VALUE</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN0_DELAY_VALUE" spirit:order="511" spirit:minimum="0" spirit:maximum="1100" spirit:rangeType="long">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN0_DELAY_VALUE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN1_DELAY_VALUE</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN1_DELAY_VALUE" spirit:order="512" spirit:minimum="0" spirit:maximum="1100" spirit:rangeType="long">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN1_DELAY_VALUE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN2_DELAY_VALUE</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN2_DELAY_VALUE" spirit:order="513" spirit:minimum="0" spirit:maximum="1100" spirit:rangeType="long">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN2_DELAY_VALUE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN3_DELAY_VALUE</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN3_DELAY_VALUE" spirit:order="514" spirit:minimum="0" spirit:maximum="1100" spirit:rangeType="long">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN3_DELAY_VALUE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN4_DELAY_VALUE</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN4_DELAY_VALUE" spirit:order="515" spirit:minimum="0" spirit:maximum="1100" spirit:rangeType="long">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN4_DELAY_VALUE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN5_DELAY_VALUE</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN5_DELAY_VALUE" spirit:order="516" spirit:minimum="0" spirit:maximum="1100" spirit:rangeType="long">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN5_DELAY_VALUE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN6_DELAY_VALUE</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN6_DELAY_VALUE" spirit:order="517" spirit:minimum="0" spirit:maximum="1100" spirit:rangeType="long">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN6_DELAY_VALUE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN7_DELAY_VALUE</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN7_DELAY_VALUE" spirit:order="518" spirit:minimum="0" spirit:maximum="1100" spirit:rangeType="long">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN7_DELAY_VALUE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN8_DELAY_VALUE</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN8_DELAY_VALUE" spirit:order="519" spirit:minimum="0" spirit:maximum="1100" spirit:rangeType="long">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN8_DELAY_VALUE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN9_DELAY_VALUE</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN9_DELAY_VALUE" spirit:order="520" spirit:minimum="0" spirit:maximum="1100" spirit:rangeType="long">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN9_DELAY_VALUE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN10_DELAY_VALUE</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN10_DELAY_VALUE" spirit:order="521" spirit:minimum="0" spirit:maximum="1100" spirit:rangeType="long">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN10_DELAY_VALUE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN11_DELAY_VALUE</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN11_DELAY_VALUE" spirit:order="522" spirit:minimum="0" spirit:maximum="1100" spirit:rangeType="long">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN11_DELAY_VALUE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE2_PIN12_DELAY_VALUE</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE2_PIN12_DELAY_VALUE" spirit:order="523" spirit:minimum="0" spirit:maximum="1100" spirit:rangeType="long">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE2_PIN12_DELAY_VALUE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN0_DELAY_VALUE</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN0_DELAY_VALUE" spirit:order="524" spirit:minimum="0" spirit:maximum="1100" spirit:rangeType="long">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN0_DELAY_VALUE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN1_DELAY_VALUE</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN1_DELAY_VALUE" spirit:order="525" spirit:minimum="0" spirit:maximum="1100" spirit:rangeType="long">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN1_DELAY_VALUE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN2_DELAY_VALUE</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN2_DELAY_VALUE" spirit:order="526" spirit:minimum="0" spirit:maximum="1100" spirit:rangeType="long">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN2_DELAY_VALUE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN3_DELAY_VALUE</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN3_DELAY_VALUE" spirit:order="527" spirit:minimum="0" spirit:maximum="1100" spirit:rangeType="long">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN3_DELAY_VALUE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN4_DELAY_VALUE</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN4_DELAY_VALUE" spirit:order="528" spirit:minimum="0" spirit:maximum="1100" spirit:rangeType="long">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN4_DELAY_VALUE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN5_DELAY_VALUE</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN5_DELAY_VALUE" spirit:order="529" spirit:minimum="0" spirit:maximum="1100" spirit:rangeType="long">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN5_DELAY_VALUE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN6_DELAY_VALUE</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN6_DELAY_VALUE" spirit:order="530" spirit:minimum="0" spirit:maximum="1100" spirit:rangeType="long">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN6_DELAY_VALUE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN7_DELAY_VALUE</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN7_DELAY_VALUE" spirit:order="531" spirit:minimum="0" spirit:maximum="1100" spirit:rangeType="long">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN7_DELAY_VALUE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN8_DELAY_VALUE</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN8_DELAY_VALUE" spirit:order="532" spirit:minimum="0" spirit:maximum="1100" spirit:rangeType="long">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN8_DELAY_VALUE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN9_DELAY_VALUE</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN9_DELAY_VALUE" spirit:order="533" spirit:minimum="0" spirit:maximum="1100" spirit:rangeType="long">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN9_DELAY_VALUE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN10_DELAY_VALUE</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN10_DELAY_VALUE" spirit:order="534" spirit:minimum="0" spirit:maximum="1100" spirit:rangeType="long">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN10_DELAY_VALUE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN11_DELAY_VALUE</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN11_DELAY_VALUE" spirit:order="535" spirit:minimum="0" spirit:maximum="1100" spirit:rangeType="long">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN11_DELAY_VALUE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>BYTE3_PIN12_DELAY_VALUE</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.BYTE3_PIN12_DELAY_VALUE" spirit:order="536" spirit:minimum="0" spirit:maximum="1100" spirit:rangeType="long">0</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.BYTE3_PIN12_DELAY_VALUE">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>OVERRIDE_DELAY_VALUES</spirit:name>
      <spirit:displayName>Override Delay Values</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.OVERRIDE_DELAY_VALUES" spirit:choiceRef="choice_list_8af5a703" spirit:order="537">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>EN_HIGHER_DATA_SPEED</spirit:name>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.EN_HIGHER_DATA_SPEED" spirit:choiceRef="choice_list_8af5a703" spirit:order="538">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>GROUP_BUS_DIR0</spirit:name>
      <spirit:displayName>Common Bus Direction</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.GROUP_BUS_DIR0" spirit:choiceRef="choice_pairs_f78a0c67" spirit:order="539">NONE</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="generated" xilinx:id="PARAM_ENABLEMENT.GROUP_BUS_DIR0">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>GROUP_BUS_DIR1</spirit:name>
      <spirit:displayName>Common Bus Direction</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.GROUP_BUS_DIR1" spirit:choiceRef="choice_pairs_f78a0c67" spirit:order="540">NONE</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="generated" xilinx:id="PARAM_ENABLEMENT.GROUP_BUS_DIR1">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>GROUP_BUS_DIR2</spirit:name>
      <spirit:displayName>Common Bus Direction</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.GROUP_BUS_DIR2" spirit:choiceRef="choice_pairs_f78a0c67" spirit:order="541">NONE</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="generated" xilinx:id="PARAM_ENABLEMENT.GROUP_BUS_DIR2">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>GROUP_BUS_DIR3</spirit:name>
      <spirit:displayName>Common Bus Direction</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.GROUP_BUS_DIR3" spirit:choiceRef="choice_pairs_f78a0c67" spirit:order="542">NONE</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="generated" xilinx:id="PARAM_ENABLEMENT.GROUP_BUS_DIR3">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>GROUP_SIG_TYPE0</spirit:name>
      <spirit:displayName>Common Signal Type</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.GROUP_SIG_TYPE0" spirit:choiceRef="choice_pairs_57137254" spirit:order="543">NONE</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.GROUP_SIG_TYPE0">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>GROUP_SIG_TYPE1</spirit:name>
      <spirit:displayName>Common Signal Type</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.GROUP_SIG_TYPE1" spirit:choiceRef="choice_pairs_57137254" spirit:order="544">NONE</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.GROUP_SIG_TYPE1">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>GROUP_SIG_TYPE2</spirit:name>
      <spirit:displayName>Common Signal Type</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.GROUP_SIG_TYPE2" spirit:choiceRef="choice_pairs_57137254" spirit:order="545">NONE</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.GROUP_SIG_TYPE2">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>GROUP_SIG_TYPE3</spirit:name>
      <spirit:displayName>Common Signal Type</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.GROUP_SIG_TYPE3" spirit:choiceRef="choice_pairs_57137254" spirit:order="546">NONE</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:id="PARAM_ENABLEMENT.GROUP_SIG_TYPE3">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
  </spirit:parameters>
  <spirit:vendorExtensions>
    <xilinx:coreExtensions>
      <xilinx:displayName>High Speed SelectIO Wizard</xilinx:displayName>
      <xilinx:coreRevision>9</xilinx:coreRevision>
      <xilinx:configElementInfos>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.APPEND_PIN_NO" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.BANK" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.BYTE0_PIN0_BUS_DIR" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.BYTE0_PIN0_DATA_STROBE" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.BYTE0_PIN0_SIGNAL_NAME" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.BYTE0_PIN1_SIGNAL_NAME" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.BYTE0_PIN2_BUS_DIR" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.BYTE0_PIN2_DATA_STROBE" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.BYTE0_PIN2_SIGNAL_NAME" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.BYTE0_PIN3_SIGNAL_NAME" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.BYTE0_PIN4_BUS_DIR" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.BYTE0_PIN4_DATA_STROBE" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.BYTE0_PIN4_SIGNAL_NAME" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.BYTE0_PIN5_SIGNAL_NAME" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.BYTE0_PIN6_BUS_DIR" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.BYTE0_PIN6_DATA_STROBE" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.BYTE0_PIN6_SIGNAL_NAME" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.BYTE0_PIN7_SIGNAL_NAME" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.BYTE0_PIN8_BUS_DIR" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.BYTE0_PIN8_DATA_STROBE" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.BYTE0_PIN8_SIGNAL_NAME" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.BYTE0_PIN9_SIGNAL_NAME" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.DIFFERENTIAL_IO_TERMINATION" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.ENABLE_BYTE0_PIN0" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.ENABLE_BYTE0_PIN2" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.ENABLE_BYTE0_PIN4" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.ENABLE_BYTE0_PIN6" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.ENABLE_BYTE0_PIN8" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.ENABLE_BYTE2_PIN0" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.ENABLE_PLL0_PLLOUT1" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.ENABLE_RIU_INTERFACE" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.ENABLE_RIU_SPLIT" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.FIFO_RD_EN_CONTROL" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.MIPI_RX_DATA_SPEED" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.PLL0_DATA_SPEED" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.PLL0_INPUT_CLK_FREQ" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.PLL_SHARING" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.RX_DELAY_TYPE" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.RX_EQUALIZATION_D" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.TEMPLATE" xilinx:valueSource="propagated"/>
      </xilinx:configElementInfos>
    </xilinx:coreExtensions>
    <xilinx:packagingInfo>
      <xilinx:xilinxVersion>2024.1</xilinx:xilinxVersion>
      <xilinx:checksum xilinx:scope="busInterfaces" xilinx:value="6c95336d"/>
      <xilinx:checksum xilinx:scope="fileGroups" xilinx:value="82566ac1"/>
      <xilinx:checksum xilinx:scope="ports" xilinx:value="0c542d5a"/>
      <xilinx:checksum xilinx:scope="hdlParameters" xilinx:value="94d240b6"/>
      <xilinx:checksum xilinx:scope="parameters" xilinx:value="c24c79b0"/>
    </xilinx:packagingInfo>
  </spirit:vendorExtensions>
</spirit:component>
