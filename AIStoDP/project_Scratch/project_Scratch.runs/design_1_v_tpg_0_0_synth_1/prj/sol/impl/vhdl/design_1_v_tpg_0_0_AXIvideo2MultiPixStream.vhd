-- ==============================================================
-- Generated by Vitis HLS v2024.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity design_1_v_tpg_0_0_AXIvideo2MultiPixStream is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    s_axis_video_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    s_axis_video_TVALID : IN STD_LOGIC;
    s_axis_video_TREADY : OUT STD_LOGIC;
    s_axis_video_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
    s_axis_video_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
    s_axis_video_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    s_axis_video_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    s_axis_video_TID : IN STD_LOGIC_VECTOR (0 downto 0);
    s_axis_video_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
    srcYUV_din : OUT STD_LOGIC_VECTOR (29 downto 0);
    srcYUV_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
    srcYUV_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
    srcYUV_full_n : IN STD_LOGIC;
    srcYUV_write : OUT STD_LOGIC;
    enableInput_val : IN STD_LOGIC_VECTOR (7 downto 0);
    Height_val : IN STD_LOGIC_VECTOR (15 downto 0);
    WidthIn_val : IN STD_LOGIC_VECTOR (15 downto 0);
    colorFormat_val : IN STD_LOGIC_VECTOR (7 downto 0);
    height_val4_c3_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    height_val4_c3_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    height_val4_c3_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    height_val4_c3_full_n : IN STD_LOGIC;
    height_val4_c3_write : OUT STD_LOGIC;
    width_val7_c4_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    width_val7_c4_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    width_val7_c4_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    width_val7_c4_full_n : IN STD_LOGIC;
    width_val7_c4_write : OUT STD_LOGIC;
    enableInput_val15_c_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    enableInput_val15_c_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    enableInput_val15_c_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    enableInput_val15_c_full_n : IN STD_LOGIC;
    enableInput_val15_c_write : OUT STD_LOGIC;
    colorFormat_val20_c5_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    colorFormat_val20_c5_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    colorFormat_val20_c5_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    colorFormat_val20_c5_full_n : IN STD_LOGIC;
    colorFormat_val20_c5_write : OUT STD_LOGIC );
end;


architecture behav of design_1_v_tpg_0_0_AXIvideo2MultiPixStream is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (9 downto 0) := "0000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (9 downto 0) := "0000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (9 downto 0) := "0000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (9 downto 0) := "0000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (9 downto 0) := "0000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (9 downto 0) := "0001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (9 downto 0) := "0010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (9 downto 0) := "0100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal height_val4_c3_blk_n : STD_LOGIC;
    signal width_val7_c4_blk_n : STD_LOGIC;
    signal enableInput_val15_c_blk_n : STD_LOGIC;
    signal colorFormat_val20_c5_blk_n : STD_LOGIC;
    signal ap_block_state1 : BOOLEAN;
    signal icmp_ln834_fu_286_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln834_reg_400 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln827_fu_292_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln827_reg_404 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal trunc_ln828_fu_296_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln828_reg_409 : STD_LOGIC_VECTOR (10 downto 0);
    signal cond_fu_300_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cond_reg_429 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp10402_fu_313_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp10402_reg_437 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal xor_ln897_fu_318_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln897_reg_442 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln897_fu_342_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln897_reg_453 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal select_ln897_fu_360_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln897_reg_464 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_start_fu_202_ap_start : STD_LOGIC;
    signal grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_start_fu_202_ap_done : STD_LOGIC;
    signal grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_start_fu_202_ap_idle : STD_LOGIC;
    signal grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_start_fu_202_ap_ready : STD_LOGIC;
    signal grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_start_fu_202_s_axis_video_TREADY : STD_LOGIC;
    signal grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_start_fu_202_axi_data_out : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_start_fu_202_axi_data_out_ap_vld : STD_LOGIC;
    signal grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_start_fu_202_axi_last_out : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_start_fu_202_axi_last_out_ap_vld : STD_LOGIC;
    signal grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_222_ap_start : STD_LOGIC;
    signal grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_222_ap_done : STD_LOGIC;
    signal grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_222_ap_idle : STD_LOGIC;
    signal grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_222_ap_ready : STD_LOGIC;
    signal grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_222_srcYUV_din : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_222_srcYUV_write : STD_LOGIC;
    signal grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_222_s_axis_video_TREADY : STD_LOGIC;
    signal grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_222_eol_out : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_222_eol_out_ap_vld : STD_LOGIC;
    signal grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_222_axi_data_7_out : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_222_axi_data_7_out_ap_vld : STD_LOGIC;
    signal grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_eol_fu_251_ap_start : STD_LOGIC;
    signal grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_eol_fu_251_ap_done : STD_LOGIC;
    signal grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_eol_fu_251_ap_idle : STD_LOGIC;
    signal grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_eol_fu_251_ap_ready : STD_LOGIC;
    signal grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_eol_fu_251_s_axis_video_TREADY : STD_LOGIC;
    signal grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_eol_fu_251_axi_data_4_out : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_eol_fu_251_axi_data_4_out_ap_vld : STD_LOGIC;
    signal grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_eol_fu_251_axi_last_4_out : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_eol_fu_251_axi_last_4_out_ap_vld : STD_LOGIC;
    signal grp_reg_unsigned_short_s_fu_274_ap_start : STD_LOGIC;
    signal grp_reg_unsigned_short_s_fu_274_ap_done : STD_LOGIC;
    signal grp_reg_unsigned_short_s_fu_274_ap_idle : STD_LOGIC;
    signal grp_reg_unsigned_short_s_fu_274_ap_ready : STD_LOGIC;
    signal grp_reg_unsigned_short_s_fu_274_ap_ce : STD_LOGIC;
    signal grp_reg_unsigned_short_s_fu_274_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state1_ignore_call19 : BOOLEAN;
    signal grp_reg_unsigned_short_s_fu_280_ap_start : STD_LOGIC;
    signal grp_reg_unsigned_short_s_fu_280_ap_done : STD_LOGIC;
    signal grp_reg_unsigned_short_s_fu_280_ap_idle : STD_LOGIC;
    signal grp_reg_unsigned_short_s_fu_280_ap_ready : STD_LOGIC;
    signal grp_reg_unsigned_short_s_fu_280_ap_ce : STD_LOGIC;
    signal grp_reg_unsigned_short_s_fu_280_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state1_ignore_call21 : BOOLEAN;
    signal sof_reg_180 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal axi_last_2_reg_192 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_start_fu_202_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal axi_data_6_fu_116 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_222_ap_start_reg : STD_LOGIC := '0';
    signal icmp_ln845_fu_327_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_eol_fu_251_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal axi_last_4_loc_fu_100 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_120 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    signal i_4_fu_332_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal colorFormat_val20_c5_write_local : STD_LOGIC;
    signal enableInput_val15_c_write_local : STD_LOGIC;
    signal width_val7_c4_write_local : STD_LOGIC;
    signal height_val4_c3_write_local : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component design_1_v_tpg_0_0_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_start IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        s_axis_video_TVALID : IN STD_LOGIC;
        s_axis_video_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        s_axis_video_TREADY : OUT STD_LOGIC;
        s_axis_video_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
        s_axis_video_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        s_axis_video_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        s_axis_video_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        s_axis_video_TID : IN STD_LOGIC_VECTOR (0 downto 0);
        s_axis_video_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
        axi_data_out : OUT STD_LOGIC_VECTOR (29 downto 0);
        axi_data_out_ap_vld : OUT STD_LOGIC;
        axi_last_out : OUT STD_LOGIC_VECTOR (0 downto 0);
        axi_last_out_ap_vld : OUT STD_LOGIC );
    end component;


    component design_1_v_tpg_0_0_AXIvideo2MultiPixStream_Pipeline_loop_width IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        s_axis_video_TVALID : IN STD_LOGIC;
        srcYUV_din : OUT STD_LOGIC_VECTOR (29 downto 0);
        srcYUV_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
        srcYUV_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
        srcYUV_full_n : IN STD_LOGIC;
        srcYUV_write : OUT STD_LOGIC;
        sof_4 : IN STD_LOGIC_VECTOR (0 downto 0);
        axi_last_2 : IN STD_LOGIC_VECTOR (0 downto 0);
        axi_data_6 : IN STD_LOGIC_VECTOR (29 downto 0);
        empty : IN STD_LOGIC_VECTOR (10 downto 0);
        cond : IN STD_LOGIC_VECTOR (0 downto 0);
        s_axis_video_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        s_axis_video_TREADY : OUT STD_LOGIC;
        s_axis_video_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
        s_axis_video_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        s_axis_video_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        s_axis_video_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        s_axis_video_TID : IN STD_LOGIC_VECTOR (0 downto 0);
        s_axis_video_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
        eol_out : OUT STD_LOGIC_VECTOR (0 downto 0);
        eol_out_ap_vld : OUT STD_LOGIC;
        axi_data_7_out : OUT STD_LOGIC_VECTOR (29 downto 0);
        axi_data_7_out_ap_vld : OUT STD_LOGIC );
    end component;


    component design_1_v_tpg_0_0_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_eol IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        s_axis_video_TVALID : IN STD_LOGIC;
        axi_data_7_reload : IN STD_LOGIC_VECTOR (29 downto 0);
        select_ln897 : IN STD_LOGIC_VECTOR (0 downto 0);
        eol_reload : IN STD_LOGIC_VECTOR (0 downto 0);
        s_axis_video_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        s_axis_video_TREADY : OUT STD_LOGIC;
        s_axis_video_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
        s_axis_video_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        s_axis_video_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        s_axis_video_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        s_axis_video_TID : IN STD_LOGIC_VECTOR (0 downto 0);
        s_axis_video_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
        axi_data_4_out : OUT STD_LOGIC_VECTOR (29 downto 0);
        axi_data_4_out_ap_vld : OUT STD_LOGIC;
        axi_last_4_out : OUT STD_LOGIC_VECTOR (0 downto 0);
        axi_last_4_out_ap_vld : OUT STD_LOGIC );
    end component;


    component design_1_v_tpg_0_0_reg_unsigned_short_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        d : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_start_fu_202 : component design_1_v_tpg_0_0_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_start
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_start_fu_202_ap_start,
        ap_done => grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_start_fu_202_ap_done,
        ap_idle => grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_start_fu_202_ap_idle,
        ap_ready => grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_start_fu_202_ap_ready,
        s_axis_video_TVALID => s_axis_video_TVALID,
        s_axis_video_TDATA => s_axis_video_TDATA,
        s_axis_video_TREADY => grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_start_fu_202_s_axis_video_TREADY,
        s_axis_video_TKEEP => s_axis_video_TKEEP,
        s_axis_video_TSTRB => s_axis_video_TSTRB,
        s_axis_video_TUSER => s_axis_video_TUSER,
        s_axis_video_TLAST => s_axis_video_TLAST,
        s_axis_video_TID => s_axis_video_TID,
        s_axis_video_TDEST => s_axis_video_TDEST,
        axi_data_out => grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_start_fu_202_axi_data_out,
        axi_data_out_ap_vld => grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_start_fu_202_axi_data_out_ap_vld,
        axi_last_out => grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_start_fu_202_axi_last_out,
        axi_last_out_ap_vld => grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_start_fu_202_axi_last_out_ap_vld);

    grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_222 : component design_1_v_tpg_0_0_AXIvideo2MultiPixStream_Pipeline_loop_width
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_222_ap_start,
        ap_done => grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_222_ap_done,
        ap_idle => grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_222_ap_idle,
        ap_ready => grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_222_ap_ready,
        s_axis_video_TVALID => s_axis_video_TVALID,
        srcYUV_din => grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_222_srcYUV_din,
        srcYUV_num_data_valid => ap_const_lv5_0,
        srcYUV_fifo_cap => ap_const_lv5_0,
        srcYUV_full_n => srcYUV_full_n,
        srcYUV_write => grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_222_srcYUV_write,
        sof_4 => sof_reg_180,
        axi_last_2 => axi_last_2_reg_192,
        axi_data_6 => axi_data_6_fu_116,
        empty => trunc_ln828_reg_409,
        cond => cond_reg_429,
        s_axis_video_TDATA => s_axis_video_TDATA,
        s_axis_video_TREADY => grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_222_s_axis_video_TREADY,
        s_axis_video_TKEEP => s_axis_video_TKEEP,
        s_axis_video_TSTRB => s_axis_video_TSTRB,
        s_axis_video_TUSER => s_axis_video_TUSER,
        s_axis_video_TLAST => s_axis_video_TLAST,
        s_axis_video_TID => s_axis_video_TID,
        s_axis_video_TDEST => s_axis_video_TDEST,
        eol_out => grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_222_eol_out,
        eol_out_ap_vld => grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_222_eol_out_ap_vld,
        axi_data_7_out => grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_222_axi_data_7_out,
        axi_data_7_out_ap_vld => grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_222_axi_data_7_out_ap_vld);

    grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_eol_fu_251 : component design_1_v_tpg_0_0_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_eol
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_eol_fu_251_ap_start,
        ap_done => grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_eol_fu_251_ap_done,
        ap_idle => grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_eol_fu_251_ap_idle,
        ap_ready => grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_eol_fu_251_ap_ready,
        s_axis_video_TVALID => s_axis_video_TVALID,
        axi_data_7_reload => grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_222_axi_data_7_out,
        select_ln897 => select_ln897_reg_464,
        eol_reload => grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_222_eol_out,
        s_axis_video_TDATA => s_axis_video_TDATA,
        s_axis_video_TREADY => grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_eol_fu_251_s_axis_video_TREADY,
        s_axis_video_TKEEP => s_axis_video_TKEEP,
        s_axis_video_TSTRB => s_axis_video_TSTRB,
        s_axis_video_TUSER => s_axis_video_TUSER,
        s_axis_video_TLAST => s_axis_video_TLAST,
        s_axis_video_TID => s_axis_video_TID,
        s_axis_video_TDEST => s_axis_video_TDEST,
        axi_data_4_out => grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_eol_fu_251_axi_data_4_out,
        axi_data_4_out_ap_vld => grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_eol_fu_251_axi_data_4_out_ap_vld,
        axi_last_4_out => grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_eol_fu_251_axi_last_4_out,
        axi_last_4_out_ap_vld => grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_eol_fu_251_axi_last_4_out_ap_vld);

    grp_reg_unsigned_short_s_fu_274 : component design_1_v_tpg_0_0_reg_unsigned_short_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_reg_unsigned_short_s_fu_274_ap_start,
        ap_done => grp_reg_unsigned_short_s_fu_274_ap_done,
        ap_idle => grp_reg_unsigned_short_s_fu_274_ap_idle,
        ap_ready => grp_reg_unsigned_short_s_fu_274_ap_ready,
        ap_ce => grp_reg_unsigned_short_s_fu_274_ap_ce,
        d => Height_val,
        ap_return => grp_reg_unsigned_short_s_fu_274_ap_return);

    grp_reg_unsigned_short_s_fu_280 : component design_1_v_tpg_0_0_reg_unsigned_short_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_reg_unsigned_short_s_fu_280_ap_start,
        ap_done => grp_reg_unsigned_short_s_fu_280_ap_done,
        ap_idle => grp_reg_unsigned_short_s_fu_280_ap_idle,
        ap_ready => grp_reg_unsigned_short_s_fu_280_ap_ready,
        ap_ce => grp_reg_unsigned_short_s_fu_280_ap_ce,
        d => WidthIn_val,
        ap_return => grp_reg_unsigned_short_s_fu_280_ap_return);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and ((icmp_ln834_reg_400 = ap_const_lv1_1) or (icmp_ln845_fu_327_p2 = ap_const_lv1_1)))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_eol_fu_251_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_eol_fu_251_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                    grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_eol_fu_251_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_eol_fu_251_ap_ready = ap_const_logic_1)) then 
                    grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_eol_fu_251_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_start_fu_202_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_start_fu_202_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln834_reg_400 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_start_fu_202_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_start_fu_202_ap_ready = ap_const_logic_1)) then 
                    grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_start_fu_202_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_222_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_222_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln834_reg_400 = ap_const_lv1_0) and (icmp_ln845_fu_327_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                    grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_222_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_222_ap_ready = ap_const_logic_1)) then 
                    grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_222_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    axi_data_6_fu_116_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_eol_fu_251_axi_data_4_out_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                axi_data_6_fu_116 <= grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_eol_fu_251_axi_data_4_out;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_start_fu_202_axi_data_out_ap_vld = ap_const_logic_1))) then 
                axi_data_6_fu_116 <= grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_start_fu_202_axi_data_out;
            end if; 
        end if;
    end process;

    axi_last_2_reg_192_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                axi_last_2_reg_192 <= axi_last_4_loc_fu_100;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                axi_last_2_reg_192 <= grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_start_fu_202_axi_last_out;
            end if; 
        end if;
    end process;

    i_fu_120_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((icmp_ln834_reg_400 = ap_const_lv1_0)) then
                if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    i_fu_120 <= ap_const_lv11_0;
                elsif (((icmp_ln845_fu_327_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                    i_fu_120 <= i_4_fu_332_p2;
                end if;
            end if; 
        end if;
    end process;

    sof_reg_180_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                sof_reg_180 <= and_ln897_reg_453;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                sof_reg_180 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                and_ln897_reg_453 <= and_ln897_fu_342_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_eol_fu_251_axi_last_4_out_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                axi_last_4_loc_fu_100 <= grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_eol_fu_251_axi_last_4_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                cmp10402_reg_437 <= cmp10402_fu_313_p2;
                xor_ln897_reg_442 <= xor_ln897_fu_318_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                cond_reg_429 <= cond_fu_300_p2;
                trunc_ln827_reg_404 <= trunc_ln827_fu_292_p1;
                trunc_ln828_reg_409 <= trunc_ln828_fu_296_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                icmp_ln834_reg_400 <= icmp_ln834_fu_286_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                select_ln897_reg_464 <= select_ln897_fu_360_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_CS_fsm_state1, ap_block_state1, icmp_ln834_reg_400, ap_CS_fsm_state2, ap_CS_fsm_state5, grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_start_fu_202_ap_done, grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_222_ap_done, grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_eol_fu_251_ap_done, ap_CS_fsm_state3, icmp_ln845_fu_327_p2, ap_CS_fsm_state6, ap_CS_fsm_state9)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_boolean_0 = ap_block_state1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln834_reg_400 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_start_fu_202_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and ((icmp_ln834_reg_400 = ap_const_lv1_1) or (icmp_ln845_fu_327_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_222_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and (grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_eol_fu_251_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXX";
        end case;
    end process;
    and_ln897_fu_342_p2 <= (xor_ln897_reg_442 and sof_reg_180);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_block_state1)
    begin
        if ((ap_const_boolean_1 = ap_block_state1)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_start_fu_202_ap_done)
    begin
        if ((grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_start_fu_202_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;

    ap_ST_fsm_state6_blk_assign_proc : process(grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_222_ap_done)
    begin
        if ((grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_222_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;

    ap_ST_fsm_state9_blk_assign_proc : process(grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_eol_fu_251_ap_done)
    begin
        if ((grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_eol_fu_251_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state9_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state9_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, height_val4_c3_full_n, width_val7_c4_full_n, enableInput_val15_c_full_n, colorFormat_val20_c5_full_n)
    begin
                ap_block_state1 <= ((colorFormat_val20_c5_full_n = ap_const_logic_0) or (enableInput_val15_c_full_n = ap_const_logic_0) or (width_val7_c4_full_n = ap_const_logic_0) or (height_val4_c3_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state1_ignore_call19_assign_proc : process(ap_start, ap_done_reg, height_val4_c3_full_n, width_val7_c4_full_n, enableInput_val15_c_full_n, colorFormat_val20_c5_full_n)
    begin
                ap_block_state1_ignore_call19 <= ((colorFormat_val20_c5_full_n = ap_const_logic_0) or (enableInput_val15_c_full_n = ap_const_logic_0) or (width_val7_c4_full_n = ap_const_logic_0) or (height_val4_c3_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state1_ignore_call21_assign_proc : process(ap_start, ap_done_reg, height_val4_c3_full_n, width_val7_c4_full_n, enableInput_val15_c_full_n, colorFormat_val20_c5_full_n)
    begin
                ap_block_state1_ignore_call21 <= ((colorFormat_val20_c5_full_n = ap_const_logic_0) or (enableInput_val15_c_full_n = ap_const_logic_0) or (width_val7_c4_full_n = ap_const_logic_0) or (height_val4_c3_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, icmp_ln834_reg_400, ap_CS_fsm_state5, icmp_ln845_fu_327_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and ((icmp_ln834_reg_400 = ap_const_lv1_1) or (icmp_ln845_fu_327_p2 = ap_const_lv1_1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(icmp_ln834_reg_400, ap_CS_fsm_state5, icmp_ln845_fu_327_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and ((icmp_ln834_reg_400 = ap_const_lv1_1) or (icmp_ln845_fu_327_p2 = ap_const_lv1_1)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    cmp10402_fu_313_p2 <= "0" when (trunc_ln828_reg_409 = ap_const_lv11_0) else "1";

    colorFormat_val20_c5_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, colorFormat_val20_c5_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            colorFormat_val20_c5_blk_n <= colorFormat_val20_c5_full_n;
        else 
            colorFormat_val20_c5_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    colorFormat_val20_c5_din <= colorFormat_val;
    colorFormat_val20_c5_write <= colorFormat_val20_c5_write_local;

    colorFormat_val20_c5_write_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1)
    begin
        if (((ap_const_boolean_0 = ap_block_state1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            colorFormat_val20_c5_write_local <= ap_const_logic_1;
        else 
            colorFormat_val20_c5_write_local <= ap_const_logic_0;
        end if; 
    end process;

    cond_fu_300_p2 <= "1" when (colorFormat_val = ap_const_lv8_0) else "0";

    enableInput_val15_c_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, enableInput_val15_c_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            enableInput_val15_c_blk_n <= enableInput_val15_c_full_n;
        else 
            enableInput_val15_c_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    enableInput_val15_c_din <= enableInput_val;
    enableInput_val15_c_write <= enableInput_val15_c_write_local;

    enableInput_val15_c_write_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1)
    begin
        if (((ap_const_boolean_0 = ap_block_state1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            enableInput_val15_c_write_local <= ap_const_logic_1;
        else 
            enableInput_val15_c_write_local <= ap_const_logic_0;
        end if; 
    end process;

    grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_eol_fu_251_ap_start <= grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_eol_fu_251_ap_start_reg;
    grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_start_fu_202_ap_start <= grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_start_fu_202_ap_start_reg;
    grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_222_ap_start <= grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_222_ap_start_reg;

    grp_reg_unsigned_short_s_fu_274_ap_ce_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, ap_block_state1_ignore_call19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_boolean_0 = ap_block_state1_ignore_call19) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            grp_reg_unsigned_short_s_fu_274_ap_ce <= ap_const_logic_1;
        else 
            grp_reg_unsigned_short_s_fu_274_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_reg_unsigned_short_s_fu_274_ap_start_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, ap_block_state1_ignore_call19)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_boolean_0 = ap_block_state1_ignore_call19) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            grp_reg_unsigned_short_s_fu_274_ap_start <= ap_const_logic_1;
        else 
            grp_reg_unsigned_short_s_fu_274_ap_start <= ap_const_logic_0;
        end if; 
    end process;


    grp_reg_unsigned_short_s_fu_280_ap_ce_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, ap_block_state1_ignore_call21)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_boolean_0 = ap_block_state1_ignore_call21) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            grp_reg_unsigned_short_s_fu_280_ap_ce <= ap_const_logic_1;
        else 
            grp_reg_unsigned_short_s_fu_280_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_reg_unsigned_short_s_fu_280_ap_start_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, ap_block_state1_ignore_call21)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_boolean_0 = ap_block_state1_ignore_call21) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            grp_reg_unsigned_short_s_fu_280_ap_start <= ap_const_logic_1;
        else 
            grp_reg_unsigned_short_s_fu_280_ap_start <= ap_const_logic_0;
        end if; 
    end process;


    height_val4_c3_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, height_val4_c3_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            height_val4_c3_blk_n <= height_val4_c3_full_n;
        else 
            height_val4_c3_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    height_val4_c3_din <= Height_val;
    height_val4_c3_write <= height_val4_c3_write_local;

    height_val4_c3_write_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1)
    begin
        if (((ap_const_boolean_0 = ap_block_state1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            height_val4_c3_write_local <= ap_const_logic_1;
        else 
            height_val4_c3_write_local <= ap_const_logic_0;
        end if; 
    end process;

    i_4_fu_332_p2 <= std_logic_vector(unsigned(i_fu_120) + unsigned(ap_const_lv11_1));
    icmp_ln834_fu_286_p2 <= "1" when (enableInput_val = ap_const_lv8_0) else "0";
    icmp_ln845_fu_327_p2 <= "1" when (i_fu_120 = trunc_ln827_reg_404) else "0";

    s_axis_video_TREADY_assign_proc : process(grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_start_fu_202_s_axis_video_TREADY, grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_222_s_axis_video_TREADY, grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_eol_fu_251_s_axis_video_TREADY, ap_CS_fsm_state3, ap_CS_fsm_state6, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            s_axis_video_TREADY <= grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_eol_fu_251_s_axis_video_TREADY;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            s_axis_video_TREADY <= grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_222_s_axis_video_TREADY;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            s_axis_video_TREADY <= grp_AXIvideo2MultiPixStream_Pipeline_loop_wait_for_start_fu_202_s_axis_video_TREADY;
        else 
            s_axis_video_TREADY <= ap_const_logic_0;
        end if; 
    end process;

    select_ln897_fu_360_p3 <= 
        grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_222_eol_out when (cmp10402_reg_437(0) = '1') else 
        axi_last_2_reg_192;
    srcYUV_din <= grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_222_srcYUV_din;

    srcYUV_write_assign_proc : process(grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_222_srcYUV_write, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            srcYUV_write <= grp_AXIvideo2MultiPixStream_Pipeline_loop_width_fu_222_srcYUV_write;
        else 
            srcYUV_write <= ap_const_logic_0;
        end if; 
    end process;

    trunc_ln827_fu_292_p1 <= grp_reg_unsigned_short_s_fu_274_ap_return(11 - 1 downto 0);
    trunc_ln828_fu_296_p1 <= grp_reg_unsigned_short_s_fu_280_ap_return(11 - 1 downto 0);

    width_val7_c4_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, width_val7_c4_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            width_val7_c4_blk_n <= width_val7_c4_full_n;
        else 
            width_val7_c4_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    width_val7_c4_din <= WidthIn_val;
    width_val7_c4_write <= width_val7_c4_write_local;

    width_val7_c4_write_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1)
    begin
        if (((ap_const_boolean_0 = ap_block_state1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            width_val7_c4_write_local <= ap_const_logic_1;
        else 
            width_val7_c4_write_local <= ap_const_logic_0;
        end if; 
    end process;

    xor_ln897_fu_318_p2 <= (cmp10402_fu_313_p2 xor ap_const_lv1_1);
end behav;
