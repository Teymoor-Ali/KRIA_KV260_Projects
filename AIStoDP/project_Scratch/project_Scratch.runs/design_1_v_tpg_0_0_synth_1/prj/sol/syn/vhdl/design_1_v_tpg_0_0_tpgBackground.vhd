-- ==============================================================
-- Generated by Vitis HLS v2024.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity design_1_v_tpg_0_0_tpgBackground is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    srcYUV_dout : IN STD_LOGIC_VECTOR (29 downto 0);
    srcYUV_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
    srcYUV_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
    srcYUV_empty_n : IN STD_LOGIC;
    srcYUV_read : OUT STD_LOGIC;
    height_val_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    height_val_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    height_val_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    height_val_empty_n : IN STD_LOGIC;
    height_val_read : OUT STD_LOGIC;
    width_val_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    width_val_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    width_val_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    width_val_empty_n : IN STD_LOGIC;
    width_val_read : OUT STD_LOGIC;
    passthruStartX_val_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    passthruStartX_val_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    passthruStartX_val_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    passthruStartX_val_empty_n : IN STD_LOGIC;
    passthruStartX_val_read : OUT STD_LOGIC;
    passthruStartY_val_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    passthruStartY_val_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    passthruStartY_val_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    passthruStartY_val_empty_n : IN STD_LOGIC;
    passthruStartY_val_read : OUT STD_LOGIC;
    passthruEndX_val_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    passthruEndX_val_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    passthruEndX_val_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    passthruEndX_val_empty_n : IN STD_LOGIC;
    passthruEndX_val_read : OUT STD_LOGIC;
    passthruEndY_val_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    passthruEndY_val_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    passthruEndY_val_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    passthruEndY_val_empty_n : IN STD_LOGIC;
    passthruEndY_val_read : OUT STD_LOGIC;
    enableInput_val_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    enableInput_val_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    enableInput_val_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    enableInput_val_empty_n : IN STD_LOGIC;
    enableInput_val_read : OUT STD_LOGIC;
    patternId_val_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    patternId_val_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    patternId_val_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    patternId_val_empty_n : IN STD_LOGIC;
    patternId_val_read : OUT STD_LOGIC;
    motionSpeed_val_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    motionSpeed_val_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    motionSpeed_val_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    motionSpeed_val_empty_n : IN STD_LOGIC;
    motionSpeed_val_read : OUT STD_LOGIC;
    colorFormat_val_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    colorFormat_val_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    colorFormat_val_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    colorFormat_val_empty_n : IN STD_LOGIC;
    colorFormat_val_read : OUT STD_LOGIC;
    ovrlayYUV_din : OUT STD_LOGIC_VECTOR (29 downto 0);
    ovrlayYUV_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
    ovrlayYUV_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
    ovrlayYUV_full_n : IN STD_LOGIC;
    ovrlayYUV_write : OUT STD_LOGIC;
    height_val4_c_din : OUT STD_LOGIC_VECTOR (10 downto 0);
    height_val4_c_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    height_val4_c_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    height_val4_c_full_n : IN STD_LOGIC;
    height_val4_c_write : OUT STD_LOGIC;
    width_val7_c_din : OUT STD_LOGIC_VECTOR (10 downto 0);
    width_val7_c_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    width_val7_c_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    width_val7_c_full_n : IN STD_LOGIC;
    width_val7_c_write : OUT STD_LOGIC;
    colorFormat_val20_c_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    colorFormat_val20_c_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    colorFormat_val20_c_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    colorFormat_val20_c_full_n : IN STD_LOGIC;
    colorFormat_val20_c_write : OUT STD_LOGIC;
    s : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of design_1_v_tpg_0_0_tpgBackground is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv14_7 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000111";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv14_F : STD_LOGIC_VECTOR (13 downto 0) := "00000000001111";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv10_3FF : STD_LOGIC_VECTOR (9 downto 0) := "1111111111";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv11_7FF : STD_LOGIC_VECTOR (10 downto 0) := "11111111111";
    constant ap_const_lv17_1FFFF : STD_LOGIC_VECTOR (16 downto 0) := "11111111111111111";
    constant ap_const_lv10_200 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal hBarSel_3_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal vBarSel : STD_LOGIC_VECTOR (2 downto 0) := "000";
    signal hBarSel_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    signal vBarSel_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal hBarSel_2_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    signal rampStart : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal height_val_blk_n : STD_LOGIC;
    signal width_val_blk_n : STD_LOGIC;
    signal passthruStartX_val_blk_n : STD_LOGIC;
    signal passthruStartY_val_blk_n : STD_LOGIC;
    signal passthruEndX_val_blk_n : STD_LOGIC;
    signal passthruEndY_val_blk_n : STD_LOGIC;
    signal enableInput_val_blk_n : STD_LOGIC;
    signal patternId_val_blk_n : STD_LOGIC;
    signal motionSpeed_val_blk_n : STD_LOGIC;
    signal colorFormat_val_blk_n : STD_LOGIC;
    signal height_val4_c_blk_n : STD_LOGIC;
    signal width_val7_c_blk_n : STD_LOGIC;
    signal colorFormat_val20_c_blk_n : STD_LOGIC;
    signal colorFormatLocal_reg_758 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal motionSpeed_val_read_reg_763 : STD_LOGIC_VECTOR (7 downto 0);
    signal patternId_val_read_reg_768 : STD_LOGIC_VECTOR (7 downto 0);
    signal passthruEndY_val_read_reg_773 : STD_LOGIC_VECTOR (15 downto 0);
    signal passthruEndX_val_read_reg_778 : STD_LOGIC_VECTOR (15 downto 0);
    signal passthruStartY_val_read_reg_783 : STD_LOGIC_VECTOR (15 downto 0);
    signal passthruStartX_val_read_reg_788 : STD_LOGIC_VECTOR (15 downto 0);
    signal loopWidth_reg_793 : STD_LOGIC_VECTOR (15 downto 0);
    signal loopHeight_reg_798 : STD_LOGIC_VECTOR (15 downto 0);
    signal cmp8_fu_409_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp8_reg_803 : STD_LOGIC_VECTOR (0 downto 0);
    signal barWidth_reg_808 : STD_LOGIC_VECTOR (10 downto 0);
    signal empty_85_fu_443_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_85_reg_814 : STD_LOGIC_VECTOR (7 downto 0);
    signal cmp33_i_fu_447_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp33_i_reg_819 : STD_LOGIC_VECTOR (0 downto 0);
    signal barWidthMinSamples_fu_469_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal barWidthMinSamples_reg_824 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_fu_499_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_829 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_i_i_i_fu_519_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_i_i_i_reg_834 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub35_i_fu_525_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub35_i_reg_839 : STD_LOGIC_VECTOR (16 downto 0);
    signal conv2_i_i15_i_fu_531_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv2_i_i15_i_reg_844 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv2_i_i_i295_fu_539_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv2_i_i_i295_reg_849 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub10_i_fu_547_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub10_i_reg_854 : STD_LOGIC_VECTOR (16 downto 0);
    signal y_1_reg_859 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal outpix_load_reg_868 : STD_LOGIC_VECTOR (9 downto 0);
    signal outpix_1_load_reg_873 : STD_LOGIC_VECTOR (9 downto 0);
    signal outpix_2_load_reg_878 : STD_LOGIC_VECTOR (9 downto 0);
    signal ult_fu_642_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ult_reg_883 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp11_i_fu_647_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp11_i_reg_888 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev_fu_676_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev_reg_893 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal cmp_i_fu_682_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp_i_reg_898 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_ap_start : STD_LOGIC;
    signal grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_ap_done : STD_LOGIC;
    signal grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_ap_idle : STD_LOGIC;
    signal grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_ap_ready : STD_LOGIC;
    signal grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_srcYUV_read : STD_LOGIC;
    signal grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_ovrlayYUV_din : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_ovrlayYUV_write : STD_LOGIC;
    signal grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_hBarSel_3_0_loc_1_out_o : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_hBarSel_3_0_loc_1_out_o_ap_vld : STD_LOGIC;
    signal grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_vBarSel_loc_1_out_o : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_vBarSel_loc_1_out_o_ap_vld : STD_LOGIC;
    signal grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_hBarSel_0_loc_1_out_o : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_hBarSel_0_loc_1_out_o_ap_vld : STD_LOGIC;
    signal grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_vBarSel_1_loc_1_out_o : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_vBarSel_1_loc_1_out_o_ap_vld : STD_LOGIC;
    signal grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_hBarSel_2_0_loc_1_out_o : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_hBarSel_2_0_loc_1_out_o_ap_vld : STD_LOGIC;
    signal grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_outpix_5_out : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_outpix_5_out_ap_vld : STD_LOGIC;
    signal grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_outpix_4_out : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_outpix_4_out_ap_vld : STD_LOGIC;
    signal grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_outpix_3_out : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_outpix_3_out_ap_vld : STD_LOGIC;
    signal grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_p_0_0_0247_out_o : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_p_0_0_0247_out_o_ap_vld : STD_LOGIC;
    signal grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_p_0_0_09245_out_o : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_p_0_0_09245_out_o_ap_vld : STD_LOGIC;
    signal grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_p_0_0_010243_out_o : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_p_0_0_010243_out_o_ap_vld : STD_LOGIC;
    signal grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_hBarSel_3_0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_hBarSel_3_0_ap_vld : STD_LOGIC;
    signal grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_hBarSel_0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_hBarSel_0_ap_vld : STD_LOGIC;
    signal grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_vBarSel : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_vBarSel_ap_vld : STD_LOGIC;
    signal grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_hBarSel_2_0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_hBarSel_2_0_ap_vld : STD_LOGIC;
    signal grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_vBarSel_1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_vBarSel_1_ap_vld : STD_LOGIC;
    signal grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal hBarSel_3_0_loc_0_fu_216 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal vBarSel_loc_0_fu_212 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal hBarSel_0_loc_0_fu_208 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal vBarSel_1_loc_0_fu_204 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal hBarSel_2_0_loc_0_fu_200 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal outpix_2_fu_196 : STD_LOGIC_VECTOR (9 downto 0);
    signal outpix_1_fu_192 : STD_LOGIC_VECTOR (9 downto 0);
    signal outpix_fu_188 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_0_0_0248_lcssa257_fu_180 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_0_0_09246_lcssa254_fu_176 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_0_0_010244_lcssa251_fu_172 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln750_fu_664_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln563_fu_618_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal y_fu_184 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal add_ln563_fu_623_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln563_fu_581_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1575_fu_569_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1412_fu_561_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal colorFormat_val_read_local : STD_LOGIC;
    signal colorFormat_val20_c_write_local : STD_LOGIC;
    signal motionSpeed_val_read_local : STD_LOGIC;
    signal patternId_val_read_local : STD_LOGIC;
    signal enableInput_val_read_local : STD_LOGIC;
    signal passthruEndY_val_read_local : STD_LOGIC;
    signal passthruEndX_val_read_local : STD_LOGIC;
    signal passthruStartY_val_read_local : STD_LOGIC;
    signal passthruStartX_val_read_local : STD_LOGIC;
    signal width_val_read_local : STD_LOGIC;
    signal empty_fu_399_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal width_val7_c_write_local : STD_LOGIC;
    signal height_val_read_local : STD_LOGIC;
    signal empty_83_fu_404_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal height_val4_c_write_local : STD_LOGIC;
    signal empty_84_fu_423_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_i_fu_427_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add2_i_fu_453_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_cast_fu_459_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_86_fu_479_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_9_fu_489_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal add5_i_fu_483_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_fu_505_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal barHeight_cast_fu_515_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal width_val_cast10_fu_419_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal height_val_cast11_fu_475_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln563_1_fu_638_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln750_fu_661_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component design_1_v_tpg_0_0_tpgBackground_Pipeline_VITIS_LOOP_565_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        srcYUV_dout : IN STD_LOGIC_VECTOR (29 downto 0);
        srcYUV_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
        srcYUV_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
        srcYUV_empty_n : IN STD_LOGIC;
        srcYUV_read : OUT STD_LOGIC;
        ovrlayYUV_din : OUT STD_LOGIC_VECTOR (29 downto 0);
        ovrlayYUV_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
        ovrlayYUV_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
        ovrlayYUV_full_n : IN STD_LOGIC;
        ovrlayYUV_write : OUT STD_LOGIC;
        outpix_2 : IN STD_LOGIC_VECTOR (9 downto 0);
        outpix_1 : IN STD_LOGIC_VECTOR (9 downto 0);
        outpix : IN STD_LOGIC_VECTOR (9 downto 0);
        loopWidth : IN STD_LOGIC_VECTOR (15 downto 0);
        conv2_i_i_i295 : IN STD_LOGIC_VECTOR (9 downto 0);
        conv2_i_i15_i : IN STD_LOGIC_VECTOR (9 downto 0);
        cmp8 : IN STD_LOGIC_VECTOR (0 downto 0);
        patternId_val_load : IN STD_LOGIC_VECTOR (7 downto 0);
        colorFormatLocal : IN STD_LOGIC_VECTOR (7 downto 0);
        empty : IN STD_LOGIC_VECTOR (7 downto 0);
        cmp33_i : IN STD_LOGIC_VECTOR (0 downto 0);
        barWidth_cast : IN STD_LOGIC_VECTOR (10 downto 0);
        barWidth : IN STD_LOGIC_VECTOR (10 downto 0);
        y : IN STD_LOGIC_VECTOR (15 downto 0);
        sub_i_i_i : IN STD_LOGIC_VECTOR (10 downto 0);
        barWidthMinSamples : IN STD_LOGIC_VECTOR (9 downto 0);
        cmp11_i : IN STD_LOGIC_VECTOR (0 downto 0);
        cmp_i : IN STD_LOGIC_VECTOR (0 downto 0);
        sub35_i : IN STD_LOGIC_VECTOR (16 downto 0);
        icmp : IN STD_LOGIC_VECTOR (0 downto 0);
        passthruEndX_val_load : IN STD_LOGIC_VECTOR (15 downto 0);
        passthruStartX_val_load : IN STD_LOGIC_VECTOR (15 downto 0);
        passthruStartY_val_load : IN STD_LOGIC_VECTOR (15 downto 0);
        rev : IN STD_LOGIC_VECTOR (0 downto 0);
        hBarSel_3_0_loc_1_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
        hBarSel_3_0_loc_1_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
        hBarSel_3_0_loc_1_out_o_ap_vld : OUT STD_LOGIC;
        vBarSel_loc_1_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
        vBarSel_loc_1_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
        vBarSel_loc_1_out_o_ap_vld : OUT STD_LOGIC;
        hBarSel_0_loc_1_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
        hBarSel_0_loc_1_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
        hBarSel_0_loc_1_out_o_ap_vld : OUT STD_LOGIC;
        vBarSel_1_loc_1_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
        vBarSel_1_loc_1_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
        vBarSel_1_loc_1_out_o_ap_vld : OUT STD_LOGIC;
        hBarSel_2_0_loc_1_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
        hBarSel_2_0_loc_1_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
        hBarSel_2_0_loc_1_out_o_ap_vld : OUT STD_LOGIC;
        outpix_5_out : OUT STD_LOGIC_VECTOR (9 downto 0);
        outpix_5_out_ap_vld : OUT STD_LOGIC;
        outpix_4_out : OUT STD_LOGIC_VECTOR (9 downto 0);
        outpix_4_out_ap_vld : OUT STD_LOGIC;
        outpix_3_out : OUT STD_LOGIC_VECTOR (9 downto 0);
        outpix_3_out_ap_vld : OUT STD_LOGIC;
        p_0_0_0247_out_i : IN STD_LOGIC_VECTOR (9 downto 0);
        p_0_0_0247_out_o : OUT STD_LOGIC_VECTOR (9 downto 0);
        p_0_0_0247_out_o_ap_vld : OUT STD_LOGIC;
        p_0_0_09245_out_i : IN STD_LOGIC_VECTOR (9 downto 0);
        p_0_0_09245_out_o : OUT STD_LOGIC_VECTOR (9 downto 0);
        p_0_0_09245_out_o_ap_vld : OUT STD_LOGIC;
        p_0_0_010243_out_i : IN STD_LOGIC_VECTOR (9 downto 0);
        p_0_0_010243_out_o : OUT STD_LOGIC_VECTOR (9 downto 0);
        p_0_0_010243_out_o_ap_vld : OUT STD_LOGIC;
        hBarSel_3_0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        hBarSel_3_0_ap_vld : OUT STD_LOGIC;
        hBarSel_0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        hBarSel_0_ap_vld : OUT STD_LOGIC;
        vBarSel : OUT STD_LOGIC_VECTOR (2 downto 0);
        vBarSel_ap_vld : OUT STD_LOGIC;
        hBarSel_2_0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        hBarSel_2_0_ap_vld : OUT STD_LOGIC;
        vBarSel_1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        vBarSel_1_ap_vld : OUT STD_LOGIC );
    end component;



begin
    grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302 : component design_1_v_tpg_0_0_tpgBackground_Pipeline_VITIS_LOOP_565_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_ap_start,
        ap_done => grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_ap_done,
        ap_idle => grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_ap_idle,
        ap_ready => grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_ap_ready,
        srcYUV_dout => srcYUV_dout,
        srcYUV_num_data_valid => ap_const_lv5_0,
        srcYUV_fifo_cap => ap_const_lv5_0,
        srcYUV_empty_n => srcYUV_empty_n,
        srcYUV_read => grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_srcYUV_read,
        ovrlayYUV_din => grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_ovrlayYUV_din,
        ovrlayYUV_num_data_valid => ap_const_lv5_0,
        ovrlayYUV_fifo_cap => ap_const_lv5_0,
        ovrlayYUV_full_n => ovrlayYUV_full_n,
        ovrlayYUV_write => grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_ovrlayYUV_write,
        outpix_2 => outpix_2_load_reg_878,
        outpix_1 => outpix_1_load_reg_873,
        outpix => outpix_load_reg_868,
        loopWidth => loopWidth_reg_793,
        conv2_i_i_i295 => conv2_i_i_i295_reg_849,
        conv2_i_i15_i => conv2_i_i15_i_reg_844,
        cmp8 => cmp8_reg_803,
        patternId_val_load => patternId_val_read_reg_768,
        colorFormatLocal => colorFormatLocal_reg_758,
        empty => empty_85_reg_814,
        cmp33_i => cmp33_i_reg_819,
        barWidth_cast => barWidth_reg_808,
        barWidth => barWidth_reg_808,
        y => y_1_reg_859,
        sub_i_i_i => sub_i_i_i_reg_834,
        barWidthMinSamples => barWidthMinSamples_reg_824,
        cmp11_i => cmp11_i_reg_888,
        cmp_i => cmp_i_reg_898,
        sub35_i => sub35_i_reg_839,
        icmp => icmp_reg_829,
        passthruEndX_val_load => passthruEndX_val_read_reg_778,
        passthruStartX_val_load => passthruStartX_val_read_reg_788,
        passthruStartY_val_load => passthruStartY_val_read_reg_783,
        rev => rev_reg_893,
        hBarSel_3_0_loc_1_out_i => hBarSel_3_0_loc_0_fu_216,
        hBarSel_3_0_loc_1_out_o => grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_hBarSel_3_0_loc_1_out_o,
        hBarSel_3_0_loc_1_out_o_ap_vld => grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_hBarSel_3_0_loc_1_out_o_ap_vld,
        vBarSel_loc_1_out_i => vBarSel_loc_0_fu_212,
        vBarSel_loc_1_out_o => grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_vBarSel_loc_1_out_o,
        vBarSel_loc_1_out_o_ap_vld => grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_vBarSel_loc_1_out_o_ap_vld,
        hBarSel_0_loc_1_out_i => hBarSel_0_loc_0_fu_208,
        hBarSel_0_loc_1_out_o => grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_hBarSel_0_loc_1_out_o,
        hBarSel_0_loc_1_out_o_ap_vld => grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_hBarSel_0_loc_1_out_o_ap_vld,
        vBarSel_1_loc_1_out_i => vBarSel_1_loc_0_fu_204,
        vBarSel_1_loc_1_out_o => grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_vBarSel_1_loc_1_out_o,
        vBarSel_1_loc_1_out_o_ap_vld => grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_vBarSel_1_loc_1_out_o_ap_vld,
        hBarSel_2_0_loc_1_out_i => hBarSel_2_0_loc_0_fu_200,
        hBarSel_2_0_loc_1_out_o => grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_hBarSel_2_0_loc_1_out_o,
        hBarSel_2_0_loc_1_out_o_ap_vld => grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_hBarSel_2_0_loc_1_out_o_ap_vld,
        outpix_5_out => grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_outpix_5_out,
        outpix_5_out_ap_vld => grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_outpix_5_out_ap_vld,
        outpix_4_out => grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_outpix_4_out,
        outpix_4_out_ap_vld => grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_outpix_4_out_ap_vld,
        outpix_3_out => grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_outpix_3_out,
        outpix_3_out_ap_vld => grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_outpix_3_out_ap_vld,
        p_0_0_0247_out_i => p_0_0_0248_lcssa257_fu_180,
        p_0_0_0247_out_o => grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_p_0_0_0247_out_o,
        p_0_0_0247_out_o_ap_vld => grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_p_0_0_0247_out_o_ap_vld,
        p_0_0_09245_out_i => p_0_0_09246_lcssa254_fu_176,
        p_0_0_09245_out_o => grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_p_0_0_09245_out_o,
        p_0_0_09245_out_o_ap_vld => grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_p_0_0_09245_out_o_ap_vld,
        p_0_0_010243_out_i => p_0_0_010244_lcssa251_fu_172,
        p_0_0_010243_out_o => grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_p_0_0_010243_out_o,
        p_0_0_010243_out_o_ap_vld => grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_p_0_0_010243_out_o_ap_vld,
        hBarSel_3_0 => grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_hBarSel_3_0,
        hBarSel_3_0_ap_vld => grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_hBarSel_3_0_ap_vld,
        hBarSel_0 => grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_hBarSel_0,
        hBarSel_0_ap_vld => grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_hBarSel_0_ap_vld,
        vBarSel => grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_vBarSel,
        vBarSel_ap_vld => grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_vBarSel_ap_vld,
        hBarSel_2_0 => grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_hBarSel_2_0,
        hBarSel_2_0_ap_vld => grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_hBarSel_2_0_ap_vld,
        vBarSel_1 => grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_vBarSel_1,
        vBarSel_1_ap_vld => grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_vBarSel_1_ap_vld);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((icmp_ln563_fu_618_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_ap_ready = ap_const_logic_1)) then 
                    grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    hBarSel_0_loc_0_fu_208_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then 
                hBarSel_0_loc_0_fu_208 <= zext_ln1575_fu_569_p1;
            elsif (((grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_hBarSel_0_loc_1_out_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                hBarSel_0_loc_0_fu_208 <= grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_hBarSel_0_loc_1_out_o;
            end if; 
        end if;
    end process;

    hBarSel_2_0_loc_0_fu_200_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then 
                hBarSel_2_0_loc_0_fu_200 <= zext_ln563_fu_581_p1;
            elsif (((grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_hBarSel_2_0_loc_1_out_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                hBarSel_2_0_loc_0_fu_200 <= grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_hBarSel_2_0_loc_1_out_o;
            end if; 
        end if;
    end process;

    hBarSel_3_0_loc_0_fu_216_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then 
                hBarSel_3_0_loc_0_fu_216 <= hBarSel_3_0;
            elsif (((grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_hBarSel_3_0_loc_1_out_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                hBarSel_3_0_loc_0_fu_216 <= grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_hBarSel_3_0_loc_1_out_o;
            end if; 
        end if;
    end process;

    vBarSel_1_loc_0_fu_204_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then 
                vBarSel_1_loc_0_fu_204 <= vBarSel_1;
            elsif (((grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_vBarSel_1_loc_1_out_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                vBarSel_1_loc_0_fu_204 <= grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_vBarSel_1_loc_1_out_o;
            end if; 
        end if;
    end process;

    vBarSel_loc_0_fu_212_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then 
                vBarSel_loc_0_fu_212 <= zext_ln1412_fu_561_p1;
            elsif (((grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_vBarSel_loc_1_out_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                vBarSel_loc_0_fu_212 <= grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_vBarSel_loc_1_out_o;
            end if; 
        end if;
    end process;

    y_fu_184_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then 
                y_fu_184 <= ap_const_lv16_0;
            elsif (((icmp_ln563_fu_618_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                y_fu_184 <= add_ln563_fu_623_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then
                barWidthMinSamples_reg_824 <= barWidthMinSamples_fu_469_p2;
                barWidth_reg_808 <= add_i_fu_427_p2(13 downto 3);
                cmp33_i_reg_819 <= cmp33_i_fu_447_p2;
                cmp8_reg_803 <= cmp8_fu_409_p2;
                colorFormatLocal_reg_758 <= colorFormat_val_dout;
                    conv2_i_i15_i_reg_844(8 downto 0) <= conv2_i_i15_i_fu_531_p3(8 downto 0);
                    conv2_i_i_i295_reg_849(9) <= conv2_i_i_i295_fu_539_p3(9);
                empty_85_reg_814 <= empty_85_fu_443_p1;
                icmp_reg_829 <= icmp_fu_499_p2;
                loopHeight_reg_798 <= height_val_dout;
                loopWidth_reg_793 <= width_val_dout;
                motionSpeed_val_read_reg_763 <= motionSpeed_val_dout;
                passthruEndX_val_read_reg_778 <= passthruEndX_val_dout;
                passthruEndY_val_read_reg_773 <= passthruEndY_val_dout;
                passthruStartX_val_read_reg_788 <= passthruStartX_val_dout;
                passthruStartY_val_read_reg_783 <= passthruStartY_val_dout;
                patternId_val_read_reg_768 <= patternId_val_dout;
                sub10_i_reg_854 <= sub10_i_fu_547_p2;
                sub35_i_reg_839 <= sub35_i_fu_525_p2;
                sub_i_i_i_reg_834 <= sub_i_i_i_fu_519_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                cmp11_i_reg_888 <= cmp11_i_fu_647_p2;
                outpix_1_load_reg_873 <= outpix_1_fu_192;
                outpix_2_load_reg_878 <= outpix_2_fu_196;
                outpix_load_reg_868 <= outpix_fu_188;
                ult_reg_883 <= ult_fu_642_p2;
                y_1_reg_859 <= y_fu_184;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                cmp_i_reg_898 <= cmp_i_fu_682_p2;
                rev_reg_893 <= rev_fu_676_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_hBarSel_0_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                hBarSel_0 <= grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_hBarSel_0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_hBarSel_2_0_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                hBarSel_2_0 <= grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_hBarSel_2_0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_hBarSel_3_0_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                hBarSel_3_0 <= grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_hBarSel_3_0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_outpix_4_out_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                outpix_1_fu_192 <= grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_outpix_4_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_outpix_5_out_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                outpix_2_fu_196 <= grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_outpix_5_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_outpix_3_out_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                outpix_fu_188 <= grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_outpix_3_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_p_0_0_010243_out_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                p_0_0_010244_lcssa251_fu_172 <= grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_p_0_0_010243_out_o;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_p_0_0_0247_out_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                p_0_0_0248_lcssa257_fu_180 <= grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_p_0_0_0247_out_o;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_p_0_0_09245_out_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                p_0_0_09246_lcssa254_fu_176 <= grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_p_0_0_09245_out_o;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln563_fu_618_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                rampStart <= add_ln750_fu_664_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_vBarSel_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                vBarSel <= grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_vBarSel;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_vBarSel_1_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                vBarSel_1 <= grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_vBarSel_1;
            end if;
        end if;
    end process;
    conv2_i_i15_i_reg_844(9) <= '1';
    conv2_i_i_i295_reg_849(8 downto 0) <= "000000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_CS_fsm_state1, ap_block_state1, ap_CS_fsm_state2, grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_ap_done, ap_CS_fsm_state4, icmp_ln563_fu_618_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln563_fu_618_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    add2_i_fu_453_p2 <= std_logic_vector(unsigned(empty_84_fu_423_p1) + unsigned(ap_const_lv14_F));
    add5_i_fu_483_p2 <= std_logic_vector(unsigned(empty_86_fu_479_p1) + unsigned(ap_const_lv14_F));
    add_i_fu_427_p2 <= std_logic_vector(unsigned(empty_84_fu_423_p1) + unsigned(ap_const_lv14_7));
    add_ln563_fu_623_p2 <= std_logic_vector(unsigned(y_fu_184) + unsigned(ap_const_lv16_1));
    add_ln750_fu_664_p2 <= std_logic_vector(unsigned(rampStart) + unsigned(zext_ln750_fu_661_p1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_block_state1)
    begin
        if ((ap_const_boolean_1 = ap_block_state1)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_ap_done)
    begin
        if ((grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, height_val_empty_n, width_val_empty_n, passthruStartX_val_empty_n, passthruStartY_val_empty_n, passthruEndX_val_empty_n, passthruEndY_val_empty_n, enableInput_val_empty_n, patternId_val_empty_n, motionSpeed_val_empty_n, colorFormat_val_empty_n, height_val4_c_full_n, width_val7_c_full_n, colorFormat_val20_c_full_n)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (colorFormat_val_empty_n = ap_const_logic_0) or (motionSpeed_val_empty_n = ap_const_logic_0) or (patternId_val_empty_n = ap_const_logic_0) or (enableInput_val_empty_n = ap_const_logic_0) or (passthruEndY_val_empty_n = ap_const_logic_0) or (passthruEndX_val_empty_n = ap_const_logic_0) or (passthruStartY_val_empty_n = ap_const_logic_0) or (passthruStartX_val_empty_n = ap_const_logic_0) or (width_val_empty_n = ap_const_logic_0) or (height_val_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (colorFormat_val20_c_full_n = ap_const_logic_0) or (width_val7_c_full_n = ap_const_logic_0) or (height_val4_c_full_n = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state2, icmp_ln563_fu_618_p2)
    begin
        if (((icmp_ln563_fu_618_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln563_fu_618_p2)
    begin
        if (((icmp_ln563_fu_618_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    barHeight_cast_fu_515_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_505_p4),11));
    barWidthMinSamples_fu_469_p2 <= std_logic_vector(unsigned(p_cast_fu_459_p4) + unsigned(ap_const_lv10_3FF));
    cmp11_i_fu_647_p2 <= "1" when (sub10_i_reg_854 = zext_ln563_1_fu_638_p1) else "0";
    cmp33_i_fu_447_p2 <= "1" when (colorFormat_val_dout = ap_const_lv8_0) else "0";
    cmp8_fu_409_p2 <= "0" when (enableInput_val_dout = ap_const_lv8_0) else "1";
    cmp_i_fu_682_p2 <= "1" when (y_1_reg_859 = ap_const_lv16_0) else "0";

    colorFormat_val20_c_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, colorFormat_val20_c_full_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            colorFormat_val20_c_blk_n <= colorFormat_val20_c_full_n;
        else 
            colorFormat_val20_c_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    colorFormat_val20_c_din <= colorFormat_val_dout;
    colorFormat_val20_c_write <= colorFormat_val20_c_write_local;

    colorFormat_val20_c_write_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then 
            colorFormat_val20_c_write_local <= ap_const_logic_1;
        else 
            colorFormat_val20_c_write_local <= ap_const_logic_0;
        end if; 
    end process;


    colorFormat_val_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, colorFormat_val_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            colorFormat_val_blk_n <= colorFormat_val_empty_n;
        else 
            colorFormat_val_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    colorFormat_val_read <= colorFormat_val_read_local;

    colorFormat_val_read_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then 
            colorFormat_val_read_local <= ap_const_logic_1;
        else 
            colorFormat_val_read_local <= ap_const_logic_0;
        end if; 
    end process;

    conv2_i_i15_i_fu_531_p3 <= 
        ap_const_lv10_3FF when (cmp33_i_fu_447_p2(0) = '1') else 
        ap_const_lv10_200;
    conv2_i_i_i295_fu_539_p3 <= 
        ap_const_lv10_0 when (cmp33_i_fu_447_p2(0) = '1') else 
        ap_const_lv10_200;
    empty_83_fu_404_p1 <= height_val_dout(11 - 1 downto 0);
    empty_84_fu_423_p1 <= width_val_dout(14 - 1 downto 0);
    empty_85_fu_443_p1 <= s(8 - 1 downto 0);
    empty_86_fu_479_p1 <= height_val_dout(14 - 1 downto 0);
    empty_fu_399_p1 <= width_val_dout(11 - 1 downto 0);

    enableInput_val_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, enableInput_val_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            enableInput_val_blk_n <= enableInput_val_empty_n;
        else 
            enableInput_val_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    enableInput_val_read <= enableInput_val_read_local;

    enableInput_val_read_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then 
            enableInput_val_read_local <= ap_const_logic_1;
        else 
            enableInput_val_read_local <= ap_const_logic_0;
        end if; 
    end process;

    grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_ap_start <= grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_ap_start_reg;

    height_val4_c_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, height_val4_c_full_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            height_val4_c_blk_n <= height_val4_c_full_n;
        else 
            height_val4_c_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    height_val4_c_din <= empty_83_fu_404_p1;
    height_val4_c_write <= height_val4_c_write_local;

    height_val4_c_write_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then 
            height_val4_c_write_local <= ap_const_logic_1;
        else 
            height_val4_c_write_local <= ap_const_logic_0;
        end if; 
    end process;


    height_val_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, height_val_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            height_val_blk_n <= height_val_empty_n;
        else 
            height_val_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    height_val_cast11_fu_475_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(height_val_dout),17));
    height_val_read <= height_val_read_local;

    height_val_read_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then 
            height_val_read_local <= ap_const_logic_1;
        else 
            height_val_read_local <= ap_const_logic_0;
        end if; 
    end process;

    icmp_fu_499_p2 <= "0" when (tmp_9_fu_489_p4 = ap_const_lv7_0) else "1";
    icmp_ln563_fu_618_p2 <= "1" when (y_fu_184 = loopHeight_reg_798) else "0";

    motionSpeed_val_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, motionSpeed_val_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            motionSpeed_val_blk_n <= motionSpeed_val_empty_n;
        else 
            motionSpeed_val_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    motionSpeed_val_read <= motionSpeed_val_read_local;

    motionSpeed_val_read_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then 
            motionSpeed_val_read_local <= ap_const_logic_1;
        else 
            motionSpeed_val_read_local <= ap_const_logic_0;
        end if; 
    end process;

    ovrlayYUV_din <= grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_ovrlayYUV_din;

    ovrlayYUV_write_assign_proc : process(grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_ovrlayYUV_write, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            ovrlayYUV_write <= grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_ovrlayYUV_write;
        else 
            ovrlayYUV_write <= ap_const_logic_0;
        end if; 
    end process;

    p_cast_fu_459_p4 <= add2_i_fu_453_p2(13 downto 4);

    passthruEndX_val_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, passthruEndX_val_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            passthruEndX_val_blk_n <= passthruEndX_val_empty_n;
        else 
            passthruEndX_val_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    passthruEndX_val_read <= passthruEndX_val_read_local;

    passthruEndX_val_read_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then 
            passthruEndX_val_read_local <= ap_const_logic_1;
        else 
            passthruEndX_val_read_local <= ap_const_logic_0;
        end if; 
    end process;


    passthruEndY_val_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, passthruEndY_val_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            passthruEndY_val_blk_n <= passthruEndY_val_empty_n;
        else 
            passthruEndY_val_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    passthruEndY_val_read <= passthruEndY_val_read_local;

    passthruEndY_val_read_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then 
            passthruEndY_val_read_local <= ap_const_logic_1;
        else 
            passthruEndY_val_read_local <= ap_const_logic_0;
        end if; 
    end process;


    passthruStartX_val_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, passthruStartX_val_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            passthruStartX_val_blk_n <= passthruStartX_val_empty_n;
        else 
            passthruStartX_val_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    passthruStartX_val_read <= passthruStartX_val_read_local;

    passthruStartX_val_read_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then 
            passthruStartX_val_read_local <= ap_const_logic_1;
        else 
            passthruStartX_val_read_local <= ap_const_logic_0;
        end if; 
    end process;


    passthruStartY_val_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, passthruStartY_val_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            passthruStartY_val_blk_n <= passthruStartY_val_empty_n;
        else 
            passthruStartY_val_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    passthruStartY_val_read <= passthruStartY_val_read_local;

    passthruStartY_val_read_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then 
            passthruStartY_val_read_local <= ap_const_logic_1;
        else 
            passthruStartY_val_read_local <= ap_const_logic_0;
        end if; 
    end process;


    patternId_val_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, patternId_val_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            patternId_val_blk_n <= patternId_val_empty_n;
        else 
            patternId_val_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    patternId_val_read <= patternId_val_read_local;

    patternId_val_read_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then 
            patternId_val_read_local <= ap_const_logic_1;
        else 
            patternId_val_read_local <= ap_const_logic_0;
        end if; 
    end process;

    rev_fu_676_p2 <= (ult_reg_883 xor ap_const_lv1_1);

    srcYUV_read_assign_proc : process(grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_srcYUV_read, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            srcYUV_read <= grp_tpgBackground_Pipeline_VITIS_LOOP_565_2_fu_302_srcYUV_read;
        else 
            srcYUV_read <= ap_const_logic_0;
        end if; 
    end process;

    sub10_i_fu_547_p2 <= std_logic_vector(unsigned(height_val_cast11_fu_475_p1) + unsigned(ap_const_lv17_1FFFF));
    sub35_i_fu_525_p2 <= std_logic_vector(unsigned(width_val_cast10_fu_419_p1) + unsigned(ap_const_lv17_1FFFF));
    sub_i_i_i_fu_519_p2 <= std_logic_vector(unsigned(barHeight_cast_fu_515_p1) + unsigned(ap_const_lv11_7FF));
    tmp_9_fu_489_p4 <= colorFormat_val_dout(7 downto 1);
    tmp_fu_505_p4 <= add5_i_fu_483_p2(13 downto 4);
    ult_fu_642_p2 <= "1" when (unsigned(y_fu_184) < unsigned(passthruEndY_val_read_reg_773)) else "0";

    width_val7_c_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, width_val7_c_full_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            width_val7_c_blk_n <= width_val7_c_full_n;
        else 
            width_val7_c_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    width_val7_c_din <= empty_fu_399_p1;
    width_val7_c_write <= width_val7_c_write_local;

    width_val7_c_write_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then 
            width_val7_c_write_local <= ap_const_logic_1;
        else 
            width_val7_c_write_local <= ap_const_logic_0;
        end if; 
    end process;


    width_val_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, width_val_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            width_val_blk_n <= width_val_empty_n;
        else 
            width_val_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    width_val_cast10_fu_419_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(width_val_dout),17));
    width_val_read <= width_val_read_local;

    width_val_read_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then 
            width_val_read_local <= ap_const_logic_1;
        else 
            width_val_read_local <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln1412_fu_561_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(vBarSel),8));
    zext_ln1575_fu_569_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(hBarSel_0),8));
    zext_ln563_1_fu_638_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_fu_184),17));
    zext_ln563_fu_581_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(hBarSel_2_0),8));
    zext_ln750_fu_661_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(motionSpeed_val_read_reg_763),10));
end behav;
